from header_common import *
from header_operations import *
from header_parties import *
from header_items import *
from header_skills import *
from header_triggers import *
from header_troops import *
from header_music import *

from module_constants import *

####################################################################################################################
# Simple triggers are the alternative to old style triggers. They do not preserve state, and thus simpler to maintain.
#
#  Each simple trigger contains the following fields:
# 1) Check interval: How frequently this trigger will be checked
# 2) Operation block: This must be a valid operation block. See header_operations.py for reference. 
####################################################################################################################



simple_triggers = [
	(ti_on_party_encounter,
		[]),

	(ti_simulate_battle,
		[]),

	(1.0,
		[
			(try_begin),
				(eq, "$training_ground_position_changed", 0),
				(assign, "$training_ground_position_changed", 1),
				(set_fixed_point_multiplier, 100),
				(position_set_x, 0, 7050),
				(position_set_y, 0, 7200),
				(party_set_position, "p_training_ground_3", 0),
			(try_end),
			(gt, "$auto_besiege_town", 0),
			(gt, "$g_player_besiege_town", 0),
			(ge, "$g_siege_method", 1),
			(store_current_hours, ":current_hours"),
			(eq, "$g_siege_force_wait", 0),
			(ge, ":current_hours", "$g_siege_method_finish_hours"),
			(neg|is_currently_night),
			(rest_for_hours, 0, 0, 0)
		]),

	(24.0,
		[
			(map_free),
			(assign, ":value", 100000),
			(assign, ":value_2", 100000),
			(assign, ":value_3", 100000),
			(assign, ":value_4", -1),
			(assign, ":value_5", -1),
			(assign, ":value_6", -1),
			(try_for_parties, ":var_7"),
				(party_is_active, ":var_7"),
				(party_get_slot, ":var_7_type", ":var_7", slot_party_type),
				(this_or_next|eq, ":var_7_type", 3),
				(eq, ":var_7_type", 2),
				(party_get_position, 1, ":var_7"),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_var_7_main_party", ":var_7", "p_main_party"),
				(try_begin),
					(lt, ":distance_to_party_from_party_var_7_main_party", ":value"),
					(assign, ":value_3", ":value_2"),
					(assign, ":value_6", ":value_5"),
					(assign, ":value_2", ":value"),
					(assign, ":value_5", ":value_4"),
					(assign, ":value", ":distance_to_party_from_party_var_7_main_party"),
					(assign, ":value_4", ":var_7"),
				(else_try),
					(lt, ":distance_to_party_from_party_var_7_main_party", ":value_2"),
					(assign, ":value_3", ":value_2"),
					(assign, ":value_6", ":value_5"),
					(assign, ":value_2", ":distance_to_party_from_party_var_7_main_party"),
					(assign, ":value_5", ":var_7"),
				(else_try),
					(lt, ":distance_to_party_from_party_var_7_main_party", ":value_3"),
					(assign, ":value_3", ":distance_to_party_from_party_var_7_main_party"),
					(assign, ":value_6", ":var_7"),
				(try_end),
			(try_end),
			(try_begin),
				(neq, ":value_4", -1),
				(str_store_party_name, 63, ":value_4"),
			(try_end),
			(try_begin),
				(neq, ":value_5", -1),
				(str_store_party_name, 62, ":value_5"),
			(try_end),
			(try_begin),
				(neq, ":value_6", -1),
				(str_store_party_name, 61, ":value_6"),
			(try_end)
		]),

	(24.0,
		[
			(try_for_parties, ":var_1"),
				(party_slot_eq, ":var_1", slot_party_type, 16),
				(party_slot_eq, ":var_1", 451, 100),
				(party_get_slot, ":var_1_453", ":var_1", 453),
				(store_current_hours, ":current_hours"),
				(ge, ":current_hours", ":var_1_453"),
				(store_random_in_range, ":random_in_range_0_10", 0, 10),
				(ge, ":random_in_range_0_10", 5),
				(str_store_party_name, 1, ":var_1"),
				(display_message, "@You have a bad feeling about your ship {s1}."),
				(remove_party, ":var_1"),
			(try_end),
			(try_for_parties, ":var_5"),
				(this_or_next|party_slot_eq, ":var_5", 455, 1),
				(party_slot_eq, ":var_5", 455, 2),
				(party_set_slot, ":var_5", 455, 0),
			(try_end)
		]),

	(1.0,
		[
			(try_begin),
				(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
				(eq, ":current_terrain_main_party", 0),
				(neq, "$g_player_icon_state", 2),
				(assign, "$g_player_icon_state", 2),
			(try_end),
			(try_begin),
				(party_get_slot, ":main_party_453", "p_main_party", 453),
				(gt, ":main_party_453", 0),
				(store_current_hours, ":current_hours"),
				(ge, ":current_hours", ":main_party_453"),
				(try_begin),
					(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
					(eq, ":current_terrain_main_party", 0),
					(store_skill_level, ":skill_level_21_player", 21, "trp_player"),
					(val_mul, ":skill_level_21_player", 10),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(ge, ":skill_level_21_player", ":random_in_range_0_100"),
					(store_free_inventory_capacity, ":free_inventory_capacity_player", "trp_player"),
					(try_begin),
						(ge, ":free_inventory_capacity_player", 1),
						(display_message, "@You caught some fish."),
						(troop_add_item, "trp_player", "itm_trade_smoked_fish"),
					(else_try),
						(display_message, "@Due to insufficient space, you had to throw the fish back into the ocean"),
					(try_end),
					(assign, "$g_camp_mode", 0),
					(rest_for_hours_interactive, 0, 5, 1),
					(party_set_slot, "p_main_party", 453, 0),
				(else_try),
					(display_message, "@All you caught were some seaweeds."),
					(assign, "$g_camp_mode", 0),
					(rest_for_hours_interactive, 0, 5, 1),
					(party_set_slot, "p_main_party", 453, -1),
				(try_end),
			(try_end),
			(set_fixed_point_multiplier, 10),
			(try_for_parties, ":var_7"),
				(party_get_template_id, ":template_id_var_7", ":var_7"),
				(this_or_next|eq, ":template_id_var_7", "pt_sea_raiders_ships"),
				(this_or_next|eq, ":template_id_var_7", "pt_sea_raiders_ships_r"),
				(eq, ":template_id_var_7", "pt_sea_raiders_ships_e"),
				(try_begin),
					(party_get_position, 1, ":var_7"),
					(position_get_y, ":position_y_1", 1),
					(position_get_x, ":position_x_1", 1),
					(val_div, ":position_y_1", 10),
					(val_div, ":position_x_1", 10),
					(this_or_next|gt, ":position_y_1", 155),
					(lt, ":position_x_1", -180),
					(assign, reg1, ":position_y_1"),
					(assign, reg2, ":position_x_1"),
					(get_party_ai_current_behavior, ":party_ai_current_behavior_var_7", ":var_7"),
					(assign, reg3, ":party_ai_current_behavior_var_7"),
					(party_set_ai_behavior, ":var_7", 1),
					(party_set_ai_object, ":var_7", "p_ship_raider_spawn_point_1"),
				(else_try),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_var_7_ship_raider_spawn_point_1", ":var_7", "p_ship_raider_spawn_point_1"),
					(lt, ":distance_to_party_from_party_var_7_ship_raider_spawn_point_1", 4),
					(party_get_position, 2, "p_ship_raider_spawn_point_1"),
					(party_set_ai_behavior, ":var_7", 2),
					(party_set_ai_patrol_radius, ":var_7", 10),
					(party_set_ai_target_position, ":var_7", 2),
				(try_end),
			(try_end),
			(try_for_range, ":party", "p_town_1", "p_castle_1"),
				(party_get_slot, ":party_463", ":party", 463),
				(gt, ":party_463", 0),
				(party_get_slot, ":party_464", ":party", 464),
				(store_current_hours, ":current_hours_2"),
				(ge, ":current_hours_2", ":party_464"),
				(call_script, "script_change_player_relation_with_center", ":party", -5, 16724787),
				(try_begin),
					(lt, ":party_463", 100000),
					(val_mul, ":party_463", 14),
					(val_div, ":party_463", 10),
					(try_begin),
						(gt, ":party_463", 100000),
						(assign, ":party_463", 100000),
					(try_end),
					(val_add, ":party_464", 336),
					(party_set_slot, ":party", 463, ":party_463"),
					(party_set_slot, ":party", 464, ":party_464"),
					(str_store_party_name, 1, ":party"),
					(display_message, "@You missed the deadline to pay back your debts to the Iron Bank. They now grow at an interest of 50%."),
				(else_try),
					(assign, ":party_463", 100000),
					(val_add, ":party_464", 336),
					(party_set_slot, ":party", 463, ":party_463"),
					(party_set_slot, ":party", 464, ":party_464"),
					(store_faction_of_party, ":faction_of_party_party", ":party"),
					(call_script, "script_change_player_relation_with_faction_ex", ":faction_of_party_party", -10),
					(str_store_party_name, 1, ":party"),
					(display_message, "@Your debt to the Iron Bank is now so staggering that they have given up on ever getting their coin back. But they have other ways of getting their due...", 0x00ff3333),
				(try_end),
			(try_end),
			(try_for_range, ":party_2", "p_town_1", "p_looter_spawn_point"),
				(party_slot_eq, ":party_2", 454, 0),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_var_7_ship_raider_spawn_point_1", ":party_2", "p_main_party"),
				(le, ":distance_to_party_from_party_var_7_ship_raider_spawn_point_1", 20),
				(party_set_slot, ":party_2", 454, 1),
				(eq, "$g_fog", 1),
				(party_set_flags, ":party_2", 16384, 1),
			(try_end)
		]),

	(336.0,
		[
			(try_for_range, ":party", "p_town_1", "p_castle_1"),
				(party_get_slot, ":party_town_prosperity", ":party", slot_town_prosperity),
				(party_get_slot, ":party_459", ":party", 459),
				(assign, ":value", 0),
				(try_begin),
					(ge, ":party_town_prosperity", 60),
					(store_sub, ":value", ":party_town_prosperity", 60),
					(val_div, ":value", 5),
					(val_add, ":value", 3),
				(else_try),
					(le, ":party_town_prosperity", 40),
					(store_sub, ":value", 40),
					(val_div, ":value", 5),
					(val_sub, ":value", 3),
				(try_end),
				(store_div, ":value_2", ":party_459", 100),
				(val_mul, ":value", ":value_2"),
				(val_add, ":party_459", ":value"),
				(try_begin),
					(gt, ":party_459", 1000000),
					(assign, ":party_459", 1000000),
					(party_set_slot, ":party", 459, ":party_459"),
				(else_try),
					(lt, ":party_459", 1500),
					(assign, ":party_459", 1500),
					(party_set_slot, ":party", 459, ":party_459"),
				(else_try),
					(party_set_slot, ":party", 459, ":party_459"),
				(try_end),
			(try_end),
			(try_for_range, ":party", "p_town_1", "p_castle_1"),
				(party_get_slot, ":party_459", ":party", 459),
				(party_get_slot, ":party_456", ":party", 456),
				(party_get_slot, ":party_458", ":party", 458),
				(party_get_slot, ":party_town_prosperity", ":party", slot_town_prosperity),
				(store_sub, ":value_3", ":party_town_prosperity", 50),
				(val_add, ":value_3", 100),
				(try_begin),
					(store_div, ":value_4", ":party_459", 200),
					(store_add, ":value_5", ":party_456", ":party_458"),
					(store_sub, ":value_6", ":value_5", ":value_4"),
					(try_begin),
						(lt, ":value_5", ":value_4"),
						(store_sub, ":value_7", ":value_4", ":value_5"),
						(val_add, ":party_456", ":value_7"),
						(party_set_slot, ":party", 456, ":party_456"),
					(else_try),
						(ge, ":value_6", 20),
						(val_sub, ":party_456", 2),
						(party_set_slot, ":party", 456, ":party_456"),
					(try_end),
					(try_begin),
						(le, ":value_5", ":value_4"),
						(val_mul, ":party_458", ":value_3"),
						(party_set_slot, ":party", 460, ":party_458"),
					(else_try),
						(store_mul, ":value_8", ":value_6", -1),
						(val_add, ":value_8", ":value_3"),
						(try_begin),
							(ge, ":value_8", 85),
							(val_mul, ":party_458", ":value_8"),
							(party_set_slot, ":party", 460, ":party_458"),
						(else_try),
							(store_sub, ":value_9", ":value_6", 15),
							(val_sub, ":party_458", ":value_9"),
							(try_begin),
								(lt, ":value_8", 0),
								(assign, ":value_8", 0),
							(try_end),
							(val_mul, ":party_458", ":value_8"),
							(party_set_slot, ":party", 460, ":party_458"),
							(val_mul, ":value_9", -50),
							(party_set_slot, ":party", 461, ":value_9"),
						(try_end),
					(try_end),
				(try_end),
				(party_get_slot, ":party_462", ":party", 462),
				(party_get_slot, ":party_460", ":party", 460),
				(party_get_slot, ":party_461", ":party", 461),
				(val_add, ":party_462", ":party_460"),
				(val_add, ":party_462", ":party_461"),
				(party_set_slot, ":party", 462, ":party_462"),
			(try_end)
		]),

	(0.0,
		[
			(try_begin),
				(eq, "$bug_fix_version", 0),
				(disable_party, "p_test_scene"),
				(party_set_slot, "p_town_1", slot_center_siege_with_belfry, 0),
				(faction_set_note_available, "fac_player_faction", 0),
				(faction_set_note_available, "fac_no_faction", 0),
				(try_begin),
					(neg|check_quest_active, "qst_kidnapped_girl"),
					(party_remove_members, "p_main_party", "trp_kidnapped_girl", 1),
				(try_end),
				(try_for_range, ":troop", "trp_knight_1_1", "trp_kingdom_1_pretender"),
					(try_begin),
						(troop_slot_eq, ":troop", slot_troop_occupation, 0),
						(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
						(is_between, ":faction_of_troop_troop", "fac_kingdom_1", "fac_kingdoms_end"),
						(troop_set_slot, ":troop", slot_troop_occupation, 2),
					(try_end),
				(try_end),
				(call_script, "script_initialize_item_info"),
				(assign, "$bug_fix_version", 1),
			(try_end),
			(eq, "$g_player_is_captive", 1),
			(gt, "$capturer_party", 0),
			(party_is_active, "$capturer_party"),
			(party_relocate_near_party, "p_main_party", "$capturer_party", 0)
		]),

	(0.0,
		[
			(try_begin),
				(gt, "$g_last_rest_center", 0),
				(party_get_battle_opponent, ":battle_opponent_l_g_last_rest_center", "$g_last_rest_center"),
				(gt, ":battle_opponent_l_g_last_rest_center", 0),
				(store_faction_of_party, ":faction_of_party_g_last_rest_center", "$g_last_rest_center"),
				(store_relation, ":relation_faction_of_party_g_last_rest_center_player_supporters_faction", ":faction_of_party_g_last_rest_center", "fac_player_supporters_faction"),
				(store_faction_of_party, ":faction_of_party_battle_opponent_l_g_last_rest_center", ":battle_opponent_l_g_last_rest_center"),
				(store_relation, ":relation_faction_of_party_battle_opponent_l_g_last_rest_center_player_supporters_faction", ":faction_of_party_battle_opponent_l_g_last_rest_center", "fac_player_supporters_faction"),
				(ge, ":relation_faction_of_party_g_last_rest_center_player_supporters_faction", 0),
				(lt, ":relation_faction_of_party_battle_opponent_l_g_last_rest_center_player_supporters_faction", 0),
				(start_encounter, "$g_last_rest_center"),
				(rest_for_hours, 0, 0, 0),
			(else_try),
				(store_current_hours, ":current_hours"),
				(assign, ":value", 0),
				(try_begin),
					(neq, "$g_check_autos_at_hour", 0),
					(ge, ":current_hours", "$g_check_autos_at_hour"),
					(assign, ":value", 1),
					(assign, "$g_check_autos_at_hour", 0),
				(try_end),
				(this_or_next|eq, ":value", 1),
				(map_free),
				(try_begin),
					(ge, "$auto_menu", 1),
					(jump_to_menu, "$auto_menu"),
					(assign, "$auto_menu", -1),
				(else_try),
					(ge, "$auto_enter_town", 1),
					(start_encounter, "$auto_enter_town"),
				(else_try),
					(ge, "$g_camp_mode", 1),
					(assign, "$g_camp_mode", 0),
					(assign, "$g_infinite_camping", 0),
					(try_begin),
						(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
						(gt, ":current_terrain_main_party", 0),
						(assign, "$g_player_icon_state", 0),
					(else_try),
						(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
						(eq, ":current_terrain_main_party", 0),
						(assign, "$g_player_icon_state", 2),
						(party_set_flags, "p_main_party", 512, 1),
					(try_end),
					(rest_for_hours, 0, 0, 0),
					(display_message, "@Breaking camp..."),
				(try_end),
			(try_end)
		]),

	(0.0,
		[
			(troop_slot_ge, "trp_notification_menu_types", 0, 1),
			(troop_get_slot, ":notification_menu_types_relations_begin", "trp_notification_menu_types", slot_troop_relations_begin),
			(troop_get_slot, "$g_notification_menu_var1", "trp_notification_menu_var1", slot_troop_relations_begin),
			(troop_get_slot, "$g_notification_menu_var2", "trp_notification_menu_var2", slot_troop_relations_begin),
			(jump_to_menu, ":notification_menu_types_relations_begin"),
			(assign, ":var_2", 2),
			(try_for_range, ":number", 1, ":var_2"),
				(try_begin),
					(troop_slot_ge, "trp_notification_menu_types", ":number", 1),
					(val_add, ":var_2", 1),
				(try_end),
				(store_sub, ":value", ":number", 1),
				(troop_get_slot, ":notification_menu_types_number", "trp_notification_menu_types", ":number"),
				(troop_set_slot, "trp_notification_menu_types", ":value", ":notification_menu_types_number"),
				(troop_get_slot, ":notification_menu_types_number", "trp_notification_menu_var1", ":number"),
				(troop_set_slot, "trp_notification_menu_var1", ":value", ":notification_menu_types_number"),
				(troop_get_slot, ":notification_menu_types_number", "trp_notification_menu_var2", ":number"),
				(troop_set_slot, "trp_notification_menu_var2", ":value", ":notification_menu_types_number"),
			(try_end)
		]),

	(1.0,
		[
			(map_free),
			(call_script, "script_music_set_situation_with_culture", 65536)
		]),

	(0.0,
		[
			(try_begin),
				(eq, "$caravan_escort_state", 1),
				(party_is_active, "$caravan_escort_party_id"),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_caravan_escort_destination_town_caravan_escort_party_id", "$caravan_escort_destination_town", "$caravan_escort_party_id"),
				(lt, ":distance_to_party_from_party_caravan_escort_destination_town_caravan_escort_party_id", 2),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_main_party_caravan_escort_party_id", "p_main_party", "$caravan_escort_party_id"),
				(lt, ":distance_to_party_from_party_main_party_caravan_escort_party_id", 5),
				(assign, "$talk_context", 2),
				(assign, "$g_encountered_party", "$caravan_escort_party_id"),
				(party_stack_get_troop_id, ":party_stack_troop_id_caravan_escort_party_id_0", "$caravan_escort_party_id", 0),
				(party_stack_get_troop_dna, ":party_stack_troop_dna_caravan_escort_party_id_0", "$caravan_escort_party_id", 0),
				(start_map_conversation, ":party_stack_troop_id_caravan_escort_party_id_0", ":party_stack_troop_dna_caravan_escort_party_id_0"),
			(try_end),
			(try_begin),
				(gt, "$g_reset_mission_participation", 1),
				(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
					(troop_set_slot, ":troop", slot_troop_mission_participation, 0),
				(try_end),
			(try_end)
		]),

	(24.0,
		[
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(faction_get_slot, ":faction_morale_of_player_troops", ":faction", slot_faction_morale_of_player_troops),
				(store_sub, ":value", 140, "$player_right_to_rule"),
				(val_div, ":value", 14),
				(val_max, ":value", 1),
				(store_div, ":value_2", ":faction_morale_of_player_troops", ":value"),
				(val_sub, ":faction_morale_of_player_troops", ":value_2"),
				(faction_set_slot, ":faction", slot_faction_morale_of_player_troops, ":faction_morale_of_player_troops"),
			(try_end)
		]),

	(4.0,
		[
			(try_for_range, ":troop", "trp_knight_1_1_wife", "trp_heroes_end"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 6),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(try_begin),
					(gt, ":troop_leaded_party", 0),
					(neg|party_is_active, ":troop_leaded_party"),
					(assign, ":troop_leaded_party", -1),
				(try_end),
				(lt, ":troop_leaded_party", 1),
				(neg|troop_slot_ge, ":troop", 8, 0),
				(call_script, "script_get_kingdom_lady_social_determinants", ":troop"),
				(assign, ":var_3", reg1),
				(troop_set_slot, ":troop", slot_troop_cur_center, ":var_3"),
			(try_end)
		]),

	(2.0,
		[
			(eq, "$cheat_mode", 1),
			(assign, ":value", 0),
			(try_for_parties, ":var_2"),
				(gt, ":var_2", "p_spawn_points_end"),
				(party_stack_get_troop_id, ":party_stack_troop_id_var_2_0", ":var_2", 0),
				(is_between, ":party_stack_troop_id_var_2_0", "trp_npc1", "trp_heroes_end"),
				(this_or_next|troop_slot_eq, ":party_stack_troop_id_var_2_0", slot_troop_occupation, 2),
				(is_between, ":party_stack_troop_id_var_2_0", "trp_npc1", "trp_knight_1_1_wife"),
				(troop_get_slot, ":party_stack_troop_id_var_2_0_leaded_party", ":party_stack_troop_id_var_2_0", slot_troop_leaded_party),
				(neq, ":var_2", ":party_stack_troop_id_var_2_0_leaded_party"),
				(assign, reg4, ":var_2"),
				(assign, reg5, ":party_stack_troop_id_var_2_0_leaded_party"),
				(str_store_troop_name, 3, ":party_stack_troop_id_var_2_0"),
				(display_message, "@{!}{s3} commander of party #{reg4} which is not his troop leaded party {reg5}"),
				(try_begin),
					(gt, reg4, 0),
					(gt, reg5, 0),
					(str_store_party_name, 3, reg4),
					(str_store_party_name, 65, reg5),
					(display_message, "@{!} Commanded party #{reg4} is {s3}, troop leaded party #{reg5} is {s65}"),
					(str_store_troop_name, 3, ":party_stack_troop_id_var_2_0"),
				(try_end),
				(str_store_string, 65, "str_party_with_commander_mismatch__check_log_for_details_"),
				(try_begin),
					(eq, ":value", 0),
					(call_script, "script_add_notification_menu", "mnu_debug_alert_from_s65", 0, 0),
					(assign, ":value", 1),
				(try_end),
			(try_end)
		]),

	(24.0,
		[
			(try_begin),
				(neg|check_quest_active, "qst_visit_lady"),
				(neg|troop_slot_ge, "trp_player", 8, 1),
				(neg|troop_slot_ge, "trp_player", 30, "trp_npc1"),
				(assign, ":value", -1),
				(assign, ":value_2", 120),
				(try_for_range, ":troop", "trp_knight_1_1_wife", "trp_heroes_end"),
					(neg|troop_slot_ge, ":troop", 2, 11),
					(neg|troop_slot_eq, "trp_player", slot_troop_betrothed, ":troop"),
					(troop_slot_ge, ":troop", 5, 2),
					(neg|troop_slot_eq, ":troop", slot_troop_met, 4),
					(troop_slot_eq, ":troop", slot_troop_love_interest_3, 0),
					(troop_slot_eq, ":troop", slot_troop_spouse, -1),
					(troop_get_slot, ":troop_cur_center", ":troop", slot_troop_cur_center),
					(is_between, ":troop_cur_center", "p_town_1", "p_village_1"),
					(call_script, "script_troop_get_relation_with_troop", "trp_player", ":troop"),
					(gt, reg0, 1),
					(store_current_hours, ":current_hours"),
					(troop_get_slot, ":troop_last_talk_time", ":troop", slot_troop_last_talk_time),
					(val_sub, ":current_hours", ":troop_last_talk_time"),
					(gt, ":current_hours", ":value_2"),
					(assign, ":value_2", ":current_hours"),
					(assign, ":value", ":troop"),
					(assign, ":var_7", ":troop_cur_center"),
				(try_end),
				(try_begin),
					(gt, ":value", 0),
					(call_script, "script_add_notification_menu", "mnu_notification_lady_requests_visit", ":value", ":var_7"),
				(try_end),
			(try_end)
		]),

	(1.0,
		[
			(ge, "$g_player_raiding_village", 1),
			(try_begin),
				(neq, "$g_player_is_captive", 0),
				(assign, "$g_player_raiding_village", 0),
			(else_try),
				(this_or_next|party_slot_eq, "$g_player_raiding_village", slot_village_state, 2),
				(party_slot_eq, "$g_player_raiding_village", slot_village_state, 4),
				(start_encounter, "$g_player_raiding_village"),
				(rest_for_hours, 0),
				(assign, "$g_player_raiding_village", 0),
				(assign, "$g_player_raid_complete", 1),
			(else_try),
				(party_slot_eq, "$g_player_raiding_village", slot_village_state, 1),
				(rest_for_hours_interactive, 3, 5, 1),
			(else_try),
				(rest_for_hours, 0, 0, 0),
				(assign, "$g_player_raiding_village", 0),
				(assign, "$g_player_raid_complete", 0),
			(try_end)
		]),

	(168.0,
		[
			(store_current_hours, "$g_next_pay_time"),
			(val_add, "$g_next_pay_time", 168),
			(assign, "$g_presentation_lines_to_display_begin", 0),
			(assign, "$g_presentation_lines_to_display_end", 15),
			(assign, "$g_apply_budget_report_to_gold", 1),
			(try_begin),
				(eq, "$g_infinite_camping", 0),
				(start_presentation, "prsnt_budget_report"),
				(try_begin),
					(gt, "$g_player_debt_to_party_members", 5000),
					(call_script, "script_add_notification_menu", "mnu_dplmc_deserters", 20, 0),
				(try_end),
			(try_end)
		]),

	(24.0,
		[
			(le, "$auto_menu", 0),
			(gt, "$players_kingdom", 0),
			(neq, "$players_kingdom", "fac_player_supporters_faction"),
			(eq, "$player_has_homage", 0),
			(troop_get_slot, ":player_spouse", "trp_player", slot_troop_spouse),
			(assign, ":value", 0),
			(try_begin),
				(is_between, ":player_spouse", "trp_npc1", "trp_knight_1_1_wife"),
				(store_faction_of_troop, ":faction_of_troop_player_spouse", ":player_spouse"),
				(eq, ":faction_of_troop_player_spouse", "$players_kingdom"),
				(assign, ":value", 1),
			(try_end),
			(eq, ":value", 0),
			(store_current_day, ":current_day"),
			(gt, ":current_day", "$mercenary_service_next_renew_day"),
			(jump_to_menu, "mnu_oath_fulfilled")
		]),

	(180.0,
		[
			(val_sub, "$g_player_luck", 1),
			(val_max, "$g_player_luck", 0)
		]),

	(72.0,
		[
			(assign, "$lady_flirtation_location", 0)
		]),

	(4.0,
		[
			(assign, "$g_time_to_spare", 1),
			(try_begin),
				(troop_slot_ge, "trp_player", 30, "trp_npc1"),
				(assign, "$g_player_banner_granted", 1),
			(try_end)
		]),

	(24.0,
		[
			(eq, "$g_player_banner_granted", 1),
			(troop_slot_eq, "trp_player", slot_troop_banner_scene_prop, 0),
			(le, "$auto_menu", 0),
			(start_presentation, "prsnt_banner_selection")
		]),

	(24.0,
		[
			(call_script, "script_get_player_party_morale_values"),
			(assign, ":var_1", reg0),
			(party_get_morale, ":morale_main_party", "p_main_party"),
			(store_sub, ":value", ":var_1", ":morale_main_party"),
			(store_div, ":value_2", ":value", 5),
			(store_mul, ":value_3", ":value_2", 5),
			(try_begin),
				(neq, ":value_3", ":value"),
				(try_begin),
					(gt, ":value", 0),
					(val_add, ":value_2", 1),
				(else_try),
					(val_sub, ":value_2", 1),
				(try_end),
			(try_end),
			(val_add, ":morale_main_party", ":value_2"),
			(party_set_morale, "p_main_party", ":morale_main_party")
		]),

	(168.0,
		[
			(try_for_range, ":party", "p_town_1", "p_salt_mine"),
				(party_get_num_prisoner_stacks, ":num_prisoner_stacks_party", ":party"),
				(try_for_range_backwards, ":var_3", 0, ":num_prisoner_stacks_party"),
					(party_prisoner_stack_get_troop_id, ":party_prisoner_stack_troop_id_party_var_3", ":party", ":var_3"),
					(neg|troop_is_hero, ":party_prisoner_stack_troop_id_party_var_3"),
					(party_prisoner_stack_get_size, ":party_prisoner_stack_size_party_var_3", ":party", ":var_3"),
					(store_random_in_range, ":random_in_range_0_40", 0, 40),
					(val_mul, ":party_prisoner_stack_size_party_var_3", ":random_in_range_0_40"),
					(val_div, ":party_prisoner_stack_size_party_var_3", 100),
					(party_remove_prisoners, ":party", ":party_prisoner_stack_troop_id_party_var_3", ":party_prisoner_stack_size_party_var_3"),
					(try_begin),
						(ge, "$g_dplmc_gold_changes", 2),
						(ge, ":party", 1),
						(this_or_next|party_slot_eq, ":party", slot_party_type, 3),
						(party_slot_eq, ":party", slot_party_type, 2),
						(party_slot_ge, ":party", 7, 1),
						(party_get_slot, ":party_town_wealth", ":party", slot_town_wealth),
						(lt, ":party_town_wealth", 6000),
						(store_mul, ":value", ":party_prisoner_stack_size_party_var_3", 10),
						(val_add, ":party_town_wealth", ":value"),
						(party_set_slot, ":party", slot_town_wealth, ":party_town_wealth"),
					(try_end),
				(try_end),
			(try_end)
		]),

	(168.0,
		[
			(assign, ":var_1", reg0),
			(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
				(this_or_next|is_between, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(troop_get_slot, ":troop_player_debt", ":troop", slot_troop_player_debt),
				(val_mul, ":troop_player_debt", 101),
				(val_div, ":troop_player_debt", 100),
				(troop_set_slot, ":troop", slot_troop_player_debt, ":troop_player_debt"),
				(call_script, "script_calculate_hero_weekly_net_income_and_add_to_wealth", ":troop"),
			(try_end),
			(store_current_hours, ":current_hours"),
			(val_sub, ":current_hours", 336),
			(try_for_range, ":party", "p_town_1", "p_village_1"),
				(neg|party_slot_eq, ":party", slot_town_lord, "trp_player"),
				(neg|party_slot_eq, ":party", slot_town_lord, 0),
				(this_or_next|party_slot_ge, ":party", 403, ":current_hours"),
				(party_slot_ge, ":party", 7, 1),
				(this_or_next|ge, "$g_dplmc_gold_changes", 1),
				(party_slot_ge, ":party", 7, 1),
				(party_get_slot, ":party_town_wealth", ":party", slot_town_wealth),
				(party_get_slot, ":party_town_prosperity", ":party", slot_town_prosperity),
				(store_mul, ":value", ":party_town_prosperity", 15),
				(val_add, ":value", 700),
				(try_begin),
					(party_slot_eq, ":party", slot_party_type, 3),
					(val_mul, ":value", 3),
					(val_div, ":value", 2),
				(try_end),
				(val_add, ":party_town_wealth", ":value"),
				(call_script, "script_calculate_weekly_party_wage", ":party"),
				(val_sub, ":party_town_wealth", reg0),
				(try_begin),
					(lt, ":party_town_wealth", 0),
					(ge, "$g_dplmc_gold_changes", 1),
					(assign, ":var_9", reg0),
					(store_party_size_wo_prisoners, ":party_size_wo_prisoners_party", ":party"),
					(call_script, "script_party_get_ideal_size", ":party"),
					(val_mul, reg0, 5),
					(val_div, reg0, 4),
					(ge, ":party_size_wo_prisoners_party", reg0),
					(store_sub, ":value_2", 0, ":party_town_wealth"),
					(val_mul, ":value_2", 100),
					(val_div, ":value_2", ":var_9"),
					(val_div, ":value_2", 5),
					(call_script, "script_party_inflict_attrition", ":party", ":value_2", 1),
				(try_end),
				(party_slot_ge, ":party", 7, 1),
				(val_max, ":party_town_wealth", 0),
				(party_set_slot, ":party", slot_town_wealth, ":party_town_wealth"),
			(try_end),
			(assign, reg0, ":var_1")
		]),

	(24.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(ge, ":troop_leaded_party", 1),
				(party_is_active, ":troop_leaded_party"),
				(party_get_attached_to, ":attached_to_troop_leaded_party", ":troop_leaded_party"),
				(is_between, ":attached_to_troop_leaded_party", "p_town_1", "p_salt_mine"),
				(party_slot_eq, ":attached_to_troop_leaded_party", slot_center_is_besieged_by, -1),
				(store_faction_of_party, ":faction_of_party_troop_leaded_party", ":troop_leaded_party"),
				(try_begin),
					(this_or_next|eq, ":faction_of_party_troop_leaded_party", "fac_player_supporters_faction"),
					(eq, ":faction_of_party_troop_leaded_party", "$players_kingdom"),
					(assign, ":value", 1),
					(store_random_in_range, ":random_in_range_0_2", 0, 2),
					(val_add, ":value", ":random_in_range_0_2"),
				(else_try),
					(game_get_reduce_campaign_ai, ":game_reduce_campaign_ai"),
					(try_begin),
						(eq, ":game_reduce_campaign_ai", 0),
						(assign, ":value", 2),
					(else_try),
						(eq, ":game_reduce_campaign_ai", 1),
						(assign, ":value", 1),
						(store_random_in_range, ":random_in_range_0_2", 0, 2),
						(val_add, ":value", ":random_in_range_0_2"),
					(else_try),
						(eq, ":game_reduce_campaign_ai", 2),
						(assign, ":value", 1),
					(try_end),
				(try_end),
				(try_begin),
					(this_or_next|faction_slot_eq, ":faction_of_party_troop_leaded_party", slot_faction_leader, ":troop"),
					(faction_slot_eq, ":faction_of_party_troop_leaded_party", slot_faction_marshall, ":troop"),
					(val_add, ":value", 1),
				(try_end),
				(troop_get_slot, ":troop_wealth", ":troop", slot_troop_wealth),
				(store_div, ":value_2", ":troop_wealth", 10000),
				(val_add, ":value_2", 1),
				(assign, ":var_10", 0),
				(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
				(try_for_range, ":party", "p_town_1", "p_salt_mine"),
					(store_faction_of_party, ":faction_of_party_party", ":party"),
					(eq, ":faction_of_party_party", ":faction_of_troop_troop"),
					(try_begin),
						(party_slot_eq, ":party", slot_party_type, 4),
						(val_add, ":var_10", 1),
					(else_try),
						(party_slot_eq, ":party", slot_party_type, 2),
						(val_add, ":var_10", 2),
					(else_try),
						(party_slot_eq, ":party", slot_party_type, 3),
						(val_add, ":var_10", 4),
					(try_end),
				(try_end),
				(val_max, ":var_10", 1),
				(store_div, ":value_3", 9, ":var_10"),
				(val_add, ":value_3", 1),
				(val_mul, ":value_2", ":value_3"),
				(val_add, ":value", ":value_2"),
				(try_for_range, ":unused", 0, ":value"),
					(call_script, "script_hire_men_to_kingdom_hero_party", ":troop"),
				(try_end),
			(try_end),
			(try_for_range, ":party_2", "p_town_1", "p_village_1"),
				(neg|party_slot_eq, ":party_2", slot_town_lord, "trp_player"),
				(party_slot_ge, ":party_2", 7, 1),
				(party_slot_eq, ":party_2", slot_center_is_besieged_by, -1),
				(store_faction_of_party, ":faction_of_party_party_2", ":party_2"),
				(try_begin),
					(this_or_next|eq, ":faction_of_party_party_2", "fac_player_supporters_faction"),
					(eq, ":faction_of_party_party_2", "$players_kingdom"),
					(assign, ":value", 1),
					(assign, ":value_4", 450),
				(else_try),
					(game_get_reduce_campaign_ai, ":game_reduce_campaign_ai"),
					(assign, ":value_4", 450),
					(try_begin),
						(eq, ":game_reduce_campaign_ai", 0),
						(assign, ":value_4", 300),
						(store_random_in_range, ":value", 0, 2),
						(val_add, ":value", 1),
					(else_try),
						(eq, ":game_reduce_campaign_ai", 1),
						(assign, ":value_4", 450),
						(assign, ":value", 1),
					(else_try),
						(eq, ":game_reduce_campaign_ai", 2),
						(assign, ":value_4", 600),
						(store_random_in_range, ":value", 0, 2),
					(try_end),
				(try_end),
				(try_begin),
					(is_between, ":party_2", "p_town_1", "p_castle_1"),
					(val_add, ":value", 1),
				(try_end),
				(try_for_range, ":unused", 0, ":value"),
					(party_get_slot, ":troop_wealth", ":party_2", slot_town_wealth),
					(assign, ":var_19", ":troop_wealth"),
					(val_div, ":var_19", 2),
					(gt, ":var_19", ":value_4"),
					(call_script, "script_cf_reinforce_party", ":party_2"),
					(val_sub, ":troop_wealth", ":value_4"),
					(party_set_slot, ":party_2", slot_town_wealth, ":troop_wealth"),
				(try_end),
			(try_end),
			(try_for_range, ":party_2", "p_town_1", "p_salt_mine"),
				(neg|is_between, ":party_2", "p_castle_1", "p_village_1"),
				(call_script, "script_get_center_ideal_prosperity", ":party_2"),
				(assign, ":var_20", reg0),
				(party_get_slot, ":party_2_town_prosperity", ":party_2", slot_town_prosperity),
				(try_begin),
					(gt, ":party_2_town_prosperity", ":var_20"),
					(call_script, "script_change_center_prosperity", ":party_2", -1),
					(val_add, "$newglob_total_prosperity_from_convergence", -1),
				(else_try),
					(lt, ":party_2_town_prosperity", ":var_20"),
					(call_script, "script_change_center_prosperity", ":party_2", 1),
					(val_add, "$newglob_total_prosperity_from_convergence", 1),
				(try_end),
			(try_end)
		]),

	(360.0,
		[]),

	(6.0,
		[
			(store_current_day, ":current_day"),
			(try_begin),
				(neq, ":current_day", "$g_last_half_payment_check_day"),
				(assign, "$g_last_half_payment_check_day", ":current_day"),
				(try_begin),
					(eq, "$g_half_payment_checkpoint", 1),
					(val_add, "$g_cur_week_half_daily_wage_payments", 1),
				(try_end),
				(assign, "$g_half_payment_checkpoint", 1),
			(try_end),
			(assign, ":value", 0),
			(try_begin),
				(neg|map_free),
				(ge, "$g_last_rest_center", 0),
				(this_or_next|party_slot_eq, "$g_last_rest_center", slot_center_has_manor, 1),
				(is_between, "$g_last_rest_center", "p_town_1", "p_village_1"),
				(assign, ":value", 1),
			(try_end),
			(eq, ":value", 0),
			(assign, "$g_half_payment_checkpoint", 0)
		]),

	(48.0,
		[
			(call_script, "script_randomly_start_war_peace_new", 1),
			(try_begin),
				(store_random_in_range, ":random_in_range_village_1_salt_mine", "p_village_1", "p_salt_mine"),
				(store_random_in_range, ":random_in_range_village_1_salt_mine_2", "p_village_1", "p_salt_mine"),
				(store_faction_of_party, ":faction_of_party_random_in_range_village_1_salt_mine", ":random_in_range_village_1_salt_mine"),
				(store_faction_of_party, ":faction_of_party_random_in_range_village_1_salt_mine_2", ":random_in_range_village_1_salt_mine_2"),
				(neq, ":random_in_range_village_1_salt_mine", ":random_in_range_village_1_salt_mine_2"),
				(neq, ":faction_of_party_random_in_range_village_1_salt_mine", ":faction_of_party_random_in_range_village_1_salt_mine_2"),
				(call_script, "script_diplomacy_faction_get_diplomatic_status_with_faction", ":faction_of_party_random_in_range_village_1_salt_mine_2", ":faction_of_party_random_in_range_village_1_salt_mine"),
				(eq, reg0, 0),
				(try_begin),
					(party_slot_eq, ":random_in_range_village_1_salt_mine", slot_center_original_faction, ":faction_of_party_random_in_range_village_1_salt_mine_2"),
					(call_script, "script_add_notification_menu", "mnu_notification_border_incident", ":random_in_range_village_1_salt_mine", -1),
				(else_try),
					(party_slot_eq, ":random_in_range_village_1_salt_mine", slot_center_ex_faction, ":faction_of_party_random_in_range_village_1_salt_mine_2"),
					(call_script, "script_add_notification_menu", "mnu_notification_border_incident", ":random_in_range_village_1_salt_mine", -1),
				(else_try),
					(set_fixed_point_multiplier, 1),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_random_in_range_village_1_salt_mine_random_in_range_village_1_salt_mine_2", ":random_in_range_village_1_salt_mine", ":random_in_range_village_1_salt_mine_2"),
					(lt, ":distance_to_party_from_party_random_in_range_village_1_salt_mine_random_in_range_village_1_salt_mine_2", 25),
					(call_script, "script_add_notification_menu", "mnu_notification_border_incident", ":random_in_range_village_1_salt_mine", ":random_in_range_village_1_salt_mine_2"),
				(try_end),
			(try_end),
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(faction_slot_eq, ":faction", slot_faction_state, 0),
				(try_for_range, ":faction_2", "fac_player_supporters_faction", "fac_kingdoms_end"),
					(neq, ":faction", ":faction_2"),
					(faction_slot_eq, ":faction_2", slot_faction_state, 0),
					(store_add, ":value", ":faction_2", 120),
					(val_sub, ":value", "fac_player_supporters_faction"),
					(faction_get_slot, ":faction_value", ":faction", ":value"),
					(try_begin),
						(ge, ":faction_value", 1),
						(try_begin),
							(eq, ":faction_value", 1),
							(call_script, "script_update_faction_notes", ":faction"),
							(lt, ":faction", ":faction_2"),
							(call_script, "script_add_notification_menu", "mnu_notification_truce_expired", ":faction", ":faction_2"),
						(else_try),
							(eq, ":faction_value", 31),
							(call_script, "script_update_faction_notes", ":faction"),
							(lt, ":faction", ":faction_2"),
						(else_try),
							(eq, ":faction_value", 31),
							(call_script, "script_update_faction_notes", ":faction"),
							(lt, ":faction", ":faction_2"),
						(else_try),
							(eq, ":faction_value", 31),
							(call_script, "script_update_faction_notes", ":faction"),
							(lt, ":faction", ":faction_2"),
						(try_end),
						(val_sub, ":faction_value", 1),
						(faction_set_slot, ":faction", ":value", ":faction_value"),
					(try_end),
					(store_add, ":value_2", ":faction_2", 130),
					(val_sub, ":value_2", "fac_player_supporters_faction"),
					(faction_get_slot, ":faction_value_2", ":faction", ":value_2"),
					(try_begin),
						(ge, ":faction_value_2", 1),
						(try_begin),
							(store_relation, ":relation_faction_faction_2", ":faction", ":faction_2"),
							(lt, ":relation_faction_faction_2", 0),
							(faction_set_slot, ":faction", ":value_2", 0),
						(else_try),
							(eq, ":faction_value_2", 1),
							(faction_set_slot, ":faction", ":value_2", 0),
						(else_try),
							(val_sub, ":faction_value_2", 1),
							(faction_set_slot, ":faction", ":value_2", ":faction_value_2"),
						(try_end),
					(try_end),
					(try_begin),
						(store_relation, ":relation_faction_faction_2", ":faction", ":faction_2"),
						(lt, ":relation_faction_faction_2", 0),
						(store_add, ":value_3", ":faction_2", 140),
						(val_sub, ":value_3", "fac_player_supporters_faction"),
						(faction_get_slot, ":faction_value_3", ":faction", ":value_3"),
						(val_add, ":faction_value_3", 1),
						(faction_set_slot, ":faction", ":value_3", ":faction_value_3"),
					(try_end),
				(try_end),
				(call_script, "script_update_faction_notes", ":faction"),
			(try_end)
		]),

	(48.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(gt, ":troop_leaded_party", "p_salt_mine"),
				(party_is_active, ":troop_leaded_party"),
				(store_skill_level, ":skill_level_17_troop", 17, ":troop"),
				(val_add, ":skill_level_17_troop", 5),
				(store_mul, ":value", ":skill_level_17_troop", 1000),
				(assign, ":value_2", 30),
				(try_begin),
					(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
					(neq, ":faction_of_troop_troop", "$players_kingdom"),
					(game_get_reduce_campaign_ai, ":game_reduce_campaign_ai"),
					(try_begin),
						(eq, ":game_reduce_campaign_ai", 0),
						(assign, ":value_2", 35),
						(val_mul, ":value", 3),
						(val_div, ":value", 2),
					(else_try),
						(eq, ":game_reduce_campaign_ai", 2),
						(assign, ":value_2", 25),
						(val_div, ":value", 2),
					(try_end),
				(try_end),
				(store_random_in_range, ":random_in_range_0_100", 0, 100),
				(le, ":random_in_range_0_100", ":value_2"),
				(party_upgrade_with_xp, ":troop_leaded_party", ":value"),
			(try_end),
			(try_for_range, ":party", "p_town_1", "p_village_1"),
				(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
				(neq, ":party_town_lord", "trp_player"),
				(assign, ":value", 3000),
				(assign, ":value_2", 30),
				(try_begin),
					(assign, ":var_11", -1),
					(try_begin),
						(ge, ":party_town_lord", 0),
						(store_faction_of_troop, ":var_11", ":party_town_lord"),
					(try_end),
					(neq, ":var_11", "$players_kingdom"),
					(game_get_reduce_campaign_ai, ":game_reduce_campaign_ai"),
					(try_begin),
						(eq, ":game_reduce_campaign_ai", 0),
						(assign, ":value_2", 35),
						(val_mul, ":value", 3),
						(val_div, ":value", 2),
					(else_try),
						(eq, ":game_reduce_campaign_ai", 2),
						(assign, ":value_2", 25),
						(val_div, ":value", 2),
					(try_end),
				(try_end),
				(store_random_in_range, ":random_in_range_0_100", 0, 100),
				(le, ":random_in_range_0_100", ":value_2"),
				(party_upgrade_with_xp, ":party", ":value"),
			(try_end)
		]),

	(24.0,
		[
			(call_script, "script_process_sieges")
		]),

	(2.0,
		[
			(call_script, "script_process_village_raids")
		]),

	(7.0,
		[
			(call_script, "script_init_ai_calculation"),
			(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(call_script, "script_calculate_troop_ai", ":troop"),
			(try_end)
		]),

	(24.0,
		[]),

	(24.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
				(this_or_next|is_between, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(troop_get_slot, ":troop_intrigue_impatience", ":troop", slot_troop_intrigue_impatience),
				(val_sub, ":troop_intrigue_impatience", 5),
				(val_max, ":troop_intrigue_impatience", 0),
				(troop_set_slot, ":troop", slot_troop_intrigue_impatience, ":troop_intrigue_impatience"),
			(try_end),
			(store_random_in_range, ":random_in_range_1_3", 1, 3),
			(val_min, ":random_in_range_1_3", 2),
			(try_for_range, ":troop_2", "trp_npc1", "trp_heroes_end"),
				(this_or_next|is_between, ":troop_2", "trp_npc1", "trp_knight_1_1_wife"),
				(troop_slot_eq, ":troop_2", slot_troop_occupation, 2),
				(troop_get_slot, ":troop_2_days_on_mission", ":troop_2", slot_troop_days_on_mission),
				(ge, ":troop_2_days_on_mission", 1),
				(val_sub, ":troop_2_days_on_mission", ":random_in_range_1_3"),
				(val_max, ":troop_2_days_on_mission", 0),
				(troop_set_slot, ":troop_2", slot_troop_days_on_mission, ":troop_2_days_on_mission"),
			(try_end),
			(troop_get_slot, ":troop_2_days_on_mission", "trp_player", slot_troop_days_on_mission),
			(val_sub, ":troop_2_days_on_mission", ":random_in_range_1_3"),
			(val_max, ":troop_2_days_on_mission", 0),
			(troop_set_slot, "trp_player", slot_troop_days_on_mission, ":troop_2_days_on_mission")
		]),

	(8.0,
		[
			(call_script, "script_cf_random_political_event"),
			(call_script, "script_cf_random_political_event")
		]),

	(0.5,
		[
			(assign, ":var_1", reg0),
			(val_add, "$g_lord_long_term_count", 1),
			(try_begin),
				(neg|is_between, "$g_lord_long_term_count", "trp_kingdom_heroes_including_player_begin", "trp_knight_1_1_wife"),
				(assign, "$g_lord_long_term_count", "trp_kingdom_heroes_including_player_begin"),
			(try_end),
			(try_for_range, ":number", 0, 2),
				(assign, ":value", "$g_lord_long_term_count"),
				(try_begin),
					(eq, ":number", 1),
					(val_sub, ":value", "trp_kingdom_heroes_including_player_begin"),
					(val_add, ":value", "trp_knight_1_1_wife"),
				(try_end),
				(is_between, ":value", "trp_kingdom_heroes_including_player_begin", "trp_heroes_end"),
				(try_begin),
					(eq, ":value", "trp_kingdom_heroes_including_player_begin"),
					(assign, ":value", "trp_player"),
					(assign, ":value_2", "$players_kingdom"),
				(else_try),
					(store_faction_of_troop, ":value_2", ":value"),
				(try_end),
				(try_begin),
					(eq, "$cheat_mode", 1),
					(str_store_troop_name, 9, ":value"),
					(display_message, "@{!}DEBUG -- Doing political calculations for {s9}"),
				(try_end),
				(try_begin),
					(assign, reg0, 1),
					(try_for_range, ":party", "p_town_1", "p_salt_mine"),
						(party_slot_eq, ":party", slot_town_lord, ":value"),
						(try_begin),
							(is_between, ":party", "p_town_1", "p_castle_1"),
							(val_add, reg0, 3),
						(else_try),
							(is_between, ":party", "p_town_1", "p_village_1"),
							(val_add, reg0, 2),
						(else_try),
							(val_add, reg0, 1),
						(try_end),
					(try_end),
					(troop_set_slot, ":value", 56, reg0),
					(eq, reg0, 1),
					(troop_slot_eq, ":value", slot_troop_occupation, 2),
					(neq, ":value", "trp_player"),
					(faction_get_slot, ":value_2_leader", ":value_2", slot_faction_leader),
					(gt, ":value_2_leader", -1),
					(neq, ":value_2_leader", ":value"),
					(neg|troop_slot_eq, ":value_2_leader", slot_troop_spouse, ":value"),
					(neg|troop_slot_eq, ":value", slot_troop_spouse, ":value_2_leader"),
					(troop_get_slot, ":value_lord_reputation_type", ":value", slot_lord_reputation_type),
					(try_begin),
						(this_or_next|eq, ":value_lord_reputation_type", 2),
						(this_or_next|eq, ":value_lord_reputation_type", 3),
						(this_or_next|eq, ":value_lord_reputation_type", 4),
						(eq, ":value_lord_reputation_type", 5),
						(call_script, "script_troop_change_relation_with_troop", ":value", ":value_2_leader", -4),
						(val_add, "$total_no_fief_changes", -4),
					(else_try),
						(this_or_next|eq, ":value_lord_reputation_type", 24),
						(eq, ":value_lord_reputation_type", 1),
						(call_script, "script_troop_change_relation_with_troop", ":value", ":value_2_leader", -2),
						(val_add, "$total_no_fief_changes", -2),
					(try_end),
				(try_end),
				(try_begin),
					(this_or_next|troop_slot_eq, ":value", slot_troop_occupation, 2),
					(eq, ":value", "trp_player"),
					(faction_get_slot, ":value_2_leader", ":value_2", slot_faction_leader),
					(gt, ":value_2_leader", -1),
					(neq, ":value", ":value_2_leader"),
					(neg|troop_slot_eq, ":value", slot_troop_spouse, ":value_2_leader"),
					(neg|troop_slot_eq, ":value_2_leader", slot_troop_spouse, ":value"),
					(neg|is_between, ":value", "trp_kingdom_1_lord", "trp_knight_1_1"),
					(neg|is_between, ":value", "trp_kingdom_1_pretender", "trp_knight_1_1_wife"),
					(assign, ":var_8", 0),
					(try_for_range, ":party_2", "p_town_1", "p_village_1"),
						(store_faction_of_party, ":faction_of_party_party_2", ":party_2"),
						(eq, ":faction_of_party_party_2", ":value_2"),
						(val_add, ":var_8", 1),
					(try_end),
					(try_begin),
						(this_or_next|eq, ":value_2", "$players_kingdom"),
						(eq, ":value_2", "fac_player_supporters_faction"),
						(val_add, ":var_8", 1),
					(try_end),
					(call_script, "script_troop_get_relation_with_troop", ":value", ":value_2_leader"),
					(this_or_next|le, reg0, -50),
					(eq, ":var_8", 0),
					(call_script, "script_cf_troop_can_intrigue", ":value", 0),
					(faction_get_slot, reg0, ":value_2", 201),
					(val_clamp, reg0, -3, 4),
					(val_add, reg0, 10),
					(store_random_in_range, ":random_in_range_0_reg0", 0, reg0),
					(try_begin),
						(this_or_next|eq, ":var_8", 0),
						(lt, ":random_in_range_0_reg0", 5),
						(neq, ":value", "trp_player"),
						(try_begin),
							(neq, ":var_8", 0),
							(assign, "$g_give_advantage_to_original_faction", ":value"),
						(try_end),
						(call_script, "script_lord_find_alternative_faction", ":value"),
						(assign, ":var_12", reg0),
						(assign, "$g_give_advantage_to_original_faction", 0),
						(neq, ":var_12", ":value_2"),
						(is_between, ":var_12", "fac_player_supporters_faction", "fac_kingdoms_end"),
						(str_store_troop_name_link, 1, ":value"),
						(str_store_faction_name_link, 2, ":var_12"),
						(str_store_faction_name_link, 3, ":value_2"),
						(call_script, "script_change_troop_faction", ":value", ":var_12"),
						(try_begin),
							(ge, "$cheat_mode", 1),
							(str_store_troop_name, 4, ":value"),
							(display_message, "@{!}DEBUG - {s4} faction changed in defection"),
						(try_end),
						(call_script, "script_dplmc_store_troop_is_female", ":value"),
						(assign, reg4, reg0),
						(str_store_string, 4, "str_lord_defects_ordinary"),
						(display_log_message, "@{!}{s4}"),
						(try_begin),
							(eq, "$cheat_mode", 1),
							(this_or_next|eq, ":var_12", "$players_kingdom"),
							(eq, ":value_2", "$players_kingdom"),
							(call_script, "script_add_notification_menu", "mnu_notification_lord_defects", ":value", ":value_2"),
						(try_end),
					(else_try),
						(neq, ":value_2_leader", "trp_player"),
						(call_script, "script_troop_get_relation_with_troop", ":value", ":value_2_leader"),
						(le, reg0, -50),
						(call_script, "script_indict_lord_for_treason", ":value", ":value_2"),
					(try_end),
					(try_begin),
						(eq, ":value", "trp_player"),
						(assign, reg0, "$players_kingdom"),
					(else_try),
						(store_faction_of_troop, reg0, ":value"),
					(try_end),
					(neq, reg0, ":value_2"),
					(assign, ":value_2", reg0),
				(else_try),
					(neq, ":value", "trp_player"),
					(troop_slot_eq, ":value", slot_troop_occupation, 2),
					(faction_slot_ge, ":value_2", 64, 1),
					(neg|troop_slot_ge, ":value", 154, 1),
					(this_or_next|troop_slot_eq, ":value", slot_troop_stance_on_faction_issue, -1),
					(neq, "$players_kingdom", ":value_2"),
					(call_script, "script_npc_decision_checklist_take_stand_on_issue", ":value"),
					(troop_set_slot, ":value", slot_troop_stance_on_faction_issue, reg0),
				(else_try),
					(ge, "$g_dplmc_ai_changes", 2),
					(faction_slot_eq, ":value_2", slot_faction_leader, ":value"),
					(neq, ":value", "trp_player"),
					(troop_get_slot, ":value_56", ":value", 56),
					(ge, ":value_56", 3),
					(neg|faction_slot_ge, ":value_2", 64, 1),
					(assign, ":value_3", "trp_heroes_end"),
					(assign, ":value_4", -200),
					(assign, ":value_5", -1),
					(try_for_range, ":troop", "trp_npc1", ":value_3"),
						(neq, ":troop", ":value"),
						(troop_slot_eq, ":troop", slot_troop_occupation, 2),
						(store_faction_of_troop, reg0, ":troop"),
						(eq, reg0, ":value_2"),
						(troop_get_slot, reg0, ":troop", 56),
						(try_begin),
							(ge, reg0, ":value_56"),
							(assign, ":value_3", ":troop"),
						(else_try),
							(lt, reg0, 1),
							(assign, ":value_3", ":troop"),
						(else_try),
							(eq, reg0, 1),
							(call_script, "script_troop_get_relation_with_troop", ":value", ":troop"),
							(gt, reg0, ":value_4"),
							(assign, ":value_4", reg0),
							(assign, ":value_5", ":troop"),
						(try_end),
					(try_end),
					(eq, ":value_3", "trp_heroes_end"),
					(is_between, ":value_5", "trp_npc1", "trp_heroes_end"),
					(gt, ":value_4", -10),
					(assign, ":value_56", 101),
					(assign, ":value_4", -1),
					(try_for_range, ":party", "p_village_1", "p_salt_mine"),
						(party_slot_eq, ":party", slot_town_lord, ":value"),
						(party_get_slot, reg0, ":party", slot_town_prosperity),
						(this_or_next|eq, ":value_4", -1),
						(lt, reg0, ":value_56"),
						(assign, ":value_56", reg0),
						(assign, ":value_4", ":party"),
					(try_end),
					(is_between, ":value_4", "p_town_1", "p_salt_mine"),
					(party_set_slot, ":value_4", slot_town_lord, -1),
					(troop_get_slot, reg0, ":value", 56),
					(val_sub, reg0, 1),
					(troop_set_slot, ":value", 56, reg0),
					(str_store_party_name_link, 4, ":value_4"),
					(str_store_troop_name_link, 5, ":value"),
					(str_store_faction_name_link, 7, ":value_2"),
					(display_log_message, "@{s5} has decided to grant {s4} to another lord of the {s7}."),
					(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
						(store_faction_of_troop, reg0, ":troop"),
						(eq, reg0, ":value_2"),
						(troop_set_slot, ":value", slot_troop_stance_on_faction_issue, -1),
					(try_end),
					(store_current_hours, reg0),
					(faction_set_slot, ":value_2", slot_faction_political_issue_time, reg0),
					(faction_set_slot, ":value_2", slot_faction_political_issue, ":value_4"),
					(troop_set_slot, ":value", slot_troop_stance_on_faction_issue, ":value_5"),
				(try_end),
				(try_begin),
					(neg|troop_slot_eq, ":value", slot_troop_occupation, 15),
					(neg|troop_slot_eq, ":value", slot_troop_occupation, 6),
					(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
						(neq, ":troop", ":value"),
						(neg|troop_slot_eq, ":troop", slot_troop_occupation, 6),
						(neg|troop_slot_eq, ":troop", slot_troop_occupation, 15),
						(this_or_next|neq, ":value", "trp_player"),
						(troop_slot_ge, ":value", 5, 1),
						(call_script, "script_troop_get_relation_with_troop", ":value", ":troop"),
						(lt, reg0, 0),
						(store_sub, ":value_6", 0, reg0),
						(store_random_in_range, ":random_in_range_0_reg0", 0, 300),
						(lt, ":random_in_range_0_reg0", ":value_6"),
						(call_script, "script_troop_change_relation_with_troop", ":value", ":troop", 1),
						(val_add, "$total_relation_changes_through_convergence", 1),
					(try_end),
					(neq, ":value", "trp_player"),
					(troop_slot_eq, ":value", slot_troop_occupation, 14),
					(troop_get_slot, ":value_original_faction", ":value", slot_troop_original_faction),
					(gt, ":value_original_faction", 0),
					(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
						(neq, ":troop", ":value"),
						(neg|troop_slot_eq, ":troop", slot_troop_occupation, 6),
						(neg|troop_slot_eq, ":troop", slot_troop_occupation, 15),
						(troop_slot_eq, ":troop", slot_troop_original_faction, ":value_original_faction"),
						(call_script, "script_troop_get_relation_with_troop", ":value", ":troop"),
						(lt, reg0, 0),
						(store_sub, ":value_6", 0, reg0),
						(store_random_in_range, ":random_in_range_0_reg0", 0, 300),
						(lt, ":random_in_range_0_reg0", ":value_6"),
						(call_script, "script_troop_change_relation_with_troop", ":value", ":troop", 1),
						(val_add, "$total_relation_changes_through_convergence", 1),
					(try_end),
				(try_end),
			(try_end),
			(assign, reg0, ":var_1")
		]),

	(2.0,
		[]),

	(1.0,
		[
			(call_script, "script_allow_vassals_to_join_indoor_battle"),
			(call_script, "script_process_kingdom_parties_ai")
		]),

	(1.0,
		[
			(try_for_range, ":party", "p_town_1", "p_salt_mine"),
				(try_begin),
					(this_or_next|party_slot_ge, ":party", 54, 0),
					(party_slot_eq, ":party", slot_village_state, 1),
					(party_slot_eq, ":party", slot_center_last_spotted_enemy, -1),
					(call_script, "script_process_alarms_new", ":party"),
				(else_try),
					(this_or_next|neg|party_slot_ge, ":party", 54, 0),
					(neg|party_slot_eq, ":party", slot_village_state, 1),
					(party_set_slot, ":party", slot_center_last_spotted_enemy, -1),
					(party_set_slot, ":party", slot_center_sortie_strength, 0),
					(party_set_slot, ":party", slot_center_sortie_enemy_strength, 0),
				(try_end),
			(try_end)
		]),

	(3.0,
		[
			(assign, ":var_1", reg0),
			(assign, ":var_2", reg1),
			(store_current_hours, ":current_hours"),
			(try_for_range, ":party", "p_town_1", "p_village_1"),
				(party_get_slot, ":party_center_is_besieged_by", ":party", slot_center_is_besieged_by),
				(gt, ":party_center_is_besieged_by", 0),
				(party_is_active, ":party_center_is_besieged_by"),
				(store_faction_of_party, ":faction_of_party_party_center_is_besieged_by", ":party_center_is_besieged_by"),
				(party_slot_ge, ":party", 54, 1),
				(party_get_slot, ":party_center_siege_begin_hours", ":party", slot_center_siege_begin_hours),
				(store_sub, ":party_center_siege_begin_hours", ":current_hours", ":party_center_siege_begin_hours"),
				(assign, ":value", 0),
				(assign, ":value_2", 0),
				(assign, ":var_10", 0),
				(assign, ":value_3", 0),
				(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
					(troop_slot_eq, ":troop", slot_troop_occupation, 2),
					(neg|troop_slot_ge, ":troop", 8, 0),
					(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
					(gt, ":troop_leaded_party", 0),
					(party_is_active, ":troop_leaded_party"),
					(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
					(eq, ":faction_of_troop_troop", ":faction_of_party_party_center_is_besieged_by"),
					(assign, ":value_4", 0),
					(try_begin),
						(party_slot_eq, ":troop_leaded_party", slot_party_ai_state, 1),
						(party_slot_eq, ":troop_leaded_party", slot_party_ai_object, ":party"),
						(assign, ":value_4", 1),
					(else_try),
						(party_slot_eq, ":troop_leaded_party", slot_party_ai_state, 11),
						(party_get_slot, ":troop_leaded_party_ai_object", ":troop_leaded_party", slot_party_ai_object),
						(gt, ":troop_leaded_party_ai_object", 0),
						(party_is_active, ":troop_leaded_party_ai_object"),
						(party_slot_eq, ":troop_leaded_party_ai_object", slot_party_ai_state, 1),
						(party_slot_eq, ":troop_leaded_party_ai_object", slot_party_ai_object, ":party"),
						(assign, ":value_4", 1),
					(try_end),
					(eq, ":value_4", 1),
					(party_get_battle_opponent, ":battle_opponent_troop_leaded_party", ":troop_leaded_party"),
					(this_or_next|lt, ":battle_opponent_troop_leaded_party", 0),
					(eq, ":battle_opponent_troop_leaded_party", ":party"),
					(try_begin),
						(faction_slot_eq, ":faction_of_party_party_center_is_besieged_by", slot_faction_marshall, ":troop"),
						(assign, ":value_3", 1),
					(try_end),
					(call_script, "script_party_calculate_regular_strength", ":troop_leaded_party"),
					(try_begin),
						(ge, "$g_dplmc_terrain_advantage", 0),
						(call_script, "script_dplmc_party_calculate_strength_in_terrain", ":troop_leaded_party", -2, 0, 0),
					(try_end),
					(val_add, ":var_10", reg0),
				(try_end),
				(try_begin),
					(gt, ":var_10", 0),
					(party_collect_attachments_to_party, ":party", "p_collective_enemy"),
					(call_script, "script_party_calculate_regular_strength", "p_collective_enemy"),
					(try_begin),
						(ge, "$g_dplmc_terrain_advantage", 0),
						(call_script, "script_dplmc_party_calculate_strength_in_terrain", "p_collective_enemy", -2, 0, 0),
					(try_end),
					(assign, ":var_18", reg0),
					(try_begin),
						(eq, "$auto_enter_town", ":party"),
						(eq, "$g_player_is_captive", 0),
						(call_script, "script_party_calculate_regular_strength", "p_main_party"),
						(try_begin),
							(ge, "$g_dplmc_terrain_advantage", 0),
							(call_script, "script_dplmc_party_calculate_strength_in_terrain", "p_collective_enemy", -2, 0, 0),
						(try_end),
						(val_add, ":var_18", reg0),
						(val_mul, ":var_10", 2),
					(try_end),
					(party_get_slot, ":party_center_siege_hardness", ":party", slot_center_siege_hardness),
					(val_add, ":party_center_siege_hardness", 100),
					(val_mul, ":var_18", ":party_center_siege_hardness"),
					(val_div, ":var_18", 100),
					(val_max, ":var_18", 1),
					(try_begin),
						(eq, ":value_3", 1),
						(eq, ":faction_of_party_party_center_is_besieged_by", "$players_kingdom"),
						(check_quest_active, "qst_follow_army"),
						(val_mul, ":var_10", 2),
					(try_end),
					(store_mul, ":value_5", ":var_10", 100),
					(val_div, ":value_5", ":var_18"),
					(store_sub, ":value_6", ":value_5", 250),
					(try_begin),
						(gt, ":value_6", -100),
						(store_div, ":value_7", ":party_center_siege_begin_hours", 2),
						(val_add, ":value_6", ":value_7"),
					(try_end),
					(val_div, ":value_6", 5),
					(val_max, ":value_6", 0),
					(store_sub, ":value_8", 175, ":value_5"),
					(val_max, ":value_8", 0),
					(try_begin),
						(store_random_in_range, ":random_in_range_0_100", 0, 100),
						(lt, ":random_in_range_0_100", ":value_6"),
						(gt, ":party_center_siege_begin_hours", 24),
						(assign, ":value", 1),
					(else_try),
						(store_random_in_range, ":random_in_range_0_100", 0, 100),
						(lt, ":random_in_range_0_100", ":value_8"),
						(assign, ":value_2", 1),
					(try_end),
				(else_try),
					(assign, ":value_2", 1),
				(try_end),
				(try_begin),
					(eq, ":value", 1),
					(call_script, "script_begin_assault_on_center", ":party"),
				(else_try),
					(eq, ":value_2", 1),
					(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
						(troop_slot_eq, ":troop", slot_troop_occupation, 2),
						(neg|troop_slot_ge, ":troop", 8, 0),
						(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
						(gt, ":troop_leaded_party", 0),
						(party_is_active, ":troop_leaded_party"),
						(party_slot_eq, ":troop_leaded_party", slot_party_ai_state, 1),
						(party_slot_eq, ":troop_leaded_party", slot_party_ai_object, ":party"),
						(party_slot_eq, ":troop_leaded_party", slot_party_ai_substate, 1),
						(call_script, "script_party_set_ai_state", ":troop_leaded_party", -1, -1),
						(call_script, "script_party_set_ai_state", ":troop_leaded_party", 1, ":party"),
						(party_set_slot, ":party", slot_center_siege_begin_hours, ":current_hours"),
					(try_end),
				(try_end),
			(try_end),
			(assign, reg0, ":var_1"),
			(assign, reg1, ":var_2")
		]),

	(6.0,
		[
			(assign, "$g_recalculate_ais", 1)
		]),

	(0.0,
		[
			(try_begin),
				(ge, "$cheat_mode", 1),
				(try_for_range, ":troop", "trp_kingdom_1_lord", "trp_knight_1_1"),
					(store_add, ":value", ":troop", "fac_kingdom_1"),
					(val_sub, ":value", "trp_kingdom_1_lord"),
					(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
					(neq, ":value", ":faction_of_troop_troop"),
					(neq, ":faction_of_troop_troop", "fac_commoners"),
					(ge, "$cheat_mode", 2),
					(neq, ":troop", "trp_kingdom_2_lord"),
					(str_store_troop_name, 4, ":troop"),
					(str_store_faction_name, 5, ":faction_of_troop_troop"),
					(str_store_faction_name, 6, ":value"),
					(str_store_string, 65, "@{!}DEBUG - {s4} is in {s5}, should be in {s6}, disabling political cheat mode"),
					(rest_for_hours, 0, 0, 0),
					(jump_to_menu, "mnu_debug_alert_from_s65"),
				(try_end),
			(try_end),
			(eq, "$g_recalculate_ais", 1),
			(assign, "$g_recalculate_ais", 0),
			(call_script, "script_recalculate_ais")
		]),

	(24.0,
		[
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(call_script, "script_faction_recalculate_strength", ":faction"),
			(try_end),
			(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
				(this_or_next|is_between, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
				(neg|faction_slot_eq, ":faction_of_troop_troop", slot_faction_ai_state, 0),
				(neg|faction_slot_eq, ":faction_of_troop_troop", slot_faction_ai_state, 6),
				(neg|faction_slot_eq, ":faction_of_troop_troop", slot_faction_ai_state, 1),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(party_is_active, ":troop_leaded_party"),
				(val_add, "$total_vassal_days_on_campaign", 1),
				(party_slot_eq, ":troop_leaded_party", slot_party_ai_state, 11),
				(val_add, "$total_vassal_days_responding_to_campaign", 1),
			(try_end)
		]),

	(36.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
				(troop_set_slot, ":troop", slot_troop_does_not_give_quest, 0),
			(try_end),
			(try_for_range, ":troop", "trp_village_1_elder", "trp_merchants_end"),
				(troop_set_slot, ":troop", slot_troop_does_not_give_quest, 0),
			(try_end)
		]),

	(168.0,
		[
			(try_for_range, ":party", "p_village_1", "p_salt_mine"),
				(call_script, "script_refresh_village_merchant_inventory", ":party"),
			(try_end)
		]),

	(48.0,
		[
			(try_for_range, ":party", "p_village_1", "p_salt_mine"),
				(call_script, "script_refresh_village_defenders", ":party"),
				(party_set_slot, ":party", slot_village_player_can_not_steal_cattle, 0),
			(try_end)
		]),

	(168.0,
		[
			(try_for_range, ":party", "p_town_1", "p_salt_mine"),
				(neg|is_between, ":party", "p_castle_1", "p_village_1"),
				(party_get_slot, ":party_village_number_of_cattle", ":party", slot_village_number_of_cattle),
				(party_get_slot, ":party_center_head_sheep", ":party", slot_center_head_sheep),
				(party_get_slot, ":party_center_acres_pasture", ":party", slot_center_acres_pasture),
				(val_max, ":party_center_acres_pasture", 1),
				(store_mul, ":value", ":party_village_number_of_cattle", 400),
				(store_mul, ":value_2", ":party_center_head_sheep", 200),
				(val_add, ":value", ":value_2"),
				(val_div, ":value", ":party_center_acres_pasture"),
				(try_begin),
					(eq, "$cheat_mode", 1),
					(assign, reg4, ":value"),
					(str_store_party_name, 4, ":party"),
				(try_end),
				(store_random_in_range, ":random_in_range_0_100", 0, 100),
				(try_begin),
					(eq, ":random_in_range_0_100", 0),
					(val_min, ":party_village_number_of_cattle", 10),
					(try_begin),
						(gt, "$g_player_chamberlain", 0),
						(party_slot_eq, ":party", slot_town_lord, "trp_player"),
						(party_get_slot, reg4, ":party", slot_village_number_of_cattle),
						(val_sub, reg4, ":party_village_number_of_cattle"),
						(gt, reg4, 0),
						(str_store_party_name_link, 4, ":party"),
						(display_log_message, "@A livestock epidemic has killed {reg4} cattle in {s4}."),
					(try_end),
				(else_try),
					(gt, ":value", 100),
					(val_mul, ":party_center_head_sheep", 90),
					(val_div, ":party_center_head_sheep", 100),
					(val_mul, ":party_village_number_of_cattle", 90),
					(val_div, ":party_village_number_of_cattle", 100),
				(else_try),
					(lt, ":value", 30),
					(val_mul, ":party_village_number_of_cattle", 120),
					(val_div, ":party_village_number_of_cattle", 100),
					(val_add, ":party_village_number_of_cattle", 1),
					(val_mul, ":party_center_head_sheep", 120),
					(val_div, ":party_center_head_sheep", 100),
					(val_add, ":party_center_head_sheep", 1),
				(else_try),
					(lt, ":value", 60),
					(val_mul, ":party_village_number_of_cattle", 110),
					(val_div, ":party_village_number_of_cattle", 100),
					(val_add, ":party_village_number_of_cattle", 1),
					(val_mul, ":party_center_head_sheep", 110),
					(val_div, ":party_center_head_sheep", 100),
					(val_add, ":party_center_head_sheep", 1),
				(else_try),
					(lt, ":value", 100),
					(lt, ":random_in_range_0_100", 50),
					(val_mul, ":party_village_number_of_cattle", 105),
					(val_div, ":party_village_number_of_cattle", 100),
					(try_begin),
						(le, ":party_village_number_of_cattle", 20),
						(val_add, ":party_village_number_of_cattle", 1),
					(try_end),
					(val_mul, ":party_center_head_sheep", 105),
					(val_div, ":party_center_head_sheep", 100),
					(try_begin),
						(le, ":party_center_head_sheep", 20),
						(val_add, ":party_center_head_sheep", 1),
					(try_end),
				(try_end),
				(party_set_slot, ":party", slot_village_number_of_cattle, ":party_village_number_of_cattle"),
				(party_set_slot, ":party", slot_center_head_sheep, ":party_center_head_sheep"),
			(try_end)
		]),

	(168.0,
		[
			(try_for_range, ":party", "p_town_1", "p_salt_mine"),
				(try_begin),
					(party_slot_ge, ":party", 7, 0),
					(party_get_slot, ":party_center_accumulated_rents", ":party", slot_center_accumulated_rents),
					(assign, ":value", 0),
					(try_begin),
						(party_slot_eq, ":party", slot_party_type, 4),
						(try_begin),
							(party_slot_eq, ":party", slot_village_state, 0),
							(assign, ":value", 1200),
						(try_end),
					(else_try),
						(party_slot_eq, ":party", slot_party_type, 2),
						(assign, ":value", 1200),
					(else_try),
						(party_slot_eq, ":party", slot_party_type, 3),
						(assign, ":value", 2400),
					(try_end),
					(party_get_slot, ":party_town_prosperity", ":party", slot_town_prosperity),
					(store_add, ":value_2", 20, ":party_town_prosperity"),
					(val_mul, ":value", ":value_2"),
					(val_div, ":value", 120),
					(try_begin),
						(party_slot_eq, ":party", slot_town_lord, "trp_player"),
						(game_get_reduce_campaign_ai, ":game_reduce_campaign_ai"),
						(try_begin),
							(eq, ":game_reduce_campaign_ai", 0),
							(val_mul, ":value", 3),
							(val_div, ":value", 4),
						(else_try),
							(eq, ":game_reduce_campaign_ai", 1),
						(else_try),
							(eq, ":game_reduce_campaign_ai", 2),
							(val_mul, ":value", 4),
							(val_div, ":value", 3),
						(try_end),
					(try_end),
					(val_add, ":party_center_accumulated_rents", ":value"),
					(try_begin),
						(str_store_party_name, 6, ":party"),
						(party_get_slot, ":party_400", ":party", 400),
						(neq, ":party_400", 0),
						(store_div, ":value_3", ":party_center_accumulated_rents", 100),
						(val_mul, ":value_3", ":party_400"),
						(try_begin),
							(eq, "$cheat_mode", 1),
							(assign, reg0, ":party_400"),
							(display_message, "@{!}DEBUG : tax rate in {s6}: {reg0}"),
							(assign, reg0, ":party_center_accumulated_rents"),
							(display_message, "@{!}DEBUG : accumulated rents  in {s6}: {reg0}"),
							(assign, reg0, ":value_3"),
							(display_message, "@{!}DEBUG : rent change in {s6}: {reg0}  in {s6}"),
						(try_end),
						(val_add, ":party_center_accumulated_rents", ":value_3"),
						(val_div, ":party_400", -25),
						(call_script, "script_change_center_prosperity", ":party", ":party_400"),
						(try_begin),
							(lt, ":party_400", 0),
							(val_mul, ":party_400", 2),
							(try_begin),
								(eq, "$cheat_mode", 1),
								(assign, reg0, ":party_400"),
								(display_message, "@{!}DEBUG : tax rate after modi in {s6}: {reg0}"),
							(try_end),
							(try_begin),
								(this_or_next|is_between, ":party", "p_village_1", "p_salt_mine"),
								(is_between, ":party", "p_town_1", "p_castle_1"),
								(party_get_slot, ":party_center_player_relation", ":party", slot_center_player_relation),
								(try_begin),
									(eq, "$cheat_mode", 1),
									(assign, reg0, ":party_center_player_relation"),
									(display_message, "@{!}DEBUG : center relation: {reg0}"),
								(try_end),
								(le, ":party_center_player_relation", -5),
								(store_random_in_range, ":random_in_range_-100_0", -100, 0),
								(gt, ":random_in_range_-100_0", ":party_center_player_relation"),
								(troop_get_slot, ":troop_trees_859", "$troop_trees", 859),
								(neg|party_slot_eq, ":party", slot_village_infested_by_bandits, ":troop_trees_859"),
								(display_message, "@Riot in {s6}!"),
								(party_set_slot, ":party", slot_village_infested_by_bandits, ":troop_trees_859"),
								(call_script, "script_change_center_prosperity", ":party", -1),
								(call_script, "script_add_notification_menu", "mnu_dplmc_notification_riot", ":party", 0),
								(store_character_level, ":character_level_player", "trp_player"),
								(store_div, ":value_4", ":character_level_player", 2),
								(store_mul, ":value_5", ":character_level_player", 2),
								(try_begin),
									(is_between, ":party", "p_village_1", "p_salt_mine"),
									(store_random_in_range, ":random_in_range_-100_0", 0, ":character_level_player"),
									(troop_get_slot, ":troop_trees_615", "$troop_trees", 615),
									(party_add_members, ":party", ":troop_trees_615", ":random_in_range_-100_0"),
									(store_random_in_range, ":random_in_range_-100_0", 0, ":value_4"),
									(troop_get_slot, ":troop_trees_618", "$troop_trees", 618),
									(party_add_members, ":party", ":troop_trees_618", ":random_in_range_-100_0"),
								(else_try),
									(party_set_banner_icon, ":party", 0),
									(party_get_num_companion_stacks, ":num_companion_stacks_party", ":party"),
									(try_for_range, ":number", 0, ":num_companion_stacks_party"),
										(party_stack_get_size, ":party_stack_size_party_number", ":party", ":number"),
										(val_div, ":party_stack_size_party_number", 2),
										(party_stack_get_troop_id, ":party_stack_troop_id_party_number", ":party", ":number"),
										(party_remove_members, ":party", ":party_stack_troop_id_party_number", ":party_stack_size_party_number"),
									(try_end),
									(store_random_in_range, ":random_in_range_-100_0", ":value_4", ":value_5"),
									(troop_get_slot, ":troop_trees_601", "$troop_trees", 601),
									(party_add_members, ":party", ":troop_trees_601", ":random_in_range_-100_0"),
									(store_random_in_range, ":random_in_range_-100_0", 0, ":character_level_player"),
									(troop_get_slot, ":troop_trees_610", "$troop_trees", 610),
									(party_add_members, ":party", ":troop_trees_610", ":random_in_range_-100_0"),
								(try_end),
							(try_end),
						(try_end),
						(call_script, "script_change_player_relation_with_center", ":party", ":party_400"),
					(try_end),
					(try_begin),
						(party_slot_ge, ":party", 39, 1),
						(assign, ":party_center_accumulated_rents", 0),
					(try_end),
					(party_set_slot, ":party", slot_center_accumulated_rents, ":party_center_accumulated_rents"),
				(try_end),
				(try_begin),
					(is_between, ":party", "p_village_1", "p_salt_mine"),
					(party_get_slot, ":party_village_bound_center", ":party", slot_village_bound_center),
					(party_slot_ge, ":party_village_bound_center", 7, 0),
					(is_between, ":party_village_bound_center", "p_castle_1", "p_village_1"),
					(party_get_slot, ":party_center_accumulated_rents", ":party_village_bound_center", slot_center_accumulated_rents),
					(val_add, ":party_center_accumulated_rents", ":value"),
					(party_set_slot, ":party_village_bound_center", slot_center_accumulated_rents, ":party_center_accumulated_rents"),
				(try_end),
			(try_end)
		]),

	(32.0,
		[
			(eq, "$players_kingdom", 0),
			(le, "$g_invite_faction", 0),
			(eq, "$g_player_is_captive", 0),
			(assign, ":var_1", "$character_gender"),
			(try_begin),
				(lt, "$g_disable_condescending_comments", 2),
				(eq, ":var_1", 1),
				(eq, "$npc_with_sisterly_advice", 0),
				(store_random_in_range, ":random_in_range_npc1_kingdom_1_lord", "trp_npc1", "trp_kingdom_1_lord"),
				(try_for_range, ":troop", "trp_npc1", "trp_kingdom_1_lord"),
					(val_add, ":troop", ":random_in_range_npc1_kingdom_1_lord"),
					(try_begin),
						(ge, ":troop", "trp_kingdom_1_lord"),
						(val_sub, ":troop", "trp_kingdom_1_lord"),
						(val_add, ":troop", "trp_npc1"),
					(try_end),
					(main_party_has_troop, ":troop"),
					(assign, ":value", 0),
					(try_begin),
						(call_script, "script_cf_dplmc_troop_is_female", ":troop"),
						(assign, ":value", 1),
					(try_end),
					(eq, ":value", ":var_1"),
					(troop_slot_ge, "trp_player", 7, 150),
					(troop_slot_ge, ":troop", 139, 1),
					(assign, "$npc_with_sisterly_advice", ":troop"),
				(try_end),
			(else_try),
				(store_random_in_range, ":random_in_range_kingdom_1_kingdoms_end", "fac_kingdom_1", "fac_kingdoms_end"),
				(assign, ":var_6", 999999),
				(try_for_range, ":party", "p_town_1", "p_village_1"),
					(store_faction_of_party, ":faction_of_party_party", ":party"),
					(eq, ":faction_of_party_party", ":random_in_range_kingdom_1_kingdoms_end"),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_main_party_party", "p_main_party", ":party"),
					(val_min, ":var_6", ":distance_to_party_from_party_main_party_party"),
				(try_end),
				(lt, ":var_6", 30),
				(store_relation, ":relation_random_in_range_kingdom_1_kingdoms_end_player_supporters_faction", ":random_in_range_kingdom_1_kingdoms_end", "fac_player_supporters_faction"),
				(faction_get_slot, ":random_in_range_kingdom_1_kingdoms_end_leader", ":random_in_range_kingdom_1_kingdoms_end", slot_faction_leader),
				(call_script, "script_troop_get_player_relation", ":random_in_range_kingdom_1_kingdoms_end_leader"),
				(assign, ":var_12", reg0),
				(call_script, "script_get_number_of_hero_centers", "trp_player"),
				(assign, ":var_13", reg0),
				(eq, "$g_infinite_camping", 0),
				(assign, ":value_2", 0),
				(try_begin),
					(ge, "p_main_party", 0),
					(store_party_size_wo_prisoners, ":value_2", "p_main_party"),
				(try_end),
				(try_begin),
					(eq, ":var_13", 0),
					(troop_get_slot, ":player_renown", "trp_player", slot_troop_renown),
					(ge, ":player_renown", 160),
					(ge, ":relation_random_in_range_kingdom_1_kingdoms_end_player_supporters_faction", 0),
					(ge, ":var_12", 0),
					(ge, ":value_2", 45),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(lt, ":random_in_range_0_100", 50),
					(call_script, "script_get_poorest_village_of_faction", ":random_in_range_kingdom_1_kingdoms_end"),
					(assign, "$g_invite_offered_center", reg0),
					(ge, "$g_invite_offered_center", 0),
					(assign, "$g_invite_faction", ":random_in_range_kingdom_1_kingdoms_end"),
					(jump_to_menu, "mnu_invite_player_to_faction"),
				(else_try),
					(gt, ":var_13", 0),
					(neq, "$players_oath_renounced_against_kingdom", ":random_in_range_kingdom_1_kingdoms_end"),
					(ge, ":relation_random_in_range_kingdom_1_kingdoms_end_player_supporters_faction", -40),
					(ge, ":var_12", -20),
					(ge, ":value_2", 30),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(lt, ":random_in_range_0_100", 20),
					(assign, "$g_invite_faction", ":random_in_range_kingdom_1_kingdoms_end"),
					(assign, "$g_invite_offered_center", -1),
					(jump_to_menu, "mnu_invite_player_to_faction_without_center"),
				(try_end),
			(try_end)
		]),

	(168.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
				(store_random_in_range, ":random_in_range_0_10000", 0, 10000),
				(troop_set_slot, ":troop", slot_troop_temp_decision_seed, ":random_in_range_0_10000"),
			(try_end),
			(store_random_in_range, ":random_in_range_0_10000", 0, 10000),
			(troop_set_slot, "trp_player", slot_troop_temp_decision_seed, ":random_in_range_0_10000")
		]),

	(0.1,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(ge, ":troop_leaded_party", 1),
				(party_is_active, ":troop_leaded_party"),
				(party_get_attached_to, ":attached_to_troop_leaded_party", ":troop_leaded_party"),
				(lt, ":attached_to_troop_leaded_party", 1),
				(party_get_cur_town, ":cur_town_troop_leaded_party", ":troop_leaded_party"),
				(is_between, ":cur_town_troop_leaded_party", "p_town_1", "p_salt_mine"),
				(call_script, "script_get_relation_between_parties", ":cur_town_troop_leaded_party", ":troop_leaded_party"),
				(try_begin),
					(ge, reg0, 0),
					(party_attach_to_party, ":troop_leaded_party", ":cur_town_troop_leaded_party"),
				(else_try),
					(party_set_ai_behavior, ":troop_leaded_party", 0),
				(try_end),
				(try_begin),
					(this_or_next|party_slot_eq, ":cur_town_troop_leaded_party", slot_party_type, 3),
					(party_slot_eq, ":cur_town_troop_leaded_party", slot_party_type, 2),
					(store_faction_of_party, ":faction_of_party_troop_leaded_party", ":troop_leaded_party"),
					(store_faction_of_party, ":faction_of_party_cur_town_troop_leaded_party", ":cur_town_troop_leaded_party"),
					(eq, ":faction_of_party_troop_leaded_party", ":faction_of_party_cur_town_troop_leaded_party"),
					(party_get_num_prisoner_stacks, ":num_prisoner_stacks_troop_leaded_party", ":troop_leaded_party"),
					(gt, ":num_prisoner_stacks_troop_leaded_party", 0),
					(assign, "$g_move_heroes", 1),
					(call_script, "script_party_prisoners_add_party_prisoners", ":cur_town_troop_leaded_party", ":troop_leaded_party"),
					(assign, "$g_move_heroes", 1),
					(call_script, "script_party_remove_all_prisoners", ":troop_leaded_party"),
				(try_end),
			(try_end),
			(try_for_parties, ":var_8"),
				(gt, ":var_8", "p_spawn_points_end"),
				(party_get_template_id, ":template_id_var_8", ":var_8"),
				(try_begin),
					(eq, "$troop_trees", "trp_troop_tree_0"),
					(assign, ":value", "pt_steppe_bandit_lair"),
					(assign, ":value_2", "pt_bandit_lair_templates_end"),
				(else_try),
					(eq, "$troop_trees", "trp_troop_tree_1"),
					(assign, ":value", "pt_steppe_bandit_lair_r"),
					(assign, ":value_2", "pt_bandit_lair_templates_end_r"),
				(else_try),
					(eq, "$troop_trees", "trp_troop_tree_2"),
					(assign, ":value", "pt_steppe_bandit_lair_e"),
					(assign, ":value_2", "pt_bandit_lair_templates_end_e"),
				(try_end),
				(is_between, ":template_id_var_8", ":value", ":value_2"),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_main_party_var_8", "p_main_party", ":var_8"),
				(lt, ":distance_to_party_from_party_main_party_var_8", 3),
				(party_set_flags, ":var_8", 256, 0),
				(party_set_flags, ":var_8", 16384, 1),
			(try_end)
		]),

	(48.0,
		[
			(call_script, "script_randomly_make_prisoner_heroes_escape_from_party", "p_main_party", 50),
			(try_for_range, ":party", "p_town_1", "p_village_1"),
				(assign, ":value", 30),
				(try_begin),
					(party_slot_eq, ":party", slot_center_has_prisoner_tower, 1),
					(assign, ":value", 5),
				(try_end),
				(call_script, "script_randomly_make_prisoner_heroes_escape_from_party", ":party", ":value"),
			(try_end)
		]),

	(48.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(str_store_troop_name, 1, ":troop"),
				(neg|troop_slot_ge, ":troop", 8, 0),
				(neg|troop_slot_ge, ":troop", 10, 1),
				(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
				(try_begin),
					(eq, ":faction_of_troop_troop", "fac_outlaws"),
				(else_try),
					(try_begin),
						(eq, "$cheat_mode", 2),
						(str_store_troop_name, 4, ":troop"),
						(display_message, "str_debug__attempting_to_spawn_s4"),
					(try_end),
					(call_script, "script_cf_select_random_walled_center_with_faction_and_owner_priority_no_siege", ":faction_of_troop_troop", ":troop"),
					(assign, ":var_3", reg0),
					(try_begin),
						(eq, "$cheat_mode", 2),
						(str_store_party_name, 7, ":var_3"),
						(str_store_troop_name, 0, ":troop"),
						(display_message, "str_debug__s0_is_spawning_around_party__s7"),
					(try_end),
					(call_script, "script_create_kingdom_hero_party", ":troop", ":var_3"),
					(try_begin),
						(eq, "$g_there_is_no_avaliable_centers", 0),
						(party_attach_to_party, "$pout_party", ":var_3"),
					(try_end),
					(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
					(call_script, "script_party_set_ai_state", ":troop_leaded_party", 7, ":var_3"),
				(else_try),
					(neg|faction_slot_eq, ":faction_of_troop_troop", slot_faction_state, 0),
					(try_begin),
						(is_between, ":troop", "trp_kingdom_1_lord", "trp_knight_1_1"),
						(troop_set_slot, ":troop", slot_troop_change_to_faction, "fac_commoners"),
					(else_try),
						(store_random_in_range, ":random_in_range_0_100", 0, 100),
						(lt, ":random_in_range_0_100", 10),
						(call_script, "script_cf_get_random_active_faction_except_player_faction_and_faction", ":faction_of_troop_troop"),
						(troop_set_slot, ":troop", slot_troop_change_to_faction, reg0),
					(try_end),
				(try_end),
			(try_end)
		]),

	(24.0,
		[
			(try_for_range, ":party", "p_village_1", "p_salt_mine"),
				(party_slot_eq, ":party", slot_village_state, 0),
				(party_get_slot, ":party_village_farmer_party", ":party", slot_village_farmer_party),
				(this_or_next|eq, ":party_village_farmer_party", 0),
				(neg|party_is_active, ":party_village_farmer_party"),
				(store_random_in_range, ":random_in_range_0_100", 0, 100),
				(lt, ":random_in_range_0_100", 60),
				(call_script, "script_create_village_farmer_party", ":party"),
				(party_set_slot, ":party", slot_village_farmer_party, reg0),
			(try_end)
		]),

	(72.0,
		[
			(call_script, "script_update_trade_good_prices"),
			(try_for_range, ":party", "p_town_1", "p_salt_mine"),
				(party_get_slot, ":party_town_player_odds", ":party", slot_town_player_odds),
				(try_begin),
					(gt, ":party_town_player_odds", 1000),
					(val_mul, ":party_town_player_odds", 95),
					(val_div, ":party_town_player_odds", 100),
					(val_max, ":party_town_player_odds", 1000),
				(else_try),
					(lt, ":party_town_player_odds", 1000),
					(val_mul, ":party_town_player_odds", 105),
					(val_div, ":party_town_player_odds", 100),
					(val_min, ":party_town_player_odds", 1000),
				(try_end),
				(party_set_slot, ":party", slot_town_player_odds, ":party_town_player_odds"),
			(try_end)
		]),

	(2.0,
		[
			(try_for_parties, ":var_1"),
				(party_slot_eq, ":var_1", slot_party_type, 23),
				(party_is_in_any_town, ":var_1"),
				(party_get_cur_town, ":cur_town_var_1", ":var_1"),
				(call_script, "script_party_add_party_companions", ":cur_town_var_1", ":var_1"),
				(remove_party, ":var_1"),
			(try_end)
		]),

	(8.0,
		[
			(try_for_parties, ":var_1"),
				(try_begin),
					(party_slot_eq, ":var_1", slot_party_type, 11),
					(party_is_in_any_town, ":var_1"),
					(store_faction_of_party, ":faction_of_party_var_1", ":var_1"),
					(faction_get_slot, ":faction_of_party_var_1_num_towns", ":faction_of_party_var_1", slot_faction_num_towns),
					(try_begin),
						(le, ":faction_of_party_var_1_num_towns", 0),
						(remove_party, ":var_1"),
					(else_try),
						(party_get_cur_town, ":cur_town_var_1", ":var_1"),
						(store_random_in_range, ":random_in_range_0_100", 0, 100),
						(try_begin),
							(party_slot_eq, ":cur_town_var_1", slot_town_lord, "trp_player"),
							(game_get_reduce_campaign_ai, ":game_reduce_campaign_ai"),
							(try_begin),
								(eq, ":game_reduce_campaign_ai", 0),
								(assign, ":value", 35),
							(else_try),
								(eq, ":game_reduce_campaign_ai", 1),
								(assign, ":value", 45),
							(else_try),
								(eq, ":game_reduce_campaign_ai", 2),
								(assign, ":value", 60),
							(try_end),
						(else_try),
							(assign, ":value", 45),
						(try_end),
						(lt, ":random_in_range_0_100", ":value"),
						(assign, ":value_2", 1),
						(try_begin),
							(is_between, ":cur_town_var_1", "p_town_1", "p_village_1"),
							(neg|party_slot_eq, ":cur_town_var_1", slot_center_is_besieged_by, -1),
							(assign, ":value_2", 0),
						(try_end),
						(eq, ":value_2", 1),
						(assign, ":value_3", 0),
						(try_begin),
							(party_get_slot, ":var_1_ai_state", ":var_1", slot_party_ai_state),
							(eq, ":var_1_ai_state", 13),
							(party_get_slot, ":var_1_ai_object", ":var_1", slot_party_ai_object),
							(eq, ":cur_town_var_1", ":var_1_ai_object"),
							(assign, ":value_3", 1),
						(try_end),
						(assign, ":value_4", -1),
						(try_begin),
							(eq, "$caravan_escort_party_id", ":var_1"),
							(neg|party_is_in_town, ":var_1", "$caravan_escort_destination_town"),
							(assign, ":value_4", "$caravan_escort_destination_town"),
						(else_try),
							(call_script, "script_cf_select_most_profitable_town_at_peace_with_faction_in_trade_route", ":cur_town_var_1", ":faction_of_party_var_1", -1),
							(assign, ":value_4", reg0),
						(try_end),
						(is_between, ":value_4", "p_town_1", "p_castle_1"),
						(neg|party_is_in_town, ":var_1", ":value_4"),
						(try_begin),
							(eq, ":value_3", 1),
							(str_store_party_name, 7, ":cur_town_var_1"),
							(call_script, "script_do_merchant_town_trade", ":var_1", ":cur_town_var_1"),
							(call_script, "script_refresh_travelling_merchant_inventory", ":var_1"),
						(try_end),
						(party_set_ai_behavior, ":var_1", 1),
						(party_set_ai_object, ":var_1", ":value_4"),
						(party_set_flags, ":var_1", 65536, 0),
						(party_set_slot, ":var_1", slot_party_ai_state, 13),
						(party_set_slot, ":var_1", slot_party_ai_object, ":value_4"),
					(try_end),
				(else_try),
					(party_slot_eq, ":var_1", slot_party_type, 14),
					(get_party_ai_object, ":party_ai_object_var_1", ":var_1"),
					(party_slot_ge, ":party_ai_object_var_1", 63, 1),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_party_ai_object_var_1", ":var_1", ":party_ai_object_var_1"),
					(party_get_position, 0, ":party_ai_object_var_1"),
					(party_get_slot, ":party_ai_object_var_1_follow_me", ":party_ai_object_var_1", slot_party_follow_me),
					(val_add, ":party_ai_object_var_1_follow_me", 3),
					(lt, ":distance_to_party_from_party_var_1_party_ai_object_var_1", ":party_ai_object_var_1_follow_me"),
					(assign, ":cur_town_var_1", ":party_ai_object_var_1"),
					(store_faction_of_party, ":faction_of_party_var_1", ":var_1"),
					(faction_get_slot, ":faction_of_party_var_1_num_towns", ":faction_of_party_var_1", slot_faction_num_towns),
					(try_begin),
						(le, ":faction_of_party_var_1_num_towns", 0),
						(remove_party, ":var_1"),
					(else_try),
						(store_random_in_range, ":random_in_range_0_100", 0, 100),
						(try_begin),
							(party_slot_eq, ":cur_town_var_1", slot_town_lord, "trp_player"),
							(game_get_reduce_campaign_ai, ":game_reduce_campaign_ai"),
							(try_begin),
								(eq, ":game_reduce_campaign_ai", 0),
								(assign, ":value", 35),
							(else_try),
								(eq, ":game_reduce_campaign_ai", 1),
								(assign, ":value", 45),
							(else_try),
								(eq, ":game_reduce_campaign_ai", 2),
								(assign, ":value", 60),
							(try_end),
						(else_try),
							(assign, ":value", 45),
						(try_end),
						(lt, ":random_in_range_0_100", ":value"),
						(assign, ":value_2", 1),
						(try_begin),
							(is_between, ":cur_town_var_1", "p_town_1", "p_village_1"),
							(neg|party_slot_eq, ":cur_town_var_1", slot_center_is_besieged_by, -1),
							(assign, ":value_2", 0),
						(try_end),
						(eq, ":value_2", 1),
						(assign, ":value_3", 0),
						(try_begin),
							(party_get_slot, ":var_1_ai_state", ":var_1", slot_party_ai_state),
							(eq, ":var_1_ai_state", 13),
							(party_get_slot, ":var_1_ai_object", ":var_1", slot_party_ai_object),
							(eq, ":cur_town_var_1", ":var_1_ai_object"),
							(assign, ":value_3", 1),
						(try_end),
						(assign, ":value_4", -1),
						(try_begin),
							(call_script, "script_cf_select_most_profitable_coastal_town_at_peace_with_faction_in_trade_route", ":cur_town_var_1", ":faction_of_party_var_1"),
							(assign, ":value_4", reg0),
						(try_end),
						(is_between, ":value_4", "p_town_1", "p_castle_1"),
						(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_value_4", ":var_1", ":value_4"),
						(party_get_position, 0, ":value_4"),
						(party_get_slot, ":party_ai_object_var_1_follow_me", ":value_4", slot_party_follow_me),
						(map_get_water_position_around_position, 1, 0, ":party_ai_object_var_1_follow_me"),
						(val_add, ":party_ai_object_var_1_follow_me", 2),
						(gt, ":distance_to_party_from_party_var_1_value_4", ":party_ai_object_var_1_follow_me"),
						(try_begin),
							(eq, ":value_3", 1),
							(str_store_party_name, 7, ":cur_town_var_1"),
							(call_script, "script_do_merchant_town_trade", ":var_1", ":cur_town_var_1"),
							(call_script, "script_refresh_travelling_merchant_inventory", ":var_1"),
						(try_end),
						(party_set_ai_behavior, ":var_1", 6),
						(party_set_ai_target_position, ":var_1", 1),
						(party_set_ai_object, ":var_1", ":value_4"),
						(party_set_flags, ":var_1", 65536, 0),
						(party_set_slot, ":var_1", slot_party_ai_state, 13),
						(party_set_slot, ":var_1", slot_party_ai_object, ":value_4"),
					(try_end),
				(try_end),
			(try_end)
		]),

	(8.0,
		[
			(try_for_parties, ":var_1"),
				(party_slot_eq, ":var_1", slot_party_type, 15),
				(party_is_in_any_town, ":var_1"),
				(party_get_slot, ":var_1_home_center", ":var_1", slot_party_home_center),
				(party_get_cur_town, ":cur_town_var_1", ":var_1"),
				(assign, ":value", 1),
				(try_begin),
					(is_between, ":cur_town_var_1", "p_town_1", "p_village_1"),
					(neg|party_slot_eq, ":cur_town_var_1", slot_center_is_besieged_by, -1),
					(assign, ":value", 0),
				(try_end),
				(eq, ":value", 1),
				(try_begin),
					(eq, ":cur_town_var_1", ":var_1_home_center"),
					(call_script, "script_do_party_center_trade", ":var_1", ":var_1_home_center", 3),
					(store_faction_of_party, ":faction_of_party_cur_town_var_1", ":cur_town_var_1"),
					(party_set_faction, ":var_1", ":faction_of_party_cur_town_var_1"),
					(party_get_slot, ":var_1_home_center_village_market_town", ":var_1_home_center", slot_village_market_town),
					(party_set_slot, ":var_1", slot_party_ai_object, ":var_1_home_center_village_market_town"),
					(party_set_slot, ":var_1", slot_party_ai_state, 13),
					(party_set_ai_behavior, ":var_1", 1),
					(party_set_ai_object, ":var_1", ":var_1_home_center_village_market_town"),
				(else_try),
					(try_begin),
						(party_get_slot, ":var_1_ai_object", ":var_1", slot_party_ai_object),
						(eq, ":cur_town_var_1", ":var_1_ai_object"),
						(call_script, "script_do_party_center_trade", ":var_1", ":var_1_ai_object", 3),
						(assign, ":var_8", reg0),
						(party_get_slot, ":var_1_ai_object_center_accumulated_tariffs", ":var_1_ai_object", slot_center_accumulated_tariffs),
						(party_get_slot, ":var_1_ai_object_town_prosperity", ":var_1_ai_object", slot_town_prosperity),
						(assign, ":var_11", ":var_8"),
						(val_mul, ":var_11", ":var_1_ai_object_town_prosperity"),
						(val_add, ":var_11", 50),
						(val_div, ":var_11", 100),
						(val_div, ":var_11", 5),
						(val_div, ":var_11", 20),
						(val_add, ":var_1_ai_object_center_accumulated_tariffs", ":var_11"),
						(try_begin),
							(party_slot_ge, ":var_1_ai_object", 39, 1),
							(assign, ":var_1_ai_object_center_accumulated_tariffs", 0),
						(try_end),
						(try_begin),
							(ge, "$cheat_mode", 3),
							(assign, reg4, ":var_11"),
							(str_store_party_name, 4, ":var_1_ai_object"),
							(assign, reg5, ":var_1_ai_object_center_accumulated_tariffs"),
							(display_message, "@{!}New tariffs at {s4} = {reg4}, total = {reg5}"),
						(try_end),
						(party_set_slot, ":var_1_ai_object", slot_center_accumulated_tariffs, ":var_1_ai_object_center_accumulated_tariffs"),
						(party_get_slot, ":var_1_ai_object_food_store", ":var_1_ai_object", slot_party_food_store),
						(call_script, "script_center_get_food_store_limit", ":var_1_ai_object"),
						(assign, ":var_13", reg0),
						(val_add, ":var_1_ai_object_food_store", 1000),
						(val_min, ":var_1_ai_object_food_store", ":var_13"),
						(party_set_slot, ":var_1_ai_object", slot_party_food_store, ":var_1_ai_object_food_store"),
						(try_begin),
							(store_random_in_range, ":random_in_range_0_100", 0, 100),
							(lt, ":random_in_range_0_100", 5),
							(call_script, "script_change_center_prosperity", ":var_1_home_center", 1),
							(val_add, "$newglob_total_prosperity_from_village_trade", 1),
						(try_end),
					(try_end),
					(party_set_slot, ":var_1", slot_party_ai_object, ":var_1_home_center"),
					(party_set_slot, ":var_1", slot_party_ai_state, 13),
					(party_set_ai_behavior, ":var_1", 1),
					(party_set_ai_object, ":var_1", ":var_1_home_center"),
				(try_end),
			(try_end)
		]),

	(48.0,
		[
			(try_begin),
				(lt, "$g_dplmc_gold_changes", 0),
				(try_for_range, ":party", "p_castle_1", "p_village_1"),
					(party_slot_eq, ":party", slot_center_is_besieged_by, -1),
					(party_get_slot, ":party_food_store", ":party", slot_party_food_store),
					(val_add, ":party_food_store", 100),
					(call_script, "script_center_get_food_store_limit", ":party"),
					(assign, ":value", reg0),
					(val_min, ":party_food_store", ":value"),
					(party_set_slot, ":party", slot_party_food_store, ":party_food_store"),
				(try_end),
			(else_try),
				(try_for_range, ":party_2", "p_village_1", "p_salt_mine"),
					(neg|party_slot_ge, ":party_2", 54, 0),
					(party_slot_eq, ":party_2", slot_village_state, 0),
					(party_get_slot, ":party", ":party_2", slot_village_bound_center),
					(is_between, ":party", "p_castle_1", "p_village_1"),
					(neg|party_slot_ge, ":party", 54, 0),
					(party_get_slot, ":party_food_store", ":party", slot_party_food_store),
					(party_get_slot, reg0, ":party_2", slot_town_prosperity),
					(val_add, reg0, 75),
					(val_mul, reg0, 100),
					(val_add, reg0, 62),
					(val_div, reg0, 125),
					(val_add, ":party_food_store", reg0),
					(call_script, "script_center_get_food_store_limit", ":party"),
					(assign, ":value", reg0),
					(val_min, ":party_food_store", ":value"),
					(party_set_slot, ":party", slot_party_food_store, ":party_food_store"),
				(try_end),
			(try_end)
		]),

	(0.5,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(gt, ":troop_leaded_party", 0),
				(try_begin),
					(party_is_active, ":troop_leaded_party"),
					(try_begin),
						(get_party_ai_current_behavior, ":party_ai_current_behavior_troop_leaded_party", ":troop_leaded_party"),
						(eq, ":party_ai_current_behavior_troop_leaded_party", 5),
						(assign, ":value", 1),
						(try_begin),
							(this_or_next|troop_slot_eq, ":troop", slot_lord_reputation_type, 7),
							(troop_slot_eq, ":troop", slot_lord_reputation_type, 1),
							(get_party_ai_current_object, ":party_ai_current_object_troop_leaded_party", ":troop_leaded_party"),
							(party_is_active, ":party_ai_current_object_troop_leaded_party"),
							(party_get_battle_opponent, ":battle_opponent_party_ai_current_object_troop_leaded_party", ":party_ai_current_object_troop_leaded_party"),
							(party_is_active, ":battle_opponent_party_ai_current_object_troop_leaded_party"),
							(assign, ":value", 0),
						(try_end),
						(eq, ":value", 1),
						(store_faction_of_party, ":faction_of_party_troop_leaded_party", ":troop_leaded_party"),
						(party_get_slot, ":troop_leaded_party_commander_party", ":troop_leaded_party", slot_party_commander_party),
						(faction_get_slot, ":faction_of_party_troop_leaded_party_marshall", ":faction_of_party_troop_leaded_party", slot_faction_marshall),
						(neq, ":faction_of_party_troop_leaded_party_marshall", ":troop"),
						(assign, ":value", 1),
						(try_begin),
							(ge, ":faction_of_party_troop_leaded_party_marshall", 0),
							(troop_get_slot, ":faction_of_party_troop_leaded_party_marshall_leaded_party", ":faction_of_party_troop_leaded_party_marshall", slot_troop_leaded_party),
							(party_is_active, ":faction_of_party_troop_leaded_party_marshall_leaded_party", 0),
							(eq, ":troop_leaded_party_commander_party", ":faction_of_party_troop_leaded_party_marshall_leaded_party"),
							(assign, ":value", 0),
						(try_end),
						(eq, ":value", 1),
						(assign, ":value_2", 0),
						(try_for_range, ":party", "p_town_1", "p_village_1"),
							(eq, ":value_2", 0),
							(party_slot_eq, ":party", slot_center_is_besieged_by, -1),
							(store_faction_of_party, ":faction_of_party_party", ":party"),
							(store_relation, ":relation_faction_of_party_party_faction_of_party_troop_leaded_party", ":faction_of_party_party", ":faction_of_party_troop_leaded_party"),
							(gt, ":relation_faction_of_party_party_faction_of_party_troop_leaded_party", 0),
							(store_distance_to_party_from_party, ":distance_to_party_from_party_troop_leaded_party_party", ":troop_leaded_party", ":party"),
							(lt, ":distance_to_party_from_party_troop_leaded_party_party", 20),
							(party_get_position, 1, ":troop_leaded_party"),
							(party_get_position, 2, ":party"),
							(neg|position_is_behind_position, 2, 1),
							(call_script, "script_party_set_ai_state", ":troop_leaded_party", 14, ":party"),
							(assign, ":value_2", 1),
						(try_end),
					(try_end),
				(else_try),
					(troop_set_slot, ":troop", slot_troop_leaded_party, -1),
				(try_end),
			(try_end)
		]),

	(0.5,
		[
			(store_current_hours, ":current_hours"),
			(store_mod, ":value", ":current_hours", 11),
			(store_sub, ":value_2", ":current_hours", 5),
			(party_get_num_companions, ":num_companions_main_party", "p_main_party"),
			(party_get_num_prisoners, ":num_prisoners_main_party", "p_main_party"),
			(val_add, ":num_companions_main_party", ":num_prisoners_main_party"),
			(convert_to_fixed_point, ":num_companions_main_party"),
			(store_sqrt, ":value_3", ":num_companions_main_party"),
			(convert_from_fixed_point, ":value_3"),
			(try_begin),
				(eq, ":value", 0),
				(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
					(faction_get_slot, ":faction_player_alarm", ":faction", slot_faction_player_alarm),
					(val_sub, ":faction_player_alarm", 1),
					(val_max, ":faction_player_alarm", 0),
					(faction_set_slot, ":faction", slot_faction_player_alarm, ":faction_player_alarm"),
				(try_end),
			(try_end),
			(eq, "$g_player_is_captive", 0),
			(try_for_range, ":party", "p_town_1", "p_salt_mine"),
				(store_faction_of_party, ":faction", ":party"),
				(store_relation, ":relation_faction_player_supporters_faction", ":faction", "fac_player_supporters_faction"),
				(lt, ":relation_faction_player_supporters_faction", 0),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_main_party_party", "p_main_party", ":party"),
				(lt, ":distance_to_party_from_party_main_party_party", 5),
				(store_mul, ":value_4", ":distance_to_party_from_party_main_party_party", ":distance_to_party_from_party_main_party_party"),
				(store_sub, ":value_5", 20, ":value_4"),
				(store_sub, ":value_6", 20, ":relation_faction_player_supporters_faction"),
				(store_mul, ":value_7", ":value_5", ":value_6"),
				(val_mul, ":value_7", ":value_3"),
				(store_div, ":value_8", ":value_7", 10),
				(store_random_in_range, ":random_in_range_0_1000", 0, 1000),
				(lt, ":random_in_range_0_1000", ":value_8"),
				(faction_get_slot, ":faction_player_alarm", ":faction", slot_faction_player_alarm),
				(val_add, ":faction_player_alarm", 1),
				(val_min, ":faction_player_alarm", 100),
				(faction_set_slot, ":faction", slot_faction_player_alarm, ":faction_player_alarm"),
				(try_begin),
					(neg|party_slot_ge, ":party", 42, ":value_2"),
					(str_store_party_name_link, 1, ":party"),
					(display_message, "@Your party is spotted by {s1}."),
					(party_set_slot, ":party", slot_center_last_player_alarm_hour, ":current_hours"),
				(try_end),
			(try_end)
		]),

	(14.0,
		[
			(eq, "$g_player_is_captive", 0),
			(party_get_num_companion_stacks, ":num_companion_stacks_main_party", "p_main_party"),
			(assign, ":value", 0),
			(try_for_range, ":number", 0, ":num_companion_stacks_main_party"),
				(party_stack_get_size, ":party_stack_size_main_party_number", "p_main_party", ":number"),
				(val_add, ":value", ":party_stack_size_main_party_number"),
			(try_end),
			(val_div, ":value", 3),
			(try_begin),
				(eq, ":value", 0),
				(val_add, ":value", 1),
			(try_end),
			(try_begin),
				(assign, ":var_5", 0),
				(try_for_range, ":item", "itm_trade_smoked_fish", "itm_trade_dummy01"),
					(call_script, "script_cf_player_has_item_without_modifier", ":item", 41),
					(val_add, ":var_5", 1),
				(try_end),
				(try_begin),
					(ge, ":var_5", 6),
					(unlock_achievement, 36),
				(try_end),
			(try_end),
			(call_script, "script_forage_for_food"),
			(assign, ":var_7", ":value"),
			(try_begin),
				(ge, reg4, ":value"),
				(assign, ":value", 1),
			(else_try),
				(val_sub, ":value", reg4),
			(try_end),
			(assign, ":var_8", ":value"),
			(assign, ":value_2", 0),
			(try_for_range, ":unused", 0, ":var_8"),
				(assign, ":var_11", 0),
				(try_for_range, ":item_2", "itm_trade_smoked_fish", "itm_trade_dummy01"),
					(item_set_slot, ":item_2", slot_item_is_checked, 0),
					(call_script, "script_cf_player_has_item_without_modifier", ":item_2", 41),
					(val_add, ":var_11", 1),
				(try_end),
				(try_begin),
					(gt, ":var_11", 0),
					(store_random_in_range, ":random_in_range_0_var_11", 0, ":var_11"),
					(call_script, "script_consume_food", ":random_in_range_0_var_11"),
				(else_try),
					(eq, ":value_2", 0),
					(display_message, "@Your soldiers have nothing to eat!", 0x00ff0000),
					(call_script, "script_change_player_party_morale", -3),
					(assign, ":value_2", 1),
					(try_begin),
						(call_script, "script_party_count_fit_regulars", "p_main_party"),
						(gt, reg0, 0),
						(call_script, "script_objectionable_action", 2, "str_men_hungry"),
					(try_end),
				(try_end),
			(try_end),
			(call_script, "script_food_consumption_display_message", ":var_7"),
			(call_script, "script_get_player_party_morale_values"),
			(assign, ":var_14", reg1),
			(party_get_morale, ":morale_main_party", "p_main_party"),
			(store_sub, ":value_3", ":var_14", ":morale_main_party"),
			(store_skill_level, ":skill_level_leadership_player", "skl_leadership", "trp_player"),
			(try_begin),
				(gt, ":value_3", 0),
				(store_add, ":value_4", 20, ":skill_level_leadership_player"),
			(else_try),
				(store_sub, ":value_4", 20, ":skill_level_leadership_player"),
			(try_end),
			(store_mul, ":value_5", ":value_3", ":value_4"),
			(val_div, ":value_5", 100),
			(store_mul, ":value_6", ":value_5", 100),
			(val_div, ":value_6", ":value_4"),
			(try_begin),
				(neq, ":value_6", ":value_3"),
				(try_begin),
					(gt, ":value_3", 0),
					(val_add, ":value_5", 1),
				(else_try),
					(val_sub, ":value_5", 1),
				(try_end),
			(try_end),
			(val_add, ":morale_main_party", ":value_5"),
			(val_clamp, ":morale_main_party", 0, 100),
			(party_set_morale, "p_main_party", ":morale_main_party"),
			(assign, reg1, ":morale_main_party"),
			(display_message, "@Current force morale is {reg1}."),
			(call_script, "script_sort_food", "trp_player")
		]),

	(24.0,
		[
			(troop_get_inventory_capacity, ":inventory_capacity_player", "trp_player"),
			(try_for_range, ":number", 0, ":inventory_capacity_player"),
				(troop_get_inventory_slot, ":inventory_slot_player_number", "trp_player", ":number"),
				(this_or_next|eq, ":inventory_slot_player_number", "itm_trade_cattle_meat"),
				(this_or_next|eq, ":inventory_slot_player_number", "itm_trade_chicken"),
				(eq, ":inventory_slot_player_number", "itm_trade_pork"),
				(troop_get_inventory_slot_modifier, ":inventory_slot_modifier_player_number", "trp_player", ":number"),
				(try_begin),
					(ge, ":inventory_slot_modifier_player_number", 37),
					(lt, ":inventory_slot_modifier_player_number", 41),
					(val_add, ":inventory_slot_modifier_player_number", 1),
					(troop_set_inventory_slot_modifier, "trp_player", ":number", ":inventory_slot_modifier_player_number"),
				(else_try),
					(lt, ":inventory_slot_modifier_player_number", 37),
					(troop_set_inventory_slot_modifier, "trp_player", ":number", 37),
				(try_end),
			(try_end)
		]),

	(72.0,
		[]),

	(0.0,
		[
			(troop_get_inventory_slot, ":inventory_slot_player_8", "trp_player", 8),
			(assign, ":value", -1),
			(try_begin),
				(eq, "$g_player_icon_state", 0),
				(try_begin),
					(ge, ":inventory_slot_player_8", 0),
					(assign, ":value", "icon_people_player_horseman"),
				(else_try),
					(assign, ":value", "icon_people_player"),
				(try_end),
			(else_try),
				(eq, "$g_player_icon_state", 1),
				(assign, ":value", "icon_camp_plain"),
			(else_try),
				(eq, "$g_player_icon_state", 2),
				(assign, ":value", "icon_ship"),
			(try_end),
			(neq, ":value", "$g_player_party_icon"),
			(assign, "$g_player_party_icon", ":value"),
			(party_set_icon, "p_main_party", ":value")
		]),

	(2.0,
		[
			(store_troop_gold, ":troop_gold_player", "trp_player"),
			(store_div, ":value", ":troop_gold_player", 100),
			(troop_get_inventory_capacity, ":inventory_capacity_player", "trp_player"),
			(try_for_range, ":number", 0, ":inventory_capacity_player"),
				(troop_get_inventory_slot, ":inventory_slot_player_number", "trp_player", ":number"),
				(ge, ":inventory_slot_player_number", 0),
				(try_begin),
					(is_between, ":inventory_slot_player_number", "itm_trade_spice", "itm_trade_dummy01"),
					(store_item_value, ":item_value_inventory_slot_player_number", ":inventory_slot_player_number"),
					(val_add, ":troop_gold_player", ":item_value_inventory_slot_player_number"),
				(try_end),
			(try_end),
			(val_clamp, ":value", 0, 100),
			(party_set_bandit_attraction, "p_main_party", ":value")
		]),

	(3.0,
		[
			(try_for_range, ":party", "p_town_1", "p_village_1"),
				(faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, 2),
				(store_faction_of_party, ":faction_of_party_party", ":party"),
				(eq, ":faction_of_party_party", "fac_player_supporters_faction"),
				(call_script, "script_activate_player_faction", "trp_player"),
			(try_end),
			(try_begin),
				(is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(le, "$g_player_minister", 0),
				(faction_get_slot, ":players_kingdom_leader", "$players_kingdom", slot_faction_leader),
				(ge, ":players_kingdom_leader", 0),
				(try_begin),
					(this_or_next|eq, ":players_kingdom_leader", "trp_player"),
					(troop_slot_eq, "trp_player", slot_troop_spouse, ":players_kingdom_leader"),
					(assign, "$g_player_minister", "trp_temporary_minister"),
					(troop_set_faction, "trp_temporary_minister", "fac_player_supporters_faction"),
				(else_try),
					(is_between, ":players_kingdom_leader", "trp_npc1", "trp_heroes_end"),
					(troop_slot_eq, ":players_kingdom_leader", slot_troop_spouse, "trp_player"),
					(assign, "$g_player_minister", "trp_temporary_minister"),
					(troop_set_faction, "trp_temporary_minister", "fac_player_supporters_faction"),
				(try_end),
			(try_end)
		]),

	(6.0,
		[
			(gt, "$g_prisoner_recruit_troop_id", 0),
			(gt, "$g_prisoner_recruit_size", 0),
			(gt, "$g_prisoner_recruit_last_time", 0),
			(is_currently_night),
			(try_begin),
				(store_skill_level, ":skill_level_leadership_player", "skl_leadership", "trp_player"),
				(val_mul, ":skill_level_leadership_player", 5),
				(store_sub, ":value", 66, ":skill_level_leadership_player"),
				(gt, ":value", 0),
				(assign, ":value_2", 0),
				(try_for_range, ":unused", 0, "$g_prisoner_recruit_size"),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(lt, ":random_in_range_0_100", ":value"),
					(val_add, ":value_2", 1),
				(try_end),
				(party_remove_members, "p_main_party", "$g_prisoner_recruit_troop_id", ":value_2"),
				(assign, ":value_2", reg0),
				(gt, ":value_2", 0),
				(try_begin),
					(gt, ":value_2", 1),
					(assign, reg2, 1),
				(else_try),
					(assign, reg2, 0),
				(try_end),
				(assign, reg1, ":value_2"),
				(str_store_troop_name_by_count, 1, "$g_prisoner_recruit_troop_id", ":value_2"),
				(display_log_message, "@{reg1} {s1} {reg2?have:has} escaped from your party during the night."),
			(try_end),
			(assign, "$g_prisoner_recruit_troop_id", 0),
			(assign, "$g_prisoner_recruit_size", 0)
		]),

	(24.0,
		[
			(neq, "$g_ransom_offer_rejected", 1),
			(call_script, "script_offer_ransom_amount_to_player_for_prisoners_in_party", "p_main_party"),
			(eq, reg0, 0),
			(assign, ":value", "p_village_1"),
			(try_for_range, ":party", "p_town_1", ":value"),
				(party_slot_eq, ":party", slot_town_lord, "trp_player"),
				(call_script, "script_offer_ransom_amount_to_player_for_prisoners_in_party", ":party"),
				(eq, reg0, 1),
				(assign, ":value", 0),
			(try_end)
		]),

	(72.0,
		[
			(assign, "$g_ransom_offer_rejected", 0),
			(try_for_range, ":party", "p_town_1", "p_village_1"),
				(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
				(gt, ":party_town_lord", 0),
				(party_get_num_prisoner_stacks, ":num_prisoner_stacks_party", ":party"),
				(try_for_range_backwards, ":var_4", 0, ":num_prisoner_stacks_party"),
					(party_prisoner_stack_get_troop_id, ":party_prisoner_stack_troop_id_party_var_4", ":party", ":var_4"),
					(troop_is_hero, ":party_prisoner_stack_troop_id_party_var_4"),
					(troop_slot_eq, ":party_prisoner_stack_troop_id_party_var_4", slot_troop_occupation, 2),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(try_begin),
						(le, ":random_in_range_0_100", 10),
						(call_script, "script_calculate_ransom_amount_for_troop", ":party_prisoner_stack_troop_id_party_var_4"),
						(assign, ":var_7", reg0),
						(call_script, "script_dplmc_remove_gold_from_lord_and_holdings", ":var_7", ":party_prisoner_stack_troop_id_party_var_4"),
						(troop_get_slot, ":party_town_lord_wealth", ":party_town_lord", slot_troop_wealth),
						(val_add, ":party_town_lord_wealth", ":var_7"),
						(troop_set_slot, ":party_town_lord", slot_troop_wealth, ":party_town_lord_wealth"),
						(party_remove_prisoners, ":party", ":party_prisoner_stack_troop_id_party_var_4", 1),
						(call_script, "script_remove_troop_from_prison", ":party_prisoner_stack_troop_id_party_var_4"),
						(store_faction_of_troop, ":faction_of_troop_party_town_lord", ":party_town_lord"),
						(store_faction_of_troop, ":faction_of_troop_party_prisoner_stack_troop_id_party_var_4", ":party_prisoner_stack_troop_id_party_var_4"),
						(str_store_troop_name, 1, ":party_prisoner_stack_troop_id_party_var_4"),
						(str_store_faction_name, 2, ":faction_of_troop_party_town_lord"),
						(str_store_faction_name, 3, ":faction_of_troop_party_prisoner_stack_troop_id_party_var_4"),
						(display_log_message, "@{s1} of the {s3} has been released from captivity."),
					(try_end),
				(try_end),
			(try_end)
		]),

	(72.0,
		[
			(call_script, "script_update_mercenary_units_of_towns"),
			(call_script, "script_update_town_specialists"),
			(call_script, "script_update_ransom_brokers"),
			(call_script, "script_update_tavern_travellers"),
			(call_script, "script_update_tavern_minstrels"),
			(call_script, "script_update_mystic_merchant"),
			(call_script, "script_update_ranger_master"),
			(call_script, "script_update_booksellers"),
			(call_script, "script_update_villages_infested_by_bandits"),
			(try_for_range, ":party", "p_town_1", "p_salt_mine"),
				(call_script, "script_update_volunteer_troops_in_village", ":party"),
				(call_script, "script_update_npc_volunteer_troops_in_village", ":party"),
			(try_end)
		]),

	(24.0,
		[
			(call_script, "script_update_other_taverngoers")
		]),

	(36.0,
		[
			(try_for_range, ":party", "p_town_1", "p_salt_mine"),
				(this_or_next|party_slot_eq, ":party", slot_party_type, 3),
				(party_slot_eq, ":party", slot_party_type, 4),
				(call_script, "script_center_remove_walker_type_from_walkers", ":party", 1),
				(call_script, "script_center_remove_walker_type_from_walkers", ":party", 2),
				(store_random_in_range, ":random_in_range_0_100", 0, 100),
				(try_begin),
					(lt, ":random_in_range_0_100", 70),
					(neg|party_slot_ge, ":party", 50, 60),
					(call_script, "script_cf_center_get_free_walker", ":party"),
					(call_script, "script_center_set_walker_to_type", ":party", reg0, 1),
				(try_end),
			(try_end)
		]),

	(12.0,
		[
			(try_for_range, ":party", "p_town_1", "p_salt_mine"),
				(party_get_slot, ":party_center_current_improvement", ":party", slot_center_current_improvement),
				(gt, ":party_center_current_improvement", 0),
				(party_get_slot, ":party_center_improvement_end_hour", ":party", slot_center_improvement_end_hour),
				(store_current_hours, ":current_hours"),
				(ge, ":current_hours", ":party_center_improvement_end_hour"),
				(party_set_slot, ":party", ":party_center_current_improvement", 1),
				(party_set_slot, ":party", slot_center_current_improvement, 0),
				(call_script, "script_get_improvement_details", ":party_center_current_improvement"),
				(try_begin),
					(party_slot_eq, ":party", slot_town_lord, "trp_player"),
					(str_store_party_name, 4, ":party"),
					(display_log_message, "@Building of {s0} in {s4} has been completed."),
				(try_end),
				(try_begin),
					(is_between, ":party", "p_village_1", "p_salt_mine"),
					(eq, ":party_center_current_improvement", 131),
					(call_script, "script_change_center_prosperity", ":party", 20),
				(try_end),
			(try_end)
		]),

	(24.0,
		[
			(assign, ":var_1", 0),
			(try_for_range, ":party", "p_town_1", "p_castle_1"),
				(party_get_slot, ":party_town_has_tournament", ":party", slot_town_has_tournament),
				(try_begin),
					(eq, ":party_town_has_tournament", 1),
					(call_script, "script_fill_tournament_participants_troop", ":party", 0),
					(call_script, "script_sort_tournament_participant_troops"),
					(call_script, "script_get_num_tournament_participants"),
					(store_sub, ":value", reg0, 1),
					(call_script, "script_remove_tournament_participants_randomly", ":value"),
					(call_script, "script_sort_tournament_participant_troops"),
					(troop_get_slot, ":tournament_participants_relations_begin", "trp_tournament_participants", slot_troop_relations_begin),
					(try_begin),
						(is_between, ":tournament_participants_relations_begin", "trp_npc1", "trp_knight_1_1_wife"),
						(str_store_troop_name_link, 1, ":tournament_participants_relations_begin"),
						(str_store_party_name_link, 2, ":party"),
						(display_message, "@{s1} has won the tournament at {s2}."),
						(call_script, "script_change_troop_renown", ":tournament_participants_relations_begin", 20),
					(try_end),
				(try_end),
				(val_sub, ":party_town_has_tournament", 1),
				(val_max, ":party_town_has_tournament", 0),
				(party_set_slot, ":party", slot_town_has_tournament, ":party_town_has_tournament"),
				(try_begin),
					(gt, ":party_town_has_tournament", 0),
					(val_add, ":var_1", 1),
				(try_end),
			(try_end),
			(try_for_range, ":party", "p_town_1", "p_salt_mine"),
				(this_or_next|party_slot_eq, ":party", slot_party_type, 3),
				(party_slot_eq, ":party", slot_party_type, 4),
				(party_get_slot, ":party_center_has_bandits", ":party", slot_center_has_bandits),
				(try_begin),
					(le, ":party_center_has_bandits", 0),
					(assign, ":value_2", 0),
					(try_begin),
						(check_quest_active, "qst_deal_with_night_bandits"),
						(quest_slot_eq, "qst_deal_with_night_bandits", slot_quest_target_center, ":party"),
						(neg|check_quest_succeeded, "qst_deal_with_night_bandits"),
						(assign, ":value_2", 1),
					(else_try),
						(store_random_in_range, ":random_in_range_0_100", 0, 100),
						(lt, ":random_in_range_0_100", 3),
						(assign, ":value_2", 1),
					(try_end),
					(try_begin),
						(eq, ":value_2", 1),
						(store_random_in_range, ":random_in_range_0_100", 0, 3),
						(try_begin),
							(eq, ":random_in_range_0_100", 0),
							(troop_get_slot, ":troop_trees_844", "$troop_trees", 844),
							(assign, ":value_3", ":troop_trees_844"),
						(else_try),
							(eq, ":random_in_range_0_100", 1),
							(troop_get_slot, ":troop_trees_846", "$troop_trees", 846),
							(assign, ":value_3", ":troop_trees_846"),
						(else_try),
							(troop_get_slot, ":troop_trees_847", "$troop_trees", 847),
							(assign, ":value_3", ":troop_trees_847"),
						(try_end),
						(party_set_slot, ":party", slot_center_has_bandits, ":value_3"),
						(try_begin),
							(eq, "$cheat_mode", 1),
							(str_store_party_name, 1, ":party"),
							(display_message, "@{!}{s1} is infested by bandits (at night)."),
						(try_end),
					(try_end),
				(else_try),
					(try_begin),
						(assign, ":value_4", 40),
						(try_begin),
							(party_slot_eq, ":party", slot_party_type, 3),
							(assign, ":value_4", 20),
						(try_end),
						(store_random_in_range, ":random_in_range_0_100", 0, 100),
						(lt, ":random_in_range_0_100", ":value_4"),
						(party_set_slot, ":party", slot_center_has_bandits, 0),
						(try_begin),
							(eq, "$cheat_mode", 1),
							(str_store_party_name, 1, ":party"),
							(display_message, "@{s1} is no longer infested by bandits (at night)."),
						(try_end),
					(try_end),
				(try_end),
			(try_end),
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(faction_slot_eq, ":faction", slot_faction_ai_state, 6),
				(faction_get_slot, ":faction_ai_object", ":faction", slot_faction_ai_object),
				(is_between, ":faction_ai_object", "p_town_1", "p_castle_1"),
				(party_slot_ge, ":faction_ai_object", 156, 1),
				(party_set_slot, ":faction_ai_object", slot_town_has_tournament, 2),
			(try_end),
			(try_begin),
				(lt, ":var_1", 3),
				(store_random_in_range, ":random_in_range_0_100", 0, 100),
				(lt, ":random_in_range_0_100", 30),
				(store_random_in_range, ":random_in_range_town_1_castle_1", "p_town_1", "p_castle_1"),
				(store_random_in_range, ":random_in_range_12_15", 12, 15),
				(party_set_slot, ":random_in_range_town_1_castle_1", slot_town_has_tournament, ":random_in_range_12_15"),
				(try_begin),
					(eq, "$cheat_mode", 1),
					(str_store_party_name, 1, ":random_in_range_town_1_castle_1"),
					(display_message, "@{!}{s1} is holding a tournament."),
				(try_end),
			(try_end)
		]),

	(3.0,
		[
			(assign, "$g_player_tournament_placement", 0)
		]),

	(8.0,
		[]),

	(1.0,
		[
			(neg|map_free),
			(is_currently_night),
			(is_between, "$g_last_rest_center", "p_town_1", "p_salt_mine"),
			(neg|party_slot_eq, "$g_last_rest_center", slot_town_lord, "trp_player"),
			(party_get_slot, ":g_last_rest_center_town_lord", "$g_last_rest_center", slot_town_lord),
			(assign, reg0, 0),
			(try_begin),
				(is_between, ":g_last_rest_center_town_lord", "trp_knight_1_1", "trp_heroes_end"),
				(call_script, "script_dplmc_is_affiliated_family_member", ":g_last_rest_center_town_lord"),
				(try_begin),
					(neq, reg0, 0),
					(display_message, "@You are within the walls of an affiliated family member and don't have to pay for accommodation."),
				(try_end),
			(try_end),
			(eq, reg0, 0),
			(store_faction_of_party, ":faction_of_party_g_last_rest_center", "$g_last_rest_center"),
			(neq, ":faction_of_party_g_last_rest_center", "fac_player_supporters_faction"),
			(store_current_hours, ":current_hours"),
			(ge, ":current_hours", "$g_last_rest_payment_until"),
			(store_add, "$g_last_rest_payment_until", ":current_hours", 24),
			(store_troop_gold, ":troop_gold_player", "trp_player"),
			(party_get_num_companions, ":num_companions_main_party", "p_main_party"),
			(store_div, ":value", ":num_companions_main_party", 4),
			(val_add, ":value", 1),
			(try_begin),
				(ge, ":troop_gold_player", ":value"),
				(display_message, "@You pay for accommodation."),
				(troop_remove_gold, "trp_player", ":value"),
			(else_try),
				(gt, ":troop_gold_player", 0),
				(troop_remove_gold, "trp_player", ":troop_gold_player"),
			(try_end)
		]),

	(30.0,
		[
			(call_script, "script_spawn_bandits")
		]),

	(24.0,
		[
			(call_script, "script_update_party_creation_random_limits")
		]),

	(24.0,
		[
			(assign, ":var_1", 0),
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(faction_set_slot, ":faction", slot_faction_number_of_parties, 0),
			(try_end),
			(try_for_parties, ":value"),
				(store_faction_of_party, ":faction_of_party_value", ":value"),
				(is_between, ":faction_of_party_value", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(this_or_next|is_between, ":value", "p_town_1", "p_salt_mine"),
				(party_slot_eq, ":value", slot_party_type, 13),
				(faction_get_slot, ":faction_of_party_value_number_of_parties", ":faction_of_party_value", slot_faction_number_of_parties),
				(val_add, ":faction_of_party_value_number_of_parties", 1),
				(faction_set_slot, ":faction_of_party_value", slot_faction_number_of_parties, ":faction_of_party_value_number_of_parties"),
			(try_end),
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(faction_slot_eq, ":faction", slot_faction_state, 0),
				(val_add, ":var_1", 1),
				(faction_slot_eq, ":faction", slot_faction_number_of_parties, 0),
				(assign, ":value_2", 0),
				(try_begin),
					(eq, ":faction", "fac_player_supporters_faction"),
					(try_begin),
						(le, "$supported_pretender", 0),
						(faction_set_slot, ":faction", slot_faction_state, 2),
						(assign, ":value_2", 1),
					(try_end),
				(else_try),
					(neq, "$players_kingdom", ":faction"),
					(faction_set_slot, ":faction", slot_faction_state, 1),
					(try_for_parties, ":value"),
						(store_faction_of_party, ":faction_of_party_value", ":value"),
						(eq, ":faction_of_party_value", ":faction"),
						(party_get_slot, ":value_home_center", ":value", slot_party_home_center),
						(store_faction_of_party, ":faction_of_party_value_home_center", ":value_home_center"),
						(party_set_faction, ":value", ":faction_of_party_value_home_center"),
					(try_end),
					(assign, ":value_3", -1),
					(try_for_range, ":troop", "trp_kingdom_1_pretender", "trp_knight_1_1_wife"),
						(troop_slot_eq, ":troop", slot_troop_original_faction, ":faction"),
						(assign, ":value_3", ":troop"),
					(try_end),
					(try_begin),
						(is_between, ":value_3", "trp_kingdom_1_pretender", "trp_knight_1_1_wife"),
						(neq, ":value_3", "$supported_pretender"),
						(troop_set_slot, ":value_3", slot_troop_cur_center, 0),
					(try_end),
					(assign, ":value_2", 1),
					(try_begin),
						(eq, "$players_oath_renounced_against_kingdom", ":faction"),
						(assign, "$players_oath_renounced_against_kingdom", 0),
						(assign, "$players_oath_renounced_given_center", 0),
						(assign, "$players_oath_renounced_begin_time", 0),
						(call_script, "script_add_notification_menu", "mnu_notification_oath_renounced_faction_defeated", ":faction", 0),
					(try_end),
					(call_script, "script_add_notification_menu", "mnu_notification_faction_defeated", ":faction", 0),
				(try_end),
				(try_begin),
					(eq, ":value_2", 1),
					(val_sub, ":var_1", 1),
				(try_end),
				(try_for_range, ":faction_2", "fac_player_supporters_faction", "fac_kingdoms_end"),
					(call_script, "script_update_faction_notes", ":faction_2"),
				(try_end),
			(try_end),
			(try_begin),
				(eq, ":var_1", 1),
				(eq, "$g_one_faction_left_notification_shown", 0),
				(assign, "$g_one_faction_left_notification_shown", 1),
				(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
					(faction_slot_eq, ":faction", slot_faction_state, 0),
					(call_script, "script_add_notification_menu", "mnu_notification_one_faction_left", ":faction", 0),
				(try_end),
			(try_end)
		]),

	(3.0,
		[
			(assign, ":var_1", reg0),
			(assign, ":value", "fac_player_supporters_faction"),
			(try_begin),
				(is_between, "$players_kingdom", "fac_kingdom_1", "fac_kingdoms_end"),
				(call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
				(ge, reg0, 50),
				(assign, ":value", "$players_kingdom"),
			(try_end),
			(try_begin),
				(is_between, "$g_player_court", "p_town_1", "p_salt_mine"),
				(troop_get_slot, ":troop_trees_859", "$troop_trees", 859),
				(party_slot_eq, "$g_player_court", slot_village_infested_by_bandits, ":troop_trees_859"),
				(call_script, "script_add_notification_menu", "mnu_notification_court_lost", 0, 0),
			(else_try),
				(is_between, "$g_player_court", "p_town_1", "p_salt_mine"),
				(store_faction_of_party, ":faction_of_party_g_player_court", "$g_player_court"),
				(neq, ":faction_of_party_g_player_court", "fac_player_supporters_faction"),
				(neq, ":faction_of_party_g_player_court", ":value"),
				(call_script, "script_add_notification_menu", "mnu_notification_court_lost", 0, 0),
			(else_try),
				(lt, "$g_player_court", "p_town_1"),
				(this_or_next|faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
				(gt, "$g_player_minister", 0),
				(assign, ":value_2", 0),
				(try_for_range, ":party", "p_town_1", "p_village_1"),
					(eq, ":value_2", 0),
					(store_faction_of_party, ":faction_of_party_g_player_court", ":party"),
					(this_or_next|eq, ":faction_of_party_g_player_court", ":value"),
					(eq, ":faction_of_party_g_player_court", "fac_player_supporters_faction"),
					(assign, ":value_2", ":party"),
				(try_end),
				(ge, ":value_2", 1),
				(call_script, "script_add_notification_menu", "mnu_notification_court_lost", 0, 0),
			(try_end),
			(try_begin),
				(eq, "$troop_trees", "trp_troop_tree_0"),
				(assign, ":value_3", "pt_forest_bandits"),
				(assign, ":value_4", "pt_looters_r"),
			(else_try),
				(eq, "$troop_trees", "trp_troop_tree_1"),
				(assign, ":value_3", "pt_forest_bandits_r"),
				(assign, ":value_4", "pt_looters_e"),
			(else_try),
				(eq, "$troop_trees", "trp_troop_tree_2"),
				(assign, ":value_3", "pt_forest_bandits_e"),
				(assign, ":value_4", "pt_deserters"),
			(try_end),
			(try_for_parties, ":var_9"),
				(gt, ":var_9", "p_spawn_points_end"),
				(party_get_template_id, ":template_id_var_9", ":var_9"),
				(is_between, ":template_id_var_9", ":value_3", ":value_4"),
				(party_template_get_slot, ":party_template_slot_template_id_var_9_party_template_lair_party", ":template_id_var_9", slot_party_template_lair_party),
				(try_begin),
					(gt, ":party_template_slot_template_id_var_9_party_template_lair_party", "p_spawn_points_end"),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_var_9_party_template_slot_template_id_var_9_party_template_lair_party", ":var_9", ":party_template_slot_template_id_var_9_party_template_lair_party"),
					(gt, ":distance_to_party_from_party_var_9_party_template_slot_template_id_var_9_party_template_lair_party", 30),
					(party_set_ai_behavior, ":var_9", 6),
					(party_get_position, 5, ":party_template_slot_template_id_var_9_party_template_lair_party"),
					(party_set_ai_target_position, ":var_9", 5),
				(else_try),
					(get_party_ai_behavior, ":party_ai_behavior_var_9", ":var_9"),
					(eq, ":party_ai_behavior_var_9", 6),
					(try_begin),
						(gt, ":party_template_slot_template_id_var_9_party_template_lair_party", "p_spawn_points_end"),
						(store_distance_to_party_from_party, ":distance_to_party_from_party_var_9_party_template_slot_template_id_var_9_party_template_lair_party", ":var_9", ":party_template_slot_template_id_var_9_party_template_lair_party"),
						(lt, ":distance_to_party_from_party_var_9_party_template_slot_template_id_var_9_party_template_lair_party", 3),
						(party_set_ai_behavior, ":var_9", 3),
						(party_template_get_slot, ":party_template_slot_template_id_var_9_party_template_lair_spawnpoint", ":template_id_var_9", slot_party_template_lair_spawnpoint),
						(party_set_ai_object, ":var_9", ":party_template_slot_template_id_var_9_party_template_lair_spawnpoint"),
						(party_set_ai_patrol_radius, ":var_9", 45),
					(else_try),
						(lt, ":party_template_slot_template_id_var_9_party_template_lair_party", "p_spawn_points_end"),
						(party_set_ai_behavior, ":var_9", 3),
						(party_template_get_slot, ":party_template_slot_template_id_var_9_party_template_lair_spawnpoint", ":template_id_var_9", slot_party_template_lair_spawnpoint),
						(party_set_ai_object, ":var_9", ":party_template_slot_template_id_var_9_party_template_lair_spawnpoint"),
						(party_set_ai_patrol_radius, ":var_9", 45),
					(try_end),
				(try_end),
			(try_end),
			(try_begin),
				(troop_get_slot, ":player_betrothed", "trp_player", slot_troop_betrothed),
				(gt, ":player_betrothed", 0),
				(neg|check_quest_active, "qst_wed_betrothed"),
				(neg|check_quest_active, "qst_wed_betrothed_female"),
				(str_store_troop_name, 5, ":player_betrothed"),
				(display_message, "@Betrothal to {s5} expires"),
				(troop_set_slot, "trp_player", slot_troop_betrothed, -1),
				(troop_set_slot, ":player_betrothed", slot_troop_betrothed, -1),
			(try_end),
			(assign, reg0, ":var_1")
		]),

	(168.0,
		[
			(troop_get_slot, ":player_renown", "trp_player", slot_troop_renown),
			(store_div, ":value", ":player_renown", 200),
			(val_sub, ":player_renown", ":value"),
			(troop_set_slot, "trp_player", slot_troop_renown, ":player_renown")
		]),

	(1.0,
		[
			(neg|map_free),
			(gt, "$g_player_reading_book", 0),
			(player_has_item, "$g_player_reading_book"),
			(store_attribute_level, ":attribute_level_player_2", "trp_player", 2),
			(item_get_slot, ":g_player_reading_book_intelligence_requirement", "$g_player_reading_book", slot_item_intelligence_requirement),
			(le, ":g_player_reading_book_intelligence_requirement", ":attribute_level_player_2"),
			(item_get_slot, ":g_player_reading_book_book_reading_progress", "$g_player_reading_book", slot_item_book_reading_progress),
			(item_get_slot, ":g_player_reading_book_book_read", "$g_player_reading_book", slot_item_book_read),
			(eq, ":g_player_reading_book_book_read", 0),
			(assign, ":var_5", 0),
			(try_for_range, ":troop", "trp_npc1", "trp_kingdom_1_lord"),
				(main_party_has_troop, ":troop"),
				(call_script, "script_get_book_read_slot", ":troop", "$g_player_reading_book"),
				(assign, ":var_7", reg0),
				(troop_slot_eq, "trp_book_read", ":var_7", 1),
				(val_add, ":var_5", 1),
			(try_end),
			(val_div, ":var_5", 4),
			(val_add, ":var_5", 3),
			(val_add, ":g_player_reading_book_book_reading_progress", ":var_5"),
			(item_set_slot, "$g_player_reading_book", slot_item_book_reading_progress, ":g_player_reading_book_book_reading_progress"),
			(ge, ":g_player_reading_book_book_reading_progress", 1000),
			(item_set_slot, "$g_player_reading_book", slot_item_book_read, 1),
			(item_set_slot, "$g_player_reading_book", slot_item_book_reading_progress, 1000),
			(str_store_item_name, 1, "$g_player_reading_book"),
			(str_clear, 2),
			(try_begin),
				(eq, "$g_player_reading_book", "itm_book_tactics"),
				(troop_raise_skill, "trp_player", "skl_tactics", 1),
				(str_store_string, 2, "@ Your tactics skill has increased by 1."),
			(else_try),
				(eq, "$g_player_reading_book", "itm_book_persuasion"),
				(troop_raise_skill, "trp_player", "skl_persuasion", 1),
				(str_store_string, 2, "@ Your persuasion skill has increased by 1."),
			(else_try),
				(eq, "$g_player_reading_book", "itm_book_leadership"),
				(troop_raise_skill, "trp_player", "skl_leadership", 1),
				(str_store_string, 2, "@ Your leadership skill has increased by 1."),
			(else_try),
				(eq, "$g_player_reading_book", "itm_book_prisoner_management"),
				(troop_raise_skill, "trp_player", "skl_prisoner_management", 1),
				(str_store_string, 2, "@ Your prisoner management skill has increased by 1."),
			(else_try),
				(eq, "$g_player_reading_book", "itm_book_bible"),
				(troop_raise_attribute, "trp_player", 3, 1),
				(str_store_string, 2, "@ Your charisma has increased by 1."),
			(else_try),
				(eq, "$g_player_reading_book", "itm_book_necronomicon"),
				(troop_raise_skill, "trp_player", "skl_looting", 1),
				(str_store_string, 2, "@ Your looting skill has increased by 1."),
			(else_try),
				(eq, "$g_player_reading_book", "itm_book_intelligence"),
				(troop_raise_attribute, "trp_player", 2, 1),
				(str_store_string, 2, "@ Your intelligence has increased by 1."),
			(else_try),
				(eq, "$g_player_reading_book", "itm_book_trade"),
				(troop_raise_skill, "trp_player", "skl_trade", 1),
				(str_store_string, 2, "@ Your trade skill has increased by 1."),
			(else_try),
				(eq, "$g_player_reading_book", "itm_book_weapon_mastery"),
				(troop_raise_skill, "trp_player", "skl_weapon_master", 1),
				(str_store_string, 2, "@ Your weapon master skill has increased by 1."),
			(else_try),
				(eq, "$g_player_reading_book", "itm_book_engineering"),
				(troop_raise_skill, "trp_player", "skl_engineer", 1),
				(str_store_string, 2, "@ Your engineer skill has increased by 1."),
			(try_end),
			(unlock_achievement, 37),
			(try_begin),
				(eq, "$g_infinite_camping", 0),
				(dialog_box, "@You have finished reading {s1}.{s2}", "@Book Read"),
			(try_end),
			(assign, "$g_player_reading_book", 0)
		]),

	(12.0,
		[
			(try_for_parties, ":var_1"),
				(party_slot_eq, ":var_1", slot_party_type, 17),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_main_party", ":var_1", "p_main_party"),
				(try_begin),
					(gt, ":distance_to_party_from_party_var_1_main_party", 30),
					(remove_party, ":var_1"),
					(try_begin),
						(check_quest_active, "qst_move_cattle_herd"),
						(neg|check_quest_concluded, "qst_move_cattle_herd"),
						(quest_slot_eq, "qst_move_cattle_herd", slot_quest_target_party, ":var_1"),
						(call_script, "script_fail_quest", "qst_move_cattle_herd"),
					(try_end),
				(else_try),
					(gt, ":distance_to_party_from_party_var_1_main_party", 10),
					(party_set_slot, ":var_1", slot_town_lord, 0),
					(party_set_ai_behavior, ":var_1", 0),
				(try_end),
			(try_end)
		]),

	(720.0,
		[
			(try_for_range, ":party", "p_village_1", "p_salt_mine"),
				(party_slot_eq, ":party", slot_town_lord, "trp_player"),
				(party_slot_eq, ":party", slot_center_has_school, 1),
				(party_get_slot, ":party_center_player_relation", ":party", slot_center_player_relation),
				(val_add, ":party_center_player_relation", 7),
				(val_min, ":party_center_player_relation", 100),
				(party_set_slot, ":party", slot_center_player_relation, ":party_center_player_relation"),
			(try_end)
		]),

	(24.0,
		[
			(try_for_range, ":number", 0, "qst_quests_end"),
				(try_begin),
					(check_quest_active, ":number"),
					(try_begin),
						(neg|check_quest_concluded, ":number"),
						(quest_slot_ge, ":number", 23, 1),
						(quest_get_slot, ":number_expiration_days", ":number", slot_quest_expiration_days),
						(val_sub, ":number_expiration_days", 1),
						(try_begin),
							(eq, ":number_expiration_days", 0),
							(call_script, "script_abort_quest", ":number", 1),
						(else_try),
							(quest_set_slot, ":number", slot_quest_expiration_days, ":number_expiration_days"),
							(assign, reg0, ":number_expiration_days"),
							(add_quest_note_from_sreg, ":number", 7, "@You have {reg0} days to finish this quest.", 0),
						(try_end),
					(try_end),
				(else_try),
					(quest_slot_ge, ":number", 25, 1),
					(quest_get_slot, ":number_dont_give_again_remaining_days", ":number", slot_quest_dont_give_again_remaining_days),
					(val_sub, ":number_dont_give_again_remaining_days", 1),
					(quest_set_slot, ":number", slot_quest_dont_give_again_remaining_days, ":number_dont_give_again_remaining_days"),
				(try_end),
			(try_end)
		]),

	(2.0,
		[
			(eq, "$g_infinite_camping", 0),
			(is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
			(eq, "$g_player_is_captive", 0),
			(try_begin),
				(check_quest_active, "qst_report_to_army"),
				(faction_slot_eq, "$players_kingdom", slot_faction_marshall, -1),
				(call_script, "script_abort_quest", "qst_report_to_army", 0),
			(try_end),
			(faction_get_slot, ":players_kingdom_ai_object", "$players_kingdom", slot_faction_ai_object),
			(neg|faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 0),
			(neg|faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 6),
			(assign, ":value", 1),
			(try_begin),
				(this_or_next|faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 5),
				(this_or_next|faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 2),
				(faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 3),
				(neg|is_between, ":players_kingdom_ai_object", "p_town_1", "p_village_1"),
				(assign, ":value", 0),
			(try_end),
			(eq, ":value", 1),
			(assign, ":value_2", 0),
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(neq, ":faction", "$players_kingdom"),
				(store_relation, ":relation_faction_players_kingdom", ":faction", "$players_kingdom"),
				(lt, ":relation_faction_players_kingdom", 0),
				(assign, ":value_2", 1),
			(try_end),
			(eq, ":value_2", 1),
			(neg|check_quest_active, "qst_report_to_army"),
			(neg|check_quest_active, "qst_follow_army"),
			(neg|quest_slot_ge, "qst_report_to_army", 25, 1),
			(faction_get_slot, ":players_kingdom_marshall", "$players_kingdom", slot_faction_marshall),
			(gt, ":players_kingdom_marshall", 0),
			(troop_get_slot, ":players_kingdom_marshall_leaded_party", ":players_kingdom_marshall", slot_troop_leaded_party),
			(gt, ":players_kingdom_marshall_leaded_party", 0),
			(party_is_active, ":players_kingdom_marshall_leaded_party"),
			(store_distance_to_party_from_party, ":distance_to_party_from_party_players_kingdom_marshall_leaded_party_main_party", ":players_kingdom_marshall_leaded_party", "p_main_party"),
			(le, ":distance_to_party_from_party_players_kingdom_marshall_leaded_party_main_party", 96),
			(assign, ":value_3", 1),
			(try_for_range, ":quest", "qst_deliver_message", "qst_follow_army"),
				(check_quest_active, ":quest"),
				(quest_slot_eq, ":quest", slot_quest_giver_troop, ":players_kingdom_marshall"),
				(assign, ":value_3", 0),
			(try_end),
			(eq, ":value_3", 1),
			(try_for_range, ":quest", "qst_destroy_bandit_lair", "qst_beowulf_quest"),
				(check_quest_active, ":quest"),
				(quest_slot_eq, ":quest", slot_quest_giver_troop, ":players_kingdom_marshall"),
				(assign, ":value_3", 0),
			(try_end),
			(eq, ":value_3", 1),
			(try_for_range, ":quest", "qst_deliver_cattle_to_army", "qst_rescue_lord_by_replace"),
				(check_quest_active, ":quest"),
				(assign, ":value_3", 0),
			(try_end),
			(eq, ":value_3", 1),
			(store_character_level, ":character_level_player", "trp_player"),
			(ge, ":character_level_player", 8),
			(assign, ":var_12", 2),
			(try_for_range, ":party", "p_town_1", "p_salt_mine"),
				(party_slot_eq, ":party", slot_town_lord, "trp_player"),
				(try_begin),
					(party_slot_eq, ":party", slot_party_type, 3),
					(val_add, ":var_12", 3),
				(else_try),
					(party_slot_eq, ":party", slot_party_type, 2),
					(val_add, ":var_12", 1),
				(else_try),
					(val_add, ":var_12", 1),
				(try_end),
			(try_end),
			(val_mul, ":var_12", 4),
			(val_min, ":var_12", 60),
			(quest_set_slot, "qst_report_to_army", slot_quest_giver_troop, ":players_kingdom_marshall"),
			(quest_set_slot, "qst_report_to_army", slot_quest_target_troop, ":players_kingdom_marshall"),
			(quest_set_slot, "qst_report_to_army", slot_quest_target_amount, ":var_12"),
			(quest_set_slot, "qst_report_to_army", slot_quest_expiration_days, 4),
			(quest_set_slot, "qst_report_to_army", slot_quest_dont_give_again_period, 22),
			(jump_to_menu, "mnu_kingdom_army_quest_report_to_army")
		]),

	(3.0,
		[
			(assign, "$g_random_army_quest", -1),
			(check_quest_active, "qst_follow_army", 1),
			(is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
			(neg|faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 0),
			(faction_get_slot, ":players_kingdom_marshall", "$players_kingdom", slot_faction_marshall),
			(neq, ":players_kingdom_marshall", "trp_player"),
			(gt, ":players_kingdom_marshall", 0),
			(troop_get_slot, ":players_kingdom_marshall_leaded_party", ":players_kingdom_marshall", slot_troop_leaded_party),
			(gt, ":players_kingdom_marshall_leaded_party", 0),
			(party_is_active, ":players_kingdom_marshall_leaded_party"),
			(store_distance_to_party_from_party, ":distance_to_party_from_party_players_kingdom_marshall_leaded_party_main_party", ":players_kingdom_marshall_leaded_party", "p_main_party"),
			(try_begin),
				(lt, ":distance_to_party_from_party_players_kingdom_marshall_leaded_party_main_party", 15),
				(assign, "$g_player_follow_army_warnings", 0),
				(store_current_hours, ":current_hours"),
				(faction_get_slot, ":players_kingdom_ai_last_offensive_time", "$players_kingdom", slot_faction_ai_last_offensive_time),
				(store_sub, ":value", ":current_hours", ":players_kingdom_ai_last_offensive_time"),
				(assign, ":value_2", -1),
				(try_begin),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(lt, ":random_in_range_0_100", 30),
					(troop_slot_eq, ":players_kingdom_marshall", slot_troop_does_not_give_quest, 0),
					(try_for_range, ":unused", 0, 20),
						(eq, ":value_2", -1),
						(store_random_in_range, ":random_in_range_deliver_cattle_to_army_rescue_lord_by_replace", "qst_deliver_cattle_to_army", "qst_rescue_lord_by_replace"),
						(neg|quest_slot_ge, ":random_in_range_deliver_cattle_to_army_rescue_lord_by_replace", 25, 1),
						(try_begin),
							(eq, ":random_in_range_deliver_cattle_to_army_rescue_lord_by_replace", "qst_deliver_cattle_to_army"),
							(try_begin),
								(faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 2),
								(gt, ":value", 120),
								(store_random_in_range, ":random_in_range_5_10", 5, 10),
								(assign, ":value_2", "qst_deliver_cattle_to_army"),
								(quest_set_slot, ":value_2", slot_quest_target_amount, ":random_in_range_5_10"),
								(quest_set_slot, ":value_2", slot_quest_expiration_days, 10),
								(quest_set_slot, ":value_2", slot_quest_dont_give_again_period, 30),
							(try_end),
						(else_try),
							(eq, ":random_in_range_deliver_cattle_to_army_rescue_lord_by_replace", "qst_join_siege_with_army"),
							(eq, 1, 0),
							(try_begin),
								(faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 2),
								(faction_get_slot, ":players_kingdom_ai_object", "$players_kingdom", slot_faction_ai_object),
								(is_between, ":players_kingdom_ai_object", "p_town_1", "p_village_1"),
								(party_get_battle_opponent, ":battle_opponent_players_kingdom_marshall_leaded_party", ":players_kingdom_marshall_leaded_party"),
								(eq, ":battle_opponent_players_kingdom_marshall_leaded_party", ":players_kingdom_ai_object"),
								(assign, ":value_2", ":random_in_range_deliver_cattle_to_army_rescue_lord_by_replace"),
								(quest_set_slot, ":value_2", slot_quest_target_center, ":players_kingdom_ai_object"),
								(quest_set_slot, ":value_2", slot_quest_expiration_days, 2),
								(quest_set_slot, ":value_2", slot_quest_dont_give_again_period, 15),
							(try_end),
						(else_try),
							(eq, ":random_in_range_deliver_cattle_to_army_rescue_lord_by_replace", "qst_scout_waypoints"),
							(try_begin),
								(assign, ":value_3", 100),
								(assign, "$qst_scout_waypoints_wp_1", -1),
								(assign, "$qst_scout_waypoints_wp_2", -1),
								(assign, "$qst_scout_waypoints_wp_3", -1),
								(assign, ":value_4", 0),
								(try_for_range, ":unused", 0, ":value_3"),
									(try_begin),
										(lt, "$qst_scout_waypoints_wp_1", 0),
										(call_script, "script_cf_get_random_enemy_center_within_range", ":players_kingdom_marshall_leaded_party", 50),
										(assign, "$qst_scout_waypoints_wp_1", reg0),
									(try_end),
									(try_begin),
										(lt, "$qst_scout_waypoints_wp_2", 0),
										(call_script, "script_cf_get_random_enemy_center_within_range", ":players_kingdom_marshall_leaded_party", 50),
										(neq, "$qst_scout_waypoints_wp_1", reg0),
										(assign, "$qst_scout_waypoints_wp_2", reg0),
									(try_end),
									(try_begin),
										(lt, "$qst_scout_waypoints_wp_3", 0),
										(call_script, "script_cf_get_random_enemy_center_within_range", ":players_kingdom_marshall_leaded_party", 50),
										(neq, "$qst_scout_waypoints_wp_1", reg0),
										(neq, "$qst_scout_waypoints_wp_2", reg0),
										(assign, "$qst_scout_waypoints_wp_3", reg0),
									(try_end),
									(neq, "$qst_scout_waypoints_wp_1", "$qst_scout_waypoints_wp_2"),
									(neq, "$qst_scout_waypoints_wp_1", "$qst_scout_waypoints_wp_2"),
									(neq, "$qst_scout_waypoints_wp_2", "$qst_scout_waypoints_wp_3"),
									(ge, "$qst_scout_waypoints_wp_1", 0),
									(ge, "$qst_scout_waypoints_wp_2", 0),
									(ge, "$qst_scout_waypoints_wp_3", 0),
									(assign, ":value_3", 0),
									(assign, ":value_4", 1),
								(try_end),
								(eq, ":value_4", 1),
								(assign, "$qst_scout_waypoints_wp_1_visited", 0),
								(assign, "$qst_scout_waypoints_wp_2_visited", 0),
								(assign, "$qst_scout_waypoints_wp_3_visited", 0),
								(assign, ":value_2", "qst_scout_waypoints"),
								(quest_set_slot, ":value_2", slot_quest_expiration_days, 7),
								(quest_set_slot, ":value_2", slot_quest_dont_give_again_period, 25),
							(try_end),
						(try_end),
					(try_end),
					(try_begin),
						(neq, ":value_2", -1),
						(quest_set_slot, ":value_2", slot_quest_current_state, 0),
						(quest_set_slot, ":value_2", slot_quest_giver_troop, ":players_kingdom_marshall"),
						(try_begin),
							(eq, ":value_2", "qst_join_siege_with_army"),
							(jump_to_menu, "mnu_kingdom_army_quest_join_siege_order"),
						(else_try),
							(assign, "$g_random_army_quest", ":value_2"),
							(quest_set_slot, "$g_random_army_quest", slot_quest_giver_troop, ":players_kingdom_marshall"),
							(jump_to_menu, "mnu_kingdom_army_quest_messenger"),
						(try_end),
					(try_end),
				(try_end),
			(else_try),
				(val_add, "$g_player_follow_army_warnings", 1),
				(try_begin),
					(lt, "$g_player_follow_army_warnings", 15),
					(try_begin),
						(store_mod, ":value_5", "$g_player_follow_army_warnings", 3),
						(eq, ":value_5", 0),
						(str_store_troop_name_link, 1, ":players_kingdom_marshall"),
						(try_begin),
							(lt, "$g_player_follow_army_warnings", 8),
						(else_try),
							(display_message, "str_marshal_warning"),
						(try_end),
					(try_end),
				(else_try),
					(jump_to_menu, "mnu_kingdom_army_follow_failed"),
				(try_end),
			(try_end)
		]),

	(0.5,
		[
			(check_quest_active, "qst_move_cattle_herd"),
			(neg|check_quest_concluded, "qst_move_cattle_herd"),
			(quest_get_slot, ":move_cattle_herd_target_party", "qst_move_cattle_herd", slot_quest_target_party),
			(quest_get_slot, ":move_cattle_herd_target_center", "qst_move_cattle_herd", slot_quest_target_center),
			(store_distance_to_party_from_party, ":distance_to_party_from_party_move_cattle_herd_target_party_move_cattle_herd_target_center", ":move_cattle_herd_target_party", ":move_cattle_herd_target_center"),
			(lt, ":distance_to_party_from_party_move_cattle_herd_target_party_move_cattle_herd_target_center", 3),
			(remove_party, ":move_cattle_herd_target_party"),
			(call_script, "script_succeed_quest", "qst_move_cattle_herd")
		]),

	(2.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(ge, ":troop_leaded_party", 1),
				(party_is_active, ":troop_leaded_party"),
				(party_slot_eq, ":troop_leaded_party", slot_party_following_player, 1),
				(store_current_hours, ":current_hours"),
				(neg|party_slot_ge, ":troop_leaded_party", 32, ":current_hours"),
				(party_set_slot, ":troop_leaded_party", slot_party_commander_party, -1),
				(party_set_slot, ":troop_leaded_party", slot_party_following_player, 0),
				(assign, ":var_4", 200),
				(store_add, ":value", ":current_hours", ":var_4"),
				(party_set_slot, ":troop_leaded_party", slot_party_dont_follow_player_until_time, ":value"),
			(try_end)
		]),

	(0.5,
		[
			(try_begin),
				(check_quest_active, "qst_deliver_cattle"),
				(neg|check_quest_succeeded, "qst_deliver_cattle"),
				(quest_get_slot, ":deliver_cattle_target_center", "qst_deliver_cattle", slot_quest_target_center),
				(quest_get_slot, ":deliver_cattle_target_amount", "qst_deliver_cattle", slot_quest_target_amount),
				(quest_get_slot, ":deliver_cattle_current_state", "qst_deliver_cattle", slot_quest_current_state),
				(store_sub, ":value", ":deliver_cattle_target_amount", ":deliver_cattle_current_state"),
				(call_script, "script_remove_cattles_if_herd_is_close_to_party", ":deliver_cattle_target_center", ":value"),
				(val_add, ":deliver_cattle_current_state", reg0),
				(quest_set_slot, "qst_deliver_cattle", slot_quest_current_state, ":deliver_cattle_current_state"),
				(le, ":deliver_cattle_target_amount", ":deliver_cattle_current_state"),
				(call_script, "script_succeed_quest", "qst_deliver_cattle"),
			(try_end),
			(try_begin),
				(check_quest_active, "qst_deliver_cattle_to_army"),
				(neg|check_quest_succeeded, "qst_deliver_cattle_to_army"),
				(quest_get_slot, ":deliver_cattle_to_army_giver_troop", "qst_deliver_cattle_to_army", slot_quest_giver_troop),
				(troop_get_slot, ":deliver_cattle_to_army_giver_troop_leaded_party", ":deliver_cattle_to_army_giver_troop", slot_troop_leaded_party),
				(try_begin),
					(gt, ":deliver_cattle_to_army_giver_troop_leaded_party", 0),
					(quest_get_slot, ":deliver_cattle_target_amount", "qst_deliver_cattle_to_army", slot_quest_target_amount),
					(quest_get_slot, ":deliver_cattle_current_state", "qst_deliver_cattle_to_army", slot_quest_current_state),
					(store_sub, ":value", ":deliver_cattle_target_amount", ":deliver_cattle_current_state"),
					(call_script, "script_remove_cattles_if_herd_is_close_to_party", ":deliver_cattle_to_army_giver_troop_leaded_party", ":value"),
					(val_add, ":deliver_cattle_current_state", reg0),
					(quest_set_slot, "qst_deliver_cattle_to_army", slot_quest_current_state, ":deliver_cattle_current_state"),
					(try_begin),
						(le, ":deliver_cattle_target_amount", ":deliver_cattle_current_state"),
						(call_script, "script_succeed_quest", "qst_deliver_cattle_to_army"),
					(try_end),
				(else_try),
					(call_script, "script_abort_quest", "qst_deliver_cattle_to_army", 0),
				(try_end),
			(try_end)
		]),

	(1.0,
		[
			(neg|map_free),
			(check_quest_active, "qst_train_peasants_against_bandits"),
			(neg|check_quest_concluded, "qst_train_peasants_against_bandits"),
			(eq, "$qst_train_peasants_against_bandits_currently_training", 1),
			(val_add, "$qst_train_peasants_against_bandits_num_hours_trained", 1),
			(call_script, "script_get_max_skill_of_player_party", "skl_trainer"),
			(assign, ":var_1", reg0),
			(store_sub, ":value", 20, ":var_1"),
			(val_mul, ":value", 3),
			(val_div, ":value", 5),
			(ge, "$qst_train_peasants_against_bandits_num_hours_trained", ":value"),
			(assign, "$qst_train_peasants_against_bandits_num_hours_trained", 0),
			(rest_for_hours, 0, 0, 0),
			(jump_to_menu, "mnu_train_peasants_against_bandits_ready")
		]),

	(1.0,
		[
			(check_quest_active, "qst_scout_waypoints"),
			(neg|check_quest_succeeded, "qst_scout_waypoints"),
			(try_begin),
				(eq, "$qst_scout_waypoints_wp_1_visited", 0),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_qst_scout_waypoints_wp_1_main_party", "$qst_scout_waypoints_wp_1", "p_main_party"),
				(le, ":distance_to_party_from_party_qst_scout_waypoints_wp_1_main_party", 3),
				(assign, "$qst_scout_waypoints_wp_1_visited", 1),
				(str_store_party_name_link, 1, "$qst_scout_waypoints_wp_1"),
				(display_message, "@{s1} is scouted."),
			(try_end),
			(try_begin),
				(eq, "$qst_scout_waypoints_wp_2_visited", 0),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_qst_scout_waypoints_wp_1_main_party", "$qst_scout_waypoints_wp_2", "p_main_party"),
				(le, ":distance_to_party_from_party_qst_scout_waypoints_wp_1_main_party", 3),
				(assign, "$qst_scout_waypoints_wp_2_visited", 1),
				(str_store_party_name_link, 1, "$qst_scout_waypoints_wp_2"),
				(display_message, "@{s1} is scouted."),
			(try_end),
			(try_begin),
				(eq, "$qst_scout_waypoints_wp_3_visited", 0),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_qst_scout_waypoints_wp_1_main_party", "$qst_scout_waypoints_wp_3", "p_main_party"),
				(le, ":distance_to_party_from_party_qst_scout_waypoints_wp_1_main_party", 3),
				(assign, "$qst_scout_waypoints_wp_3_visited", 1),
				(str_store_party_name_link, 1, "$qst_scout_waypoints_wp_3"),
				(display_message, "@{s1} is scouted."),
			(try_end),
			(eq, "$qst_scout_waypoints_wp_1_visited", 1),
			(eq, "$qst_scout_waypoints_wp_2_visited", 1),
			(eq, "$qst_scout_waypoints_wp_3_visited", 1),
			(call_script, "script_succeed_quest", "qst_scout_waypoints")
		]),

	(3.0,
		[
			(neg|map_free),
			(check_quest_active, "qst_kill_local_merchant"),
			(quest_slot_eq, "qst_kill_local_merchant", slot_quest_current_state, 0),
			(quest_set_slot, "qst_kill_local_merchant", slot_quest_current_state, 1),
			(rest_for_hours, 0, 0, 0),
			(assign, "$auto_enter_town", "$qst_kill_local_merchant_center"),
			(assign, "$quest_auto_menu", "mnu_kill_local_merchant_begin")
		]),

	(3.0,
		[
			(neg|map_free),
			(check_quest_active, "qst_bar_brawl"),
			(quest_slot_eq, "qst_bar_brawl", slot_quest_current_state, 0),
			(quest_set_slot, "qst_bar_brawl", slot_quest_current_state, 1),
			(rest_for_hours, 0, 0, 0),
			(assign, "$auto_enter_town", "$qst_bar_brawl_center"),
			(assign, "$quest_auto_menu", "mnu_bar_brawl_begin")
		]),

	(1.0,
		[
			(neg|map_free),
			(check_quest_active, "qst_collect_taxes"),
			(eq, "$g_player_is_captive", 0),
			(eq, "$qst_collect_taxes_currently_collecting", 1),
			(quest_get_slot, ":collect_taxes_current_state", "qst_collect_taxes", slot_quest_current_state),
			(this_or_next|eq, ":collect_taxes_current_state", 1),
			(this_or_next|eq, ":collect_taxes_current_state", 2),
			(eq, ":collect_taxes_current_state", 3),
			(quest_get_slot, ":collect_taxes_target_amount", "qst_collect_taxes", slot_quest_target_amount),
			(val_sub, ":collect_taxes_target_amount", 1),
			(quest_set_slot, "qst_collect_taxes", slot_quest_target_amount, ":collect_taxes_target_amount"),
			(call_script, "script_get_max_skill_of_player_party", "skl_trade"),
			(try_begin),
				(lt, ":collect_taxes_target_amount", 0),
				(assign, ":collect_taxes_current_state", 4),
				(quest_set_slot, "qst_collect_taxes", slot_quest_current_state, 4),
				(rest_for_hours, 0, 0, 0),
				(jump_to_menu, "mnu_collect_taxes_complete"),
			(else_try),
				(assign, ":var_3", "$qst_collect_taxes_hourly_income"),
				(party_get_slot, ":g_encountered_party_town_prosperity", "$g_encountered_party", slot_town_prosperity),
				(store_add, ":value", 30, ":g_encountered_party_town_prosperity"),
				(val_mul, ":var_3", ":value"),
				(val_div, ":var_3", 80),
				(try_begin),
					(eq, "$qst_collect_taxes_halve_taxes", 1),
					(val_div, ":var_3", 2),
				(try_end),
				(val_max, ":var_3", 2),
				(store_random_in_range, ":random_in_range_1_var_3", 1, ":var_3"),
				(quest_get_slot, ":collect_taxes_gold_reward", "qst_collect_taxes", slot_quest_gold_reward),
				(val_add, ":collect_taxes_gold_reward", ":random_in_range_1_var_3"),
				(quest_set_slot, "qst_collect_taxes", slot_quest_gold_reward, ":collect_taxes_gold_reward"),
				(call_script, "script_troop_add_gold", "trp_player", ":random_in_range_1_var_3"),
			(try_end),
			(try_begin),
				(eq, ":collect_taxes_current_state", 1),
				(val_sub, "$qst_collect_taxes_menu_counter", 1),
				(le, "$qst_collect_taxes_menu_counter", 0),
				(quest_set_slot, "qst_collect_taxes", slot_quest_current_state, 2),
				(jump_to_menu, "mnu_collect_taxes_revolt_warning"),
			(else_try),
				(eq, ":collect_taxes_current_state", 2),
				(val_sub, "$qst_collect_taxes_unrest_counter", 1),
				(le, "$qst_collect_taxes_unrest_counter", 0),
				(eq, "$qst_collect_taxes_halve_taxes", 0),
				(quest_set_slot, "qst_collect_taxes", slot_quest_current_state, 3),
				(store_div, ":value_2", 10000, "$qst_collect_taxes_total_hours"),
				(val_add, ":value_2", 30),
				(store_random_in_range, ":random_in_range_0_1000", 0, 1000),
				(try_begin),
					(lt, ":random_in_range_0_1000", ":value_2"),
					(jump_to_menu, "mnu_collect_taxes_revolt"),
				(try_end),
			(try_end)
		]),

	(72.0,
		[
			(gt, "$g_force_peace_faction_1", 0),
			(gt, "$g_force_peace_faction_2", 0),
			(try_begin),
				(store_relation, ":relation_g_force_peace_faction_1_g_force_peace_faction_2", "$g_force_peace_faction_1", "$g_force_peace_faction_2"),
				(lt, ":relation_g_force_peace_faction_1_g_force_peace_faction_2", 0),
				(call_script, "script_diplomacy_start_peace_between_kingdoms", "$g_force_peace_faction_1", "$g_force_peace_faction_2", 1),
			(try_end),
			(assign, "$g_force_peace_faction_1", 0),
			(assign, "$g_force_peace_faction_2", 0)
		]),

	(1.0,
		[
			(str_store_string, 51, "str_no_trigger_noted"),
			(try_begin),
				(gt, "$npc_to_rejoin_party", 0),
				(eq, "$g_infinite_camping", 0),
				(try_begin),
					(neg|main_party_has_troop, "$npc_to_rejoin_party"),
					(neq, "$g_player_is_captive", 1),
					(str_store_string, 51, "str_triggered_by_npc_to_rejoin_party"),
					(assign, "$npc_map_talk_context", 150),
					(start_map_conversation, "$npc_to_rejoin_party", -1),
				(else_try),
					(troop_set_slot, "$npc_to_rejoin_party", slot_troop_current_mission, 8),
					(assign, "$npc_to_rejoin_party", 0),
				(try_end),
			(else_try),
				(gt, "$npc_is_quitting", 0),
				(eq, "$g_infinite_camping", 0),
				(try_begin),
					(main_party_has_troop, "$npc_is_quitting"),
					(neq, "$g_player_is_captive", 1),
					(neg|troop_slot_eq, "trp_player", slot_troop_spouse, "$npc_is_quitting"),
					(neg|troop_slot_eq, "$npc_is_quitting", slot_troop_spouse, "trp_player"),
					(str_store_string, 51, "str_triggered_by_npc_is_quitting"),
					(start_map_conversation, "$npc_is_quitting", -1),
				(else_try),
					(assign, "$npc_is_quitting", 0),
				(try_end),
			(else_try),
				(gt, "$npc_with_grievance", 0),
				(eq, "$g_infinite_camping", 0),
				(eq, "$disable_npc_complaints", 0),
				(try_begin),
					(main_party_has_troop, "$npc_with_grievance"),
					(neq, "$g_player_is_captive", 1),
					(str_store_string, 51, "str_triggered_by_npc_has_grievance"),
					(assign, "$npc_map_talk_context", 61),
					(start_map_conversation, "$npc_with_grievance", -1),
				(else_try),
					(assign, "$npc_with_grievance", 0),
				(try_end),
			(else_try),
				(gt, "$npc_with_personality_clash", 0),
				(eq, "$g_infinite_camping", 0),
				(eq, "$disable_npc_complaints", 0),
				(troop_get_slot, ":npc_with_personality_clash_personalityclash_object", "$npc_with_personality_clash", slot_troop_personalityclash_object),
				(try_begin),
					(main_party_has_troop, "$npc_with_personality_clash"),
					(main_party_has_troop, ":npc_with_personality_clash_personalityclash_object"),
					(neq, "$g_player_is_captive", 1),
					(assign, "$npc_map_talk_context", 72),
					(str_store_string, 51, "str_triggered_by_npc_has_personality_clash"),
					(start_map_conversation, "$npc_with_personality_clash", -1),
				(else_try),
					(assign, "$npc_with_personality_clash", 0),
				(try_end),
			(else_try),
				(gt, "$npc_with_political_grievance", 0),
				(eq, "$g_infinite_camping", 0),
				(eq, "$disable_npc_complaints", 0),
				(try_begin),
					(main_party_has_troop, "$npc_with_political_grievance"),
					(neq, "$g_player_is_captive", 1),
					(str_store_string, 51, "str_triggered_by_npc_has_political_grievance"),
					(assign, "$npc_map_talk_context", 145),
					(start_map_conversation, "$npc_with_political_grievance", -1),
				(else_try),
					(assign, "$npc_with_political_grievance", 0),
				(try_end),
			(else_try),
				(eq, "$disable_sisterly_advice", 0),
				(eq, "$g_infinite_camping", 0),
				(gt, "$npc_with_sisterly_advice", 0),
				(try_begin),
					(main_party_has_troop, "$npc_with_sisterly_advice"),
					(neq, "$g_player_is_captive", 1),
					(troop_slot_ge, "$npc_with_sisterly_advice", 139, 1),
					(assign, "$npc_map_talk_context", 139),
					(start_map_conversation, "$npc_with_sisterly_advice", -1),
				(else_try),
					(assign, "$npc_with_sisterly_advice", 0),
				(try_end),
			(else_try),
				(eq, "$disable_local_histories", 0),
				(eq, "$g_infinite_camping", 0),
				(try_for_range, ":troop", "trp_npc1", "trp_kingdom_1_lord"),
					(main_party_has_troop, ":troop"),
					(troop_slot_eq, ":troop", slot_troop_home_speech_delivered, 0),
					(troop_get_slot, ":troop_home", ":troop", slot_troop_home),
					(gt, ":troop_home", 0),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_troop_home_main_party", ":troop_home", "p_main_party"),
					(lt, ":distance_to_party_from_party_troop_home_main_party", 7),
					(assign, "$npc_map_talk_context", 60),
					(str_store_string, 51, "str_triggered_by_local_histories"),
					(start_map_conversation, ":troop", -1),
				(try_end),
			(try_end),
			(try_begin),
				(check_quest_active, "qst_rebel_against_kingdom"),
				(is_between, "$supported_pretender", "trp_kingdom_1_pretender", "trp_knight_1_1_wife"),
				(neg|main_party_has_troop, "$supported_pretender"),
				(neg|troop_slot_eq, "$supported_pretender", slot_troop_occupation, 2),
				(party_add_members, "p_main_party", "$supported_pretender", 1),
			(try_end),
			(try_begin),
				(check_quest_active, "qst_rebel_against_kingdom"),
				(is_between, "$supported_pretender", "trp_kingdom_1_pretender", "trp_knight_1_1_wife"),
				(main_party_has_troop, "$supported_pretender"),
				(neg|faction_slot_eq, "fac_player_supporters_faction", slot_faction_marshall, "trp_player"),
				(call_script, "script_appoint_faction_marshall", "fac_player_supporters_faction", "trp_player"),
			(try_end)
		]),

	(4.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
				(this_or_next|is_between, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(troop_slot_ge, ":troop", 55, 1),
				(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
				(troop_get_slot, ":troop_change_to_faction", ":troop", slot_troop_change_to_faction),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(assign, ":value", 0),
				(try_begin),
					(le, ":troop_leaded_party", 0),
					(neg|troop_slot_ge, ":troop", 8, 0),
					(assign, ":value", 1),
				(else_try),
					(gt, ":troop_leaded_party", 0),
					(party_get_attached_to, ":attached_to_troop_leaded_party", ":troop_leaded_party"),
					(try_begin),
						(lt, ":attached_to_troop_leaded_party", 0),
						(party_get_cur_town, ":attached_to_troop_leaded_party", ":troop_leaded_party"),
					(try_end),
					(this_or_next|neg|is_between, ":attached_to_troop_leaded_party", "p_town_1", "p_salt_mine"),
					(party_slot_eq, ":attached_to_troop_leaded_party", slot_town_lord, ":troop"),
					(assign, ":value_2", "trp_heroes_end"),
					(try_for_range, ":troop_2", "trp_npc1", ":value_2"),
						(neq, ":troop_2", ":troop"),
						(troop_slot_eq, ":troop_2", slot_troop_occupation, 2),
						(troop_get_slot, ":troop_2_leaded_party", ":troop_2", slot_troop_leaded_party),
						(party_is_active, ":troop_2_leaded_party"),
						(store_faction_of_party, ":faction_of_party_troop_2_leaded_party", ":troop_2_leaded_party"),
						(eq, ":faction_of_party_troop_2_leaded_party", ":faction_of_troop_troop"),
						(store_distance_to_party_from_party, ":distance_to_party_from_party_troop_leaded_party_troop_2_leaded_party", ":troop_leaded_party", ":troop_2_leaded_party"),
						(lt, ":distance_to_party_from_party_troop_leaded_party_troop_2_leaded_party", 4),
						(assign, ":value_2", 0),
					(try_end),
					(neq, ":value_2", 0),
					(assign, ":value", 1),
				(try_end),
				(try_begin),
					(eq, ":faction_of_troop_troop", "fac_kingdom_20"),
					(try_begin),
						(faction_slot_eq, ":faction_of_troop_troop", slot_faction_state, 1),
						(assign, ":value", 1),
					(else_try),
						(assign, ":value", 0),
					(try_end),
				(try_end),
				(try_begin),
					(eq, ":faction_of_troop_troop", "fac_kingdom_21"),
					(try_begin),
						(faction_slot_eq, ":faction_of_troop_troop", slot_faction_state, 1),
						(assign, ":value", 1),
					(else_try),
						(assign, ":value", 0),
					(try_end),
				(try_end),
				(try_begin),
					(eq, ":faction_of_troop_troop", "fac_kingdom_22"),
					(try_begin),
						(faction_slot_eq, ":faction_of_troop_troop", slot_faction_state, 1),
						(assign, ":value", 1),
					(else_try),
						(assign, ":value", 0),
					(try_end),
				(try_end),
				(eq, ":value", 1),
				(try_begin),
					(ge, "$cheat_mode", 1),
					(str_store_troop_name, 4, ":troop"),
					(display_message, "@{!}DEBUG - {s4} faction changed from slot troop change to faction"),
				(try_end),
				(call_script, "script_change_troop_faction", ":troop", ":troop_change_to_faction"),
				(troop_set_slot, ":troop", slot_troop_change_to_faction, 0),
				(try_begin),
					(is_between, ":troop_change_to_faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
					(str_store_troop_name_link, 1, ":troop"),
					(str_store_faction_name_link, 2, ":faction_of_troop_troop"),
					(str_store_faction_name_link, 3, ":troop_change_to_faction"),
					(display_message, "@{s1} has switched from {s2} to {s3}."),
					(try_begin),
						(eq, ":faction_of_troop_troop", "$players_kingdom"),
						(call_script, "script_add_notification_menu", "mnu_notification_troop_left_players_faction", ":troop", ":troop_change_to_faction"),
					(else_try),
						(eq, ":troop_change_to_faction", "$players_kingdom"),
						(call_script, "script_add_notification_menu", "mnu_notification_troop_joined_players_faction", ":troop", ":faction_of_troop_troop"),
					(try_end),
				(try_end),
			(try_end)
		]),

	(1.0,
		[
			(eq, "$cheat_mode", 1),
			(try_for_range, ":party", "p_town_1", "p_salt_mine"),
				(party_get_battle_opponent, ":battle_opponent_party", ":party"),
				(try_begin),
					(gt, ":battle_opponent_party", 0),
					(str_store_party_name, 2, ":party"),
					(str_store_party_name, 3, ":battle_opponent_party"),
					(display_message, "@{!}DEBUG : {s2} is besieging by {s3}"),
				(try_end),
			(try_end)
		]),

	(1.0,
		[
			(store_current_day, ":current_day"),
			(gt, ":current_day", "$g_last_report_control_day"),
			(store_time_of_day, ":time_of_day"),
			(ge, ":time_of_day", 18),
			(store_random_in_range, ":random_in_range_0_4", 0, 4),
			(this_or_next|ge, ":time_of_day", 22),
			(eq, ":random_in_range_0_4", 0),
			(assign, "$g_last_report_control_day", ":current_day"),
			(store_troop_gold, ":troop_gold_player", "trp_player"),
			(try_begin),
				(lt, ":troop_gold_player", 0),
				(store_sub, ":value", 0, ":troop_gold_player"),
				(troop_add_gold, "trp_player", ":value"),
			(try_end),
			(party_get_morale, ":morale_main_party", "p_main_party"),
			(try_begin),
				(str_store_string, 1, "str_party_morale_is_low"),
				(str_clear, 2),
				(party_get_num_companion_stacks, ":num_companion_stacks_main_party", "p_main_party"),
				(assign, ":var_8", 0),
				(try_for_range_backwards, ":var_9", 0, ":num_companion_stacks_main_party"),
					(party_stack_get_troop_id, ":party_stack_troop_id_main_party_var_9", "p_main_party", ":var_9"),
					(neg|troop_is_hero, ":party_stack_troop_id_main_party_var_9"),
					(party_stack_get_size, ":party_stack_size_main_party_var_9", "p_main_party", ":var_9"),
					(store_faction_of_troop, ":faction_of_troop_party_stack_troop_id_main_party_var_9", ":party_stack_troop_id_main_party_var_9"),
					(assign, ":var_13", ":morale_main_party"),
					(try_begin),
						(ge, ":faction_of_troop_party_stack_troop_id_main_party_var_9", "fac_player_supporters_faction"),
						(lt, ":faction_of_troop_party_stack_troop_id_main_party_var_9", "fac_kingdoms_end"),
						(faction_get_slot, ":faction_of_troop_party_stack_troop_id_main_party_var_9_morale_of_player_troops", ":faction_of_troop_party_stack_troop_id_main_party_var_9", slot_faction_morale_of_player_troops),
						(val_div, ":faction_of_troop_party_stack_troop_id_main_party_var_9_morale_of_player_troops", 100),
						(val_add, ":var_13", ":faction_of_troop_party_stack_troop_id_main_party_var_9_morale_of_player_troops"),
					(try_end),
					(lt, ":var_13", 32),
					(store_sub, ":value_2", 36, ":var_13"),
					(val_div, ":value_2", 4),
					(assign, ":var_16", 0),
					(try_for_range, ":unused", 0, ":party_stack_size_main_party_var_9"),
						(store_random_in_range, ":random_in_range_0_4", 0, 100),
						(lt, ":random_in_range_0_4", ":value_2"),
						(val_add, ":var_16", 1),
						(remove_member_from_party, ":party_stack_troop_id_main_party_var_9", "p_main_party"),
					(try_end),
					(try_begin),
						(ge, ":var_16", 1),
						(str_store_troop_name, 2, ":party_stack_troop_id_main_party_var_9"),
						(assign, reg0, ":var_16"),
						(try_begin),
							(ge, ":var_8", 1),
							(str_store_string, 1, "str_s1_reg0_s2"),
						(else_try),
							(str_store_string, 3, 1),
							(str_store_string, 1, "str_s3_reg0_s2"),
						(try_end),
						(val_add, ":var_8", ":var_16"),
					(try_end),
				(try_end),
				(try_begin),
					(ge, ":var_8", 1),
					(try_begin),
						(ge, ":var_8", 2),
						(str_store_string, 2, "str_have_deserted_the_party"),
					(else_try),
						(str_store_string, 2, "str_has_deserted_the_party"),
					(try_end),
					(str_store_string, 1, "str_s1_s2"),
					(eq, "$g_infinite_camping", 0),
					(dialog_box, 1, "str_weekly_report"),
				(try_end),
			(try_end)
		]),

	(1.0,
		[
			(call_script, "script_calculate_castle_prosperities_by_using_its_villages"),
			(store_add, ":value", "fac_kingdom_6", 1),
			(try_for_range, ":faction", "fac_kingdom_1", ":value"),
				(try_for_range, ":faction_2", "fac_kingdom_1", ":value"),
					(store_relation, ":relation_faction_faction_2", ":faction", ":faction_2"),
					(str_store_faction_name, 7, ":faction"),
					(str_store_faction_name, 8, ":faction_2"),
					(neq, ":faction", ":faction_2"),
					(assign, reg1, ":relation_faction_faction_2"),
				(try_end),
			(try_end)
		]),

	(1.0,
		[
			(try_begin),
				(eq, "$g_player_is_captive", 1),
				(neg|party_is_active, "$capturer_party"),
				(rest_for_hours, 0, 0, 0),
			(try_end),
			(is_between, "$next_center_will_be_fired", "p_village_1", "p_salt_mine"),
			(assign, ":var_1", "$next_center_will_be_fired"),
			(party_get_slot, ":var_1_village_smoke_added", ":var_1", slot_village_smoke_added),
			(eq, ":var_1_village_smoke_added", 0),
			(try_begin),
				(party_get_slot, ":var_1_village_bound_center", ":var_1", slot_village_bound_center),
				(party_get_slot, ":var_1_village_bound_center_260", ":var_1_village_bound_center", 260),
				(store_current_hours, ":current_hours"),
				(try_begin),
					(eq, "$cheat_mode", 1),
					(is_between, ":var_1", "p_town_1", "p_salt_mine"),
					(is_between, ":var_1_village_bound_center", "p_town_1", "p_salt_mine"),
					(str_store_party_name, 4, ":var_1"),
					(str_store_party_name, 5, ":var_1_village_bound_center"),
					(store_current_hours, reg3),
					(party_get_slot, reg4, ":var_1_village_bound_center", 260),
					(display_message, "@{!}DEBUG - Checking fire at {s4} for {s5} - current time {reg3}, last nearby fire {reg4}"),
				(try_end),
				(eq, ":current_hours", ":var_1_village_bound_center_260"),
				(party_add_particle_system, ":var_1", "psys_map_village_fire"),
				(party_add_particle_system, ":var_1", "psys_map_village_fire_smoke"),
			(else_try),
				(store_add, ":value", ":var_1_village_bound_center_260", 4),
				(eq, ":value", ":current_hours"),
				(party_clear_particle_systems, ":var_1"),
			(try_end)
		]),

	(24.0,
		[
			(val_sub, "$g_dont_give_fief_to_player_days", 1),
			(val_max, "$g_dont_give_fief_to_player_days", -1),
			(val_sub, "$g_dont_give_marshalship_to_player_days", 1),
			(val_max, "$g_dont_give_marshalship_to_player_days", -1),
			(troop_get_slot, ":dplmc_chamberlain_165", "trp_dplmc_chamberlain", 165),
			(store_mod, ":value", ":dplmc_chamberlain_165", 128),
			(assign, ":var_3", reg0),
			(assign, ":var_4", reg1),
			(try_begin),
				(neq, ":dplmc_chamberlain_165", 0),
				(neq, ":value", 68),
				(assign, reg0, ":dplmc_chamberlain_165"),
				(display_message, "@{!} A slot had an unexpected value: {reg0}.  This might be because you are using an incompatible troop list, or are using a non-native strange game.  This message will repeat daily."),
				(assign, ":dplmc_chamberlain_165", -1),
			(else_try),
				(val_div, ":dplmc_chamberlain_165", 128),
				(lt, ":dplmc_chamberlain_165", 111127),
				(ge, "$cheat_mode", 1),
				(assign, reg0, ":dplmc_chamberlain_165"),
				(assign, reg1, 111127),
				(display_message, "@{!} DEBUG - Detected a new version of diplomacy: previous version was {reg0}, and current version is {reg1}.  Performing updates."),
				(val_mul, reg1, 128),
				(val_add, reg1, 68),
				(troop_set_slot, "trp_dplmc_chamberlain", 165, reg1),
			(try_end),
			(try_begin),
				(is_between, ":dplmc_chamberlain_165", -1, 1),
				(party_set_name, "p_steppe_bandit_spawn_point", "str_the_steppes"),
				(party_set_name, "p_taiga_bandit_spawn_point", "str_the_tundra"),
				(party_set_name, "p_forest_bandit_spawn_point", "str_the_forests"),
				(party_set_name, "p_mountain_bandit_spawn_point", "str_the_highlands"),
				(party_set_name, "p_sea_raider_spawn_point_1", "str_the_coast"),
				(party_set_name, "p_sea_raider_spawn_point_2", "str_the_coast"),
				(party_set_name, "p_desert_bandit_spawn_point", "str_the_deserts"),
				(troop_set_slot, "trp_npc11", slot_troop_home, "p_town_6"),
				(troop_set_slot, "trp_npc8", slot_troop_home, "p_village_35"),
				(troop_set_slot, "trp_npc15", slot_troop_town_with_contacts, "p_town_20"),
				(party_set_slot, "p_village_93", slot_center_linen_looms, 0),
				(party_set_slot, "p_village_94", slot_center_linen_looms, 0),
				(party_set_slot, "p_village_95", slot_center_linen_looms, 0),
				(party_set_slot, "p_village_96", slot_center_linen_looms, 0),
				(party_set_slot, "p_village_97", slot_center_linen_looms, 0),
				(party_set_slot, "p_village_102", slot_center_linen_looms, 0),
				(party_set_slot, "p_village_109", slot_center_linen_looms, 0),
				(party_set_slot, "p_village_67", slot_center_fishing_fleet, 0),
				(party_set_slot, "p_village_5", slot_center_fishing_fleet, 15),
			(try_end),
			(try_begin),
				(ge, ":dplmc_chamberlain_165", 0),
				(lt, ":dplmc_chamberlain_165", 1),
				(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
					(this_or_next|eq, ":troop", "trp_knight_3_4"),
					(this_or_next|eq, ":troop", "trp_knight_1_3"),
					(this_or_next|eq, ":troop", "trp_knight_5_11"),
					(this_or_next|is_between, ":troop", "trp_kingdom_1_lord", "trp_knight_1_1"),
					(is_between, ":troop", "trp_kingdom_1_pretender", "trp_knight_1_1_wife"),
					(troop_get_slot, ":troop_home", ":troop", slot_troop_home),
					(is_between, ":troop_home", "p_town_1", "p_salt_mine"),
					(neg|party_slot_ge, ":troop_home", 402, 1),
					(party_set_slot, ":troop_home", 402, ":troop"),
					(neg|is_between, ":troop", "trp_kingdom_1_pretender", "trp_knight_1_1_wife"),
					(troop_slot_eq, ":troop", slot_troop_occupation, 2),
					(neg|party_slot_eq, ":troop_home", slot_town_lord, ":troop"),
					(neg|party_slot_ge, ":troop_home", 401, 1),
					(party_set_slot, ":troop_home", 401, ":troop"),
				(try_end),
				(try_begin),
					(is_between, "$g_player_affiliated_troop", "trp_knight_1_1", "trp_heroes_end"),
					(troop_get_slot, ":g_player_affiliated_troop_165", "$g_player_affiliated_troop", 165),
					(is_between, ":g_player_affiliated_troop_165", 0, 3),
					(troop_set_slot, "$g_player_affiliated_troop", 165, 3),
				(try_end),
				(try_for_range, ":troop", "trp_knight_1_1", "trp_kingdom_1_pretender"),
					(troop_slot_eq, ":troop", slot_troop_father, -1),
					(troop_slot_eq, ":troop", slot_troop_mother, -1),
					(store_mul, ":value_2", ":troop", -4),
					(val_add, ":value_2", -1),
					(troop_set_slot, ":troop", slot_troop_father, ":value_2"),
					(store_add, ":value_3", ":value_2", -1),
					(troop_set_slot, ":troop", slot_troop_mother, ":value_3"),
				(try_end),
				(try_for_range, ":troop", "trp_knight_1_1_wife", "trp_heroes_end"),
					(try_begin),
						(troop_slot_eq, ":troop", slot_troop_mother, ":troop"),
						(troop_get_slot, ":value_2", ":troop", slot_troop_father),
						(try_begin),
							(is_between, ":value_2", "trp_npc1", "trp_knight_1_1_wife"),
							(troop_get_slot, ":value_3", ":value_2", slot_troop_spouse),
							(troop_set_slot, ":troop", slot_troop_mother, ":value_3"),
							(try_begin),
								(ge, "$cheat_mode", 1),
								(str_store_troop_name, 0, ":troop"),
								(display_message, "@{!}DEBUG - Fixed slot troop mother for {s0}."),
							(try_end),
						(else_try),
							(troop_set_slot, ":troop", slot_troop_mother, -1),
							(ge, "$cheat_mode", 1),
							(str_store_troop_name, 0, ":troop"),
							(display_message, "@{!}DEBUG - When fixing slot troop mother for {s0}, could not find a valid mother."),
						(try_end),
					(else_try),
						(troop_slot_eq, ":troop", slot_troop_father, -1),
						(troop_slot_eq, ":troop", slot_troop_mother, -1),
						(troop_get_slot, ":troop_guardian", ":troop", slot_troop_guardian),
						(ge, ":troop_guardian", 1),
						(troop_get_slot, ":value_2", ":troop_guardian", slot_troop_father),
						(troop_set_slot, ":troop", slot_troop_father, ":value_2"),
						(troop_get_slot, ":value_3", ":troop_guardian", slot_troop_mother),
						(troop_set_slot, ":troop", slot_troop_mother, ":value_3"),
					(try_end),
					(neg|troop_slot_ge, ":troop", 14, 1),
					(assign, ":troop_guardian", -1),
					(try_begin),
						(troop_slot_ge, ":troop", 31, 1),
						(troop_get_slot, ":troop_guardian", ":troop", slot_troop_father),
					(else_try),
						(troop_slot_ge, ":troop", 33, 1),
						(troop_get_slot, ":troop_guardian", ":troop", slot_troop_guardian),
					(else_try),
						(troop_slot_ge, ":troop", 30, 1),
						(troop_get_slot, ":troop_guardian", ":troop", slot_troop_spouse),
					(try_end),
					(ge, ":troop_guardian", 1),
					(troop_get_slot, ":troop_guardian_original_faction", ":troop_guardian", slot_troop_original_faction),
					(troop_set_slot, ":troop", slot_troop_original_faction, ":troop_guardian_original_faction"),
				(try_end),
				(try_for_range, ":troop_2", "trp_knight_1_1_wife", "trp_heroes_end"),
					(troop_slot_eq, ":troop_2", slot_troop_occupation, 6),
					(troop_get_slot, ":troop_2_original_faction", ":troop_2", slot_troop_original_faction),
					(ge, ":troop_2_original_faction", 1),
					(try_for_range, ":troop_3", "trp_npc1", "trp_heroes_end"),
						(this_or_next|troop_slot_eq, ":troop_3", slot_troop_occupation, 6),
						(this_or_next|troop_slot_eq, ":troop_3", slot_troop_occupation, 2),
						(troop_slot_eq, ":troop_3", slot_troop_occupation, 9),
						(troop_slot_eq, ":troop_3", slot_troop_original_faction, ":troop_2_original_faction"),
						(call_script, "script_troop_get_relation_with_troop", ":troop_2", ":troop_3"),
						(is_between, reg0, 0, 2),
						(try_begin),
							(this_or_next|troop_slot_eq, ":troop_2", slot_troop_spouse, ":troop_3"),
							(troop_slot_eq, ":troop_3", slot_troop_spouse, ":troop_2"),
							(store_random_in_range, reg0, 0, 11),
						(else_try),
							(call_script, "script_dplmc_troop_get_family_relation_to_troop", ":troop_2", ":troop_3"),
						(try_end),
						(call_script, "script_troop_change_relation_with_troop", ":troop_2", ":troop_3", reg0),
						(troop_slot_eq, ":troop_3", slot_troop_occupation, 6),
						(is_between, ":troop_3", "trp_knight_1_1_wife", "trp_heroes_end"),
						(store_random_in_range, ":random_in_range_0_11", 0, 11),
						(call_script, "script_troop_change_relation_with_troop", ":troop_2", ":troop_3", ":random_in_range_0_11"),
					(try_end),
				(try_end),
				(try_for_range, ":troop", "trp_knight_1_1", "trp_kingdom_1_pretender"),
					(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
					(eq, ":faction_of_troop_troop", "fac_outlaws"),
					(this_or_next|troop_slot_eq, ":troop", slot_troop_occupation, 2),
					(this_or_next|troop_slot_eq, ":troop", slot_troop_occupation, 0),
					(troop_slot_eq, ":troop", slot_troop_occupation, 0),
					(neg|troop_slot_ge, ":troop", 10, 0),
					(neg|troop_slot_ge, ":troop", 8, 0),
					(neg|troop_slot_ge, ":troop", 12, 1),
					(assign, ":value_4", "p_salt_mine"),
					(try_for_range, ":troop_home", "p_town_1", ":value_4"),
						(party_slot_eq, ":troop_home", slot_town_lord, ":troop"),
						(assign, ":value_4", ":troop_home"),
					(try_end),
					(call_script, "script_search_troop_prisoner_of_party", ":troop"),
					(eq, reg0, -1),
					(assign, ":value_5", -1),
					(try_for_parties, ":var_19"),
						(eq, ":value_5", -1),
						(this_or_next|eq, ":var_19", "p_main_party"),
						(ge, ":var_19", "p_town_1"),
						(party_count_members_of_type, ":var_20", ":var_19", ":troop"),
						(gt, ":var_20", 0),
						(assign, ":value_5", ":var_19"),
					(try_end),
					(eq, ":value_5", -1),
					(troop_set_slot, ":troop", slot_troop_occupation, 14),
					(try_begin),
						(ge, "$cheat_mode", 1),
						(str_store_troop_name, 0, ":troop"),
						(display_message, "@{!}DEBUG - Changed occupation of {s0} to dplmc slto exile"),
					(try_end),
				(try_end),
				(try_for_range, ":troop", "trp_kingdom_1_pretender", "trp_knight_1_1_wife"),
					(neg|troop_slot_eq, ":troop", slot_troop_met, 0),
					(troop_slot_eq, ":troop", slot_troop_occupation, 2),
					(troop_slot_eq, ":troop", slot_troop_playerparty_history, 0),
					(troop_set_slot, ":troop", slot_troop_playerparty_history, 6),
				(try_end),
				(try_for_range, ":troop", "trp_npc1", "trp_kingdom_1_lord"),
					(neg|troop_slot_eq, ":troop", slot_troop_met, 0),
					(troop_slot_eq, ":troop", slot_troop_occupation, 2),
					(neg|troop_slot_eq, ":troop", slot_troop_playerparty_history, 8),
					(troop_set_slot, ":troop", slot_troop_playerparty_history, 6),
				(try_end),
				(try_for_range, ":troop_home", "p_town_1", "p_salt_mine"),
					(try_begin),
						(party_slot_eq, ":troop_home", 405, 0),
						(party_slot_eq, ":troop_home", 404, 0),
						(party_set_slot, ":troop_home", 405, -1),
					(try_end),
					(party_slot_eq, ":troop_home", 403, 0),
					(try_begin),
						(party_slot_eq, ":troop_home", 401, 0),
						(party_set_slot, ":troop_home", 401, -1),
					(try_end),
					(try_begin),
						(party_slot_eq, ":troop_home", 402, 0),
						(neg|troop_slot_eq, "trp_player", slot_troop_home, ":troop_home"),
						(party_set_slot, ":troop_home", 402, -1),
					(try_end),
				(try_end),
				(try_begin),
					(check_quest_active, "qst_wed_betrothed_female"),
					(quest_get_slot, ":wed_betrothed_female_giver_troop", "qst_wed_betrothed_female", slot_quest_giver_troop),
					(is_between, ":wed_betrothed_female_giver_troop", "trp_knight_1_1_wife", "trp_heroes_end"),
					(display_message, "@{!}FIXED PROBLEM - Cancelled erroneous version of qst wed betrothed female.  You should be able to marry normally if you try again."),
					(call_script, "script_abort_quest", "qst_wed_betrothed_female", 0),
				(try_end),
			(try_end),
			(try_begin),
				(ge, ":dplmc_chamberlain_165", 1),
				(lt, ":dplmc_chamberlain_165", 110615),
				(try_begin),
					(lt, 31, "trp_npc1"),
					(neg|troop_slot_eq, 31, slot_troop_father, 0),
					(troop_set_slot, 31, slot_troop_father, -1),
				(try_end),
				(try_begin),
					(lt, 32, "trp_npc1"),
					(neg|troop_slot_eq, 32, slot_troop_mother, 0),
					(troop_set_slot, 32, slot_troop_mother, -1),
				(try_end),
				(try_for_range, ":troop", "trp_knight_1_1", "trp_kingdom_1_pretender"),
					(troop_get_slot, reg0, ":troop", slot_troop_father),
					(troop_get_slot, reg1, ":troop", slot_troop_mother),
					(try_begin),
						(is_between, reg0, "trp_knight_1_1", "trp_kingdom_1_pretender"),
						(neg|is_between, reg1, "trp_knight_1_1_wife", "trp_heroes_end"),
						(troop_get_slot, reg1, reg0, slot_troop_spouse),
						(is_between, reg1, "trp_knight_1_1_wife", "trp_heroes_end"),
						(troop_set_slot, ":troop", slot_troop_mother, reg1),
						(call_script, "script_update_troop_notes", ":troop"),
					(else_try),
						(is_between, reg1, "trp_knight_1_1_wife", "trp_heroes_end"),
						(neg|is_between, reg0, "trp_knight_1_1", "trp_kingdom_1_pretender"),
						(troop_get_slot, reg0, reg1, slot_troop_spouse),
						(is_between, reg0, "trp_knight_1_1", "trp_kingdom_1_pretender"),
						(troop_set_slot, ":troop", slot_troop_father, reg0),
						(call_script, "script_update_troop_notes", ":troop"),
					(try_end),
				(try_end),
				(eq, ":dplmc_chamberlain_165", 1),
				(assign, reg0, 0),
				(try_for_range, ":troop", "trp_knight_1_1", "trp_kingdom_1_pretender"),
					(troop_slot_eq, ":troop", slot_lord_reputation_type, 0),
					(store_random_in_range, reg1, 0, 8),
					(val_max, reg1, 1),
					(troop_set_slot, ":troop", slot_lord_reputation_type, reg1),
					(val_add, reg0, 1),
				(try_end),
				(try_begin),
					(ge, "$cheat_mode", 1),
					(store_sub, reg1, reg0, 1),
					(display_message, "@{!} Bug fix: set personality types for {reg0} {reg1?lords:lord}"),
				(try_end),
				(assign, reg0, 0),
				(try_for_range, ":troop", "trp_knight_1_1_wife", "trp_heroes_end"),
					(neq, ":troop", "trp_knight_1_1_wife"),
					(troop_slot_eq, ":troop", slot_lord_reputation_type, 0),
					(store_random_in_range, reg1, 20, 26),
					(val_max, reg1, 21),
					(troop_set_slot, ":troop", slot_lord_reputation_type, reg1),
					(val_add, reg0, 1),
				(try_end),
				(try_begin),
					(ge, "$cheat_mode", 1),
					(store_sub, reg1, reg0, 1),
					(display_message, "@{!} Bug fix: set personality types for {reg0} {reg1?ladies:lady}"),
				(try_end),
			(try_end),
			(try_begin),
				(is_between, ":dplmc_chamberlain_165", 0, 111001),
				(try_for_range, ":faction_of_troop_troop", 0, 69),
					(neq, ":faction_of_troop_troop", "fac_player_faction"),
					(neq, ":faction_of_troop_troop", "fac_player_supporters_faction"),
					(this_or_next|neq, ":faction_of_troop_troop", "$players_kingdom"),
					(eq, ":faction_of_troop_troop", 0),
					(try_begin),
						(faction_slot_eq, ":faction_of_troop_troop", slot_faction_leader, 0),
						(faction_set_slot, ":faction_of_troop_troop", slot_faction_leader, -1),
					(try_end),
					(try_begin),
						(faction_slot_eq, ":faction_of_troop_troop", slot_faction_marshall, 0),
						(faction_set_slot, ":faction_of_troop_troop", slot_faction_marshall, -1),
					(try_end),
				(try_end),
				(try_for_range, ":troop_home", "p_town_1", "p_salt_mine"),
					(try_for_range, ":troop", 20, 26),
						(party_get_slot, ":troop", ":troop_home", ":troop"),
						(gt, ":troop", "trp_tournament_master"),
						(troop_is_hero, ":troop"),
						(troop_slot_eq, ":troop", slot_troop_home, 0),
						(troop_set_slot, ":troop", slot_troop_home, ":troop_home"),
					(try_end),
				(try_end),
				(try_for_range, ":troop", "trp_kingdom_1_lord", "trp_knight_1_1"),
					(troop_get_slot, ":troop_home", ":troop", slot_troop_home),
					(val_sub, ":troop", "trp_kingdom_1_lord"),
					(val_add, ":troop", "trp_swadian_merchant"),
					(is_between, ":troop", "trp_swadian_merchant", "trp_startup_merchants_end"),
					(neg|troop_slot_ge, ":troop", 60, 1),
					(troop_set_slot, ":troop", slot_troop_home, ":troop_home"),
				(try_end),
				(eq, 153, 154),
				(try_for_range, ":troop", "trp_npc1", "trp_kingdom_1_lord"),
					(try_begin),
						(neg|troop_slot_eq, ":troop", slot_troop_occupation, 2),
						(troop_set_slot, ":troop", slot_troop_stance_on_faction_issue, -1),
					(else_try),
						(troop_get_slot, ":g_player_affiliated_troop_165", ":troop", slot_troop_stance_on_faction_issue),
						(neg|is_between, ":g_player_affiliated_troop_165", -1, 1),
						(neg|is_between, ":g_player_affiliated_troop_165", "trp_npc1", "trp_heroes_end"),
						(troop_set_slot, ":troop", slot_troop_stance_on_faction_issue, -1),
					(try_end),
				(try_end),
			(try_end),
			(assign, reg1, ":var_4"),
			(assign, reg0, ":var_3"),
			(try_begin),
				(call_script, "script_cf_dplmc_troop_is_female", "trp_player"),
				(assign, "$character_gender", 1),
			(else_try),
				(assign, "$character_gender", 0),
			(try_end),
			(try_begin),
				(check_quest_active, "qst_formal_marriage_proposal"),
				(check_quest_failed, "qst_formal_marriage_proposal"),
				(call_script, "script_end_quest", "qst_formal_marriage_proposal"),
			(try_end),
			(try_begin),
				(check_quest_active, "qst_lend_companion"),
				(quest_get_slot, ":lend_companion_giver_troop", "qst_lend_companion", slot_quest_giver_troop),
				(store_faction_of_troop, ":faction_of_troop_lend_companion_giver_troop", ":lend_companion_giver_troop"),
				(store_relation, ":relation_faction_of_troop_lend_companion_giver_troop_players_kingdom", ":faction_of_troop_lend_companion_giver_troop", "$players_kingdom"),
				(this_or_next|lt, ":relation_faction_of_troop_lend_companion_giver_troop_players_kingdom", 0),
				(neg|is_between, ":faction_of_troop_lend_companion_giver_troop", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(call_script, "script_abort_quest", "qst_lend_companion", 0),
			(try_end),
			(try_begin),
				(is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(neq, "$players_kingdom", "fac_player_supporters_faction"),
				(faction_slot_eq, "$players_kingdom", slot_faction_marshall, "trp_player"),
				(val_add, "$g_player_days_as_marshal", 1),
			(else_try),
				(assign, "$g_player_days_as_marshal", 0),
			(try_end),
			(try_for_range, ":party", "p_town_1", "p_castle_1"),
				(party_get_slot, ":party_center_player_enterprise_consumption_order", ":party", slot_center_player_enterprise_consumption_order),
				(ge, ":party_center_player_enterprise_consumption_order", 1),
				(val_sub, ":party_center_player_enterprise_consumption_order", 1),
				(party_set_slot, ":party", slot_center_player_enterprise_consumption_order, ":party_center_player_enterprise_consumption_order"),
			(try_end)
		]),

	(24.0,
		[
			(item_set_slot, "itm_trade_bread", slot_item_food_bonus, 8),
			(item_set_slot, "itm_trade_grain", slot_item_food_bonus, 2),
			(item_set_slot, "itm_trade_smoked_fish", slot_item_food_bonus, 4),
			(item_set_slot, "itm_trade_dried_meat", slot_item_food_bonus, 5),
			(item_set_slot, "itm_trade_cheese", slot_item_food_bonus, 5),
			(item_set_slot, "itm_trade_sausages", slot_item_food_bonus, 5),
			(item_set_slot, "itm_trade_butter", slot_item_food_bonus, 4),
			(item_set_slot, "itm_trade_chicken", slot_item_food_bonus, 8),
			(item_set_slot, "itm_trade_cattle_meat", slot_item_food_bonus, 7),
			(item_set_slot, "itm_trade_pork", slot_item_food_bonus, 6),
			(item_set_slot, "itm_trade_raw_olives", slot_item_food_bonus, 1),
			(item_set_slot, "itm_trade_cabbages", slot_item_food_bonus, 2),
			(item_set_slot, "itm_trade_raw_grapes", slot_item_food_bonus, 3),
			(item_set_slot, "itm_trade_apples", slot_item_food_bonus, 4),
			(item_set_slot, "itm_trade_raw_date_fruit", slot_item_food_bonus, 4),
			(item_set_slot, "itm_trade_honey", slot_item_food_bonus, 6),
			(item_set_slot, "itm_trade_wine", slot_item_food_bonus, 5),
			(item_set_slot, "itm_trade_ale", slot_item_food_bonus, 4)
		]),

	(24.0,
		[]),

	(24.0,
		[]),

	(24.0,
		[]),

	(24.0,
		[]),

	(24.0,
		[]),

	(24.0,
		[]),

	(24.0,
		[]),

	(24.0,
		[]),

	(24.0,
		[]),

	(1.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_kingdom_1_lord"),
				(neg|map_free),
				(troop_get_slot, ":troop_330", ":troop", 330),
				(gt, ":troop_330", 0),
				(call_script, "script_get_troop_item_amount", ":troop", ":troop_330"),
				(assign, ":value", 1),
				(try_begin),
					(eq, reg0, 0),
					(troop_set_slot, "$g_talk_troop", 330, 0),
					(assign, ":value", 0),
				(try_end),
				(eq, ":value", 1),
				(store_attribute_level, ":attribute_level_troop_2", ":troop", 2),
				(item_get_slot, ":troop_330_intelligence_requirement", ":troop_330", slot_item_intelligence_requirement),
				(le, ":troop_330_intelligence_requirement", ":attribute_level_troop_2"),
				(call_script, "script_get_book_read_slot", ":troop", ":troop_330"),
				(assign, ":var_6", reg0),
				(troop_get_slot, ":book_read_var_6", "trp_book_read", ":var_6"),
				(troop_get_slot, ":book_reading_progress_var_6", "trp_book_reading_progress", ":var_6"),
				(eq, ":book_read_var_6", 0),
				(assign, ":var_9", 0),
				(try_for_range, ":troop_2", "trp_npc1", "trp_kingdom_1_lord"),
					(neq, ":troop_2", ":troop"),
					(main_party_has_troop, ":troop_2"),
					(call_script, "script_get_book_read_slot", ":troop_2", ":troop_330"),
					(assign, ":var_11", reg0),
					(troop_slot_eq, "trp_book_read", ":var_11", 1),
					(val_add, ":var_9", 1),
				(try_end),
				(try_begin),
					(item_slot_eq, ":troop_330", slot_item_book_read, 1),
					(val_add, ":var_9", 1),
				(try_end),
				(val_div, ":var_9", 4),
				(val_add, ":var_9", 3),
				(val_add, ":book_reading_progress_var_6", ":var_9"),
				(troop_set_slot, "trp_book_reading_progress", ":var_6", ":book_reading_progress_var_6"),
				(ge, ":book_reading_progress_var_6", 1000),
				(troop_set_slot, "trp_book_read", ":var_6", 1),
				(troop_set_slot, "trp_book_reading_progress", ":var_6", 1000),
				(troop_set_slot, ":troop", 330, 0),
				(str_store_troop_name, 1, ":troop"),
				(str_store_item_name, 2, ":troop_330"),
				(str_clear, 3),
				(try_begin),
					(eq, ":troop_330", "itm_book_tactics"),
					(troop_raise_skill, ":troop", "skl_tactics", 1),
					(str_store_string, 3, "@ {s1}'s tactics skill has increased by 1."),
				(else_try),
					(eq, ":troop_330", "itm_book_persuasion"),
					(troop_raise_skill, ":troop", "skl_persuasion", 1),
					(str_store_string, 3, "@ {s1}'s persuasion skill has increased by 1."),
				(else_try),
					(eq, ":troop_330", "itm_book_leadership"),
					(troop_raise_skill, ":troop", "skl_leadership", 1),
					(str_store_string, 3, "@ {s1}'s leadership skill has increased by 1."),
				(else_try),
					(eq, ":troop_330", "itm_book_prisoner_management"),
					(troop_raise_skill, ":troop", "skl_prisoner_management", 1),
					(str_store_string, 3, "@ {s1}'s prisoner management skill has increased by 1."),
				(else_try),
					(eq, ":troop_330", "itm_book_bible"),
					(troop_raise_attribute, ":troop", 3, 1),
					(str_store_string, 3, "@ {s1}'s charisma has increased by 1."),
				(else_try),
					(eq, ":troop_330", "itm_book_necronomicon"),
					(troop_raise_skill, ":troop", "skl_looting", 1),
					(str_store_string, 3, "@ {s1}'s looting skill has increased by 1."),
				(else_try),
					(eq, ":troop_330", "itm_book_intelligence"),
					(troop_raise_attribute, ":troop", 2, 1),
					(str_store_string, 3, "@ {s1}'s intelligence has increased by 1."),
				(else_try),
					(eq, ":troop_330", "itm_book_trade"),
					(troop_raise_skill, ":troop", "skl_trade", 1),
					(str_store_string, 3, "@ {s1}'s trade skill has increased by 1."),
				(else_try),
					(eq, ":troop_330", "itm_book_weapon_mastery"),
					(troop_raise_skill, ":troop", "skl_weapon_master", 1),
					(str_store_string, 3, "@ {s1}'s weapon master skill has increased by 1."),
				(else_try),
					(eq, ":troop_330", "itm_book_engineering"),
					(troop_raise_skill, ":troop", "skl_engineer", 1),
					(str_store_string, 3, "@ {s1}'s engineer skill has increased by 1."),
				(try_end),
				(display_message, "@{s1} have finished reading {s2}.{s3}", 0x0088ff88),
				(assign, ":troop_330", 0),
			(try_end)
		]),

	(3.0,
		[
			(try_for_parties, ":var_1"),
				(party_get_template_id, ":template_id_var_1", ":var_1"),
				(this_or_next|is_between, ":template_id_var_1", "pt_looters", "pt_looters_r"),
				(this_or_next|is_between, ":template_id_var_1", "pt_looters_r", "pt_looters_e"),
				(this_or_next|is_between, ":template_id_var_1", "pt_looters_e", "pt_deserters"),
				(eq, ":template_id_var_1", "pt_deserters"),
				(try_for_parties, ":var_3"),
					(neq, ":var_3", ":var_1"),
					(party_get_template_id, ":template_id_var_3", ":var_3"),
					(eq, ":template_id_var_3", ":template_id_var_1"),
					(party_get_battle_opponent, ":battle_opponent_var_3", ":var_3"),
					(lt, ":battle_opponent_var_3", 0),
					(party_get_attached_to, ":attached_to_var_3", ":var_3"),
					(lt, ":attached_to_var_3", 0),
					(party_stack_get_troop_id, ":party_stack_troop_id_var_3_0", ":var_3", 0),
					(neg|troop_is_hero, ":party_stack_troop_id_var_3_0"),
					(party_get_num_companions, ":num_companions_var_1", ":var_1"),
					(party_get_num_companions, ":num_companions_var_3", ":var_3"),
					(store_add, ":value", ":num_companions_var_1", ":num_companions_var_3"),
					(store_character_level, ":character_level_player", "trp_player"),
					(val_mul, ":character_level_player", 3),
					(val_div, ":character_level_player", 2),
					(store_add, ":value_2", ":character_level_player", 20),
					(try_begin),
						(party_stack_get_troop_id, ":party_stack_troop_id_var_1_0", ":var_1", 0),
						(troop_is_hero, ":party_stack_troop_id_var_1_0"),
						(val_mul, ":value_2", 2),
					(try_end),
					(le, ":value", ":value_2"),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_var_3", ":var_1", ":var_3"),
					(le, ":distance_to_party_from_party_var_1_var_3", 4),
					(call_script, "script_party_add_party", ":var_1", ":var_3"),
					(party_detach, ":var_3"),
					(remove_party, ":var_3"),
				(try_end),
			(try_end)
		]),

	(24.0,
		[]),

	(1.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(ge, ":troop_leaded_party", 1),
				(party_get_attached_to, ":attached_to_troop_leaded_party", ":troop_leaded_party"),
				(ge, ":attached_to_troop_leaded_party", 1),
				(call_script, "script_get_relation_between_parties", ":attached_to_troop_leaded_party", ":troop_leaded_party"),
				(try_begin),
					(lt, reg0, 0),
					(party_detach, ":troop_leaded_party"),
				(try_end),
			(try_end)
		]),

	(24.0,
		[
			(try_for_parties, ":var_1"),
				(neq, ":var_1", "p_main_party"),
				(neq, ":var_1", "p_temp_party"),
				(assign, ":value", 0),
				(try_begin),
					(this_or_next|party_slot_eq, ":var_1", slot_party_type, 13),
					(party_slot_eq, ":var_1", slot_party_type, 11),
					(party_is_active, ":var_1"),
					(assign, ":value", 1),
					(try_begin),
						(party_stack_get_troop_id, ":party_stack_troop_id_var_1_0", ":var_1", 0),
						(this_or_next|troop_is_hero, ":party_stack_troop_id_var_1_0"),
						(eq, ":party_stack_troop_id_var_1_0", "trp_caravan_master"),
						(assign, ":value_2", 1),
					(else_try),
						(assign, ":value_2", 0),
					(try_end),
				(else_try),
					(this_or_next|party_slot_eq, ":var_1", slot_party_type, 2),
					(party_slot_eq, ":var_1", slot_party_type, 3),
					(neg|party_slot_eq, ":var_1", slot_town_lord, "trp_player"),
					(assign, ":value_2", 0),
					(assign, ":value", 1),
				(try_end),
				(eq, ":value", 1),
				(call_script, "script_sort_party_by_troop_level", ":var_1", ":value_2"),
			(try_end)
		]),

	(24.0,
		[
			(try_for_range, ":party", "p_village_1", "p_salt_mine"),
				(party_get_slot, ":party_village_bound_center", ":party", slot_village_bound_center),
				(store_faction_of_party, ":faction_of_party_party", ":party"),
				(store_faction_of_party, ":faction_of_party_party_village_bound_center", ":party_village_bound_center"),
				(neq, ":faction_of_party_party", ":faction_of_party_party_village_bound_center"),
				(call_script, "script_give_center_to_faction", ":party", ":faction_of_party_party_village_bound_center"),
			(try_end)
		]),

	(24.0,
		[]),

	(12.0,
		[
			(try_for_range, ":troop", "trp_kingdom_1_lord", "trp_knight_1_1_wife"),
				(troop_get_slot, ":troop_leaded_party", ":troop", slot_troop_leaded_party),
				(ge, ":troop_leaded_party", 1),
				(call_script, "script_process_ransom_for_party", ":troop_leaded_party"),
				(assign, ":value", reg0),
				(troop_get_slot, ":troop_wealth", ":troop", slot_troop_wealth),
				(val_add, ":troop_wealth", ":value"),
				(troop_set_slot, ":troop", slot_troop_wealth, ":troop_wealth"),
				(call_script, "script_process_outlaws_for_party", ":troop_leaded_party"),
				(call_script, "script_update_troop_notes", ":troop"),
			(try_end),
			(try_for_range, ":party", "p_town_1", "p_village_1"),
				(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
				(neq, ":party_town_lord", "trp_player"),
				(neg|is_between, ":party_town_lord", "trp_npc1", "trp_kingdom_1_lord"),
				(call_script, "script_process_ransom_for_party", ":party"),
				(assign, ":value", reg0),
				(party_get_slot, ":troop_wealth", ":party", slot_town_wealth),
				(val_add, ":troop_wealth", ":value"),
				(party_set_slot, ":party", slot_town_wealth, ":troop_wealth"),
				(game_get_reduce_campaign_ai, ":game_reduce_campaign_ai"),
				(assign, ":value_2", 450),
				(try_begin),
					(eq, ":game_reduce_campaign_ai", 0),
					(assign, ":value_2", 300),
				(else_try),
					(eq, ":game_reduce_campaign_ai", 1),
					(assign, ":value_2", 450),
				(else_try),
					(eq, ":game_reduce_campaign_ai", 2),
					(assign, ":value_2", 600),
				(try_end),
				(store_div, ":value_3", ":value", 2),
				(val_div, ":value_3", ":value_2"),
				(try_begin),
					(gt, ":value_3", 0),
					(try_for_range, ":unused", 0, ":value_3"),
						(party_get_slot, ":troop_wealth", ":party", slot_town_wealth),
						(assign, ":var_11", ":troop_wealth"),
						(val_div, ":var_11", 2),
						(gt, ":var_11", ":value_2"),
						(call_script, "script_cf_reinforce_party", ":party"),
						(val_sub, ":troop_wealth", ":value_2"),
						(party_set_slot, ":party", slot_town_wealth, ":troop_wealth"),
					(try_end),
					(store_mul, ":value_4", ":value_3", 1000),
					(party_upgrade_with_xp, ":party", ":value_4"),
				(try_end),
				(call_script, "script_process_outlaws_for_party", ":party"),
			(try_end)
		]),

	(1.0,
		[
			(party_get_morale, ":morale_main_party", "p_main_party"),
			(try_begin),
				(lt, ":morale_main_party", "$g_morale_threshold"),
				(assign, "$g_twice_consum_food", 1),
			(else_try),
				(assign, "$g_twice_consum_food", 0),
			(try_end)
		]),

	(3.0,
		[
			(try_for_parties, ":var_1"),
				(party_get_slot, ":var_1_type", ":var_1", slot_party_type),
				(try_begin),
					(this_or_next|eq, ":var_1_type", 3),
					(eq, ":var_1_type", 2),
					(party_get_slot, ":var_1_town_lord", ":var_1", slot_town_lord),
					(assign, ":value", ":var_1_town_lord"),
				(else_try),
					(eq, ":var_1_type", 13),
					(party_stack_get_troop_id, ":party_stack_troop_id_var_1_0", ":var_1", 0),
					(assign, ":value", ":party_stack_troop_id_var_1_0"),
				(else_try),
					(party_stack_get_troop_id, ":party_stack_troop_id_var_1_0", ":var_1", 0),
					(assign, ":value", ":party_stack_troop_id_var_1_0"),
				(try_end),
				(gt, ":value", 0),
				(neg|is_between, ":value", "trp_npc1", "trp_kingdom_1_lord"),
				(try_begin),
					(party_slot_eq, ":var_1", slot_party_type, 13),
					(troop_get_slot, ":value_original_faction", ":value", slot_troop_original_faction),
				(else_try),
					(store_faction_of_troop, ":value_original_faction", ":value"),
				(try_end),
				(store_faction_of_troop, ":faction_of_troop_value", ":value"),
				(call_script, "script_combine_same_troops_from_prisoners", ":var_1"),
				(party_get_num_prisoner_stacks, ":num_prisoner_stacks_var_1", ":var_1"),
				(try_for_range_backwards, ":var_9", 0, ":num_prisoner_stacks_var_1"),
					(party_prisoner_stack_get_troop_id, ":party_prisoner_stack_troop_id_var_1_var_9", ":var_1", ":var_9"),
					(gt, ":party_prisoner_stack_troop_id_var_1_var_9", -1),
					(neg|troop_is_hero, ":party_prisoner_stack_troop_id_var_1_var_9"),
					(store_faction_of_troop, ":faction_of_troop_party_prisoner_stack_troop_id_var_1_var_9", ":party_prisoner_stack_troop_id_var_1_var_9"),
					(assign, ":value_2", 0),
					(try_begin),
						(this_or_next|eq, ":faction_of_troop_party_prisoner_stack_troop_id_var_1_var_9", ":value_original_faction"),
						(eq, ":faction_of_troop_party_prisoner_stack_troop_id_var_1_var_9", ":faction_of_troop_value"),
						(assign, ":value_2", 1),
					(else_try),
						(try_begin),
							(eq, "$troop_trees", "trp_troop_tree_0"),
							(assign, ":value_3", "trp_bandit_n_looter"),
							(assign, ":value_4", "trp_bandit_n_manhunter"),
						(else_try),
							(eq, "$troop_trees", "trp_troop_tree_1"),
							(assign, ":value_3", "trp_bandit_r_looter"),
							(assign, ":value_4", "trp_bandit_r_manhunter"),
						(else_try),
							(eq, "$troop_trees", "trp_troop_tree_2"),
							(assign, ":value_3", "trp_bandit_e_looter"),
							(assign, ":value_4", "trp_bandit_e_manhunter"),
						(try_end),
						(is_between, ":party_prisoner_stack_troop_id_var_1_var_9", ":value_3", ":value_4"),
						(troop_get_slot, ":party_prisoner_stack_troop_id_var_1_var_9_original_faction", ":party_prisoner_stack_troop_id_var_1_var_9", slot_troop_original_faction),
						(eq, ":party_prisoner_stack_troop_id_var_1_var_9_original_faction", ":value_original_faction"),
						(assign, ":value_2", 1),
					(try_end),
					(eq, ":value_2", 1),
					(party_get_num_companion_stacks, ":num_companion_stacks_var_1", ":var_1"),
					(assign, ":value_5", 0),
					(try_begin),
						(lt, ":num_companion_stacks_var_1", 32),
						(assign, ":value_5", 1),
					(else_try),
						(try_for_range, ":number", 0, ":num_companion_stacks_var_1"),
							(party_stack_get_troop_id, ":party_stack_troop_id_var_1_number", ":var_1", ":number"),
							(eq, ":party_stack_troop_id_var_1_number", ":party_prisoner_stack_troop_id_var_1_var_9"),
							(assign, ":value_5", 1),
							(assign, ":num_companion_stacks_var_1", 0),
						(try_end),
					(try_end),
					(eq, ":value_5", 1),
					(party_prisoner_stack_get_size, ":party_prisoner_stack_size_var_1_var_9", ":var_1", ":var_9"),
					(party_remove_prisoners, ":var_1", ":party_prisoner_stack_troop_id_var_1_var_9", ":party_prisoner_stack_size_var_1_var_9"),
					(try_begin),
						(try_begin),
							(eq, "$troop_trees", "trp_troop_tree_0"),
							(assign, ":value_3", "trp_bandit_n_looter"),
							(assign, ":value_4", "trp_bandit_n_manhunter"),
						(else_try),
							(eq, "$troop_trees", "trp_troop_tree_1"),
							(assign, ":value_3", "trp_bandit_r_looter"),
							(assign, ":value_4", "trp_bandit_r_manhunter"),
						(else_try),
							(eq, "$troop_trees", "trp_troop_tree_2"),
							(assign, ":value_3", "trp_bandit_e_looter"),
							(assign, ":value_4", "trp_bandit_e_manhunter"),
						(try_end),
						(is_between, ":party_prisoner_stack_troop_id_var_1_var_9", ":value_3", ":value_4"),
						(store_random_in_range, ":random_in_range_0_2", 0, 2),
						(troop_get_upgrade_troop, ":upgrade_troop_party_prisoner_stack_troop_id_var_1_var_9_random_in_range_0_2", ":party_prisoner_stack_troop_id_var_1_var_9", ":random_in_range_0_2"),
						(try_begin),
							(le, ":upgrade_troop_party_prisoner_stack_troop_id_var_1_var_9_random_in_range_0_2", 0),
							(troop_get_upgrade_troop, ":upgrade_troop_party_prisoner_stack_troop_id_var_1_var_9_random_in_range_0_2", ":party_prisoner_stack_troop_id_var_1_var_9", 0),
						(try_end),
						(party_add_members, ":var_1", ":upgrade_troop_party_prisoner_stack_troop_id_var_1_var_9_random_in_range_0_2", ":party_prisoner_stack_size_var_1_var_9"),
					(else_try),
						(party_add_members, ":var_1", ":party_prisoner_stack_troop_id_var_1_var_9", ":party_prisoner_stack_size_var_1_var_9"),
					(try_end),
				(try_end),
			(try_end)
		]),

	(3.0,
		[
			(try_begin),
				(eq, "$troop_trees", "trp_troop_tree_0"),
				(assign, ":value", "pt_forest_bandits"),
				(assign, ":value_2", "pt_looters_r"),
			(else_try),
				(eq, "$troop_trees", "trp_troop_tree_1"),
				(assign, ":value", "pt_forest_bandits_r"),
				(assign, ":value_2", "pt_looters_e"),
			(else_try),
				(eq, "$troop_trees", "trp_troop_tree_2"),
				(assign, ":value", "pt_forest_bandits_e"),
				(assign, ":value_2", "pt_deserters"),
			(try_end),
			(try_for_parties, ":var_3"),
				(party_get_template_id, ":template_id_var_3", ":var_3"),
				(is_between, ":template_id_var_3", ":value", ":value_2"),
				(try_begin),
					(eq, "$troop_trees", "trp_troop_tree_0"),
					(store_sub, ":value_3", ":template_id_var_3", "pt_forest_bandits"),
				(else_try),
					(eq, "$troop_trees", "trp_troop_tree_1"),
					(store_sub, ":value_3", ":template_id_var_3", "pt_forest_bandits_r"),
				(else_try),
					(eq, "$troop_trees", "trp_troop_tree_2"),
					(store_sub, ":value_3", ":template_id_var_3", "pt_forest_bandits_e"),
				(try_end),
				(val_add, ":value_3", "fac_kingdom_1"),
				(party_get_num_prisoner_stacks, ":num_prisoner_stacks_var_3", ":var_3"),
				(try_for_range_backwards, ":var_7", 0, ":num_prisoner_stacks_var_3"),
					(party_prisoner_stack_get_troop_id, ":party_prisoner_stack_troop_id_var_3_var_7", ":var_3", ":var_7"),
					(gt, ":party_prisoner_stack_troop_id_var_3_var_7", -1),
					(neg|troop_is_hero, ":party_prisoner_stack_troop_id_var_3_var_7"),
					(store_faction_of_troop, ":faction_of_troop_party_prisoner_stack_troop_id_var_3_var_7", ":party_prisoner_stack_troop_id_var_3_var_7"),
					(this_or_next|eq, ":faction_of_troop_party_prisoner_stack_troop_id_var_3_var_7", "fac_outlaws"),
					(eq, ":faction_of_troop_party_prisoner_stack_troop_id_var_3_var_7", ":value_3"),
					(party_prisoner_stack_get_size, ":party_prisoner_stack_size_var_3_var_7", ":var_3", ":var_7"),
					(party_remove_prisoners, ":var_3", ":party_prisoner_stack_troop_id_var_3_var_7", ":party_prisoner_stack_size_var_3_var_7"),
					(try_begin),
						(eq, ":faction_of_troop_party_prisoner_stack_troop_id_var_3_var_7", "fac_outlaws"),
						(party_add_members, ":var_3", ":party_prisoner_stack_troop_id_var_3_var_7", ":party_prisoner_stack_size_var_3_var_7"),
					(else_try),
						(store_sub, ":value_4", ":faction_of_troop_party_prisoner_stack_troop_id_var_3_var_7", "fac_kingdom_1"),
						(troop_get_slot, ":troop_trees_847", "$troop_trees", 847),
						(val_add, ":value_4", ":troop_trees_847"),
						(party_add_members, ":var_3", ":value_4", ":party_prisoner_stack_size_var_3_var_7"),
					(try_end),
				(try_end),
				(party_get_num_companion_stacks, ":num_companion_stacks_var_3", ":var_3"),
				(try_for_range_backwards, ":var_14", 0, ":num_companion_stacks_var_3"),
					(party_stack_get_troop_id, ":party_stack_troop_id_var_3_var_14", ":var_3", ":var_14"),
					(gt, ":party_stack_troop_id_var_3_var_14", -1),
					(neg|troop_is_hero, ":party_stack_troop_id_var_3_var_14"),
					(store_faction_of_troop, ":faction_of_troop_party_prisoner_stack_troop_id_var_3_var_7", ":party_stack_troop_id_var_3_var_14"),
					(eq, ":faction_of_troop_party_prisoner_stack_troop_id_var_3_var_7", ":value_3"),
					(party_stack_get_size, ":party_stack_size_var_3_var_14", ":var_3", ":var_14"),
					(party_stack_get_num_wounded, ":party_stack_num_wounded_var_3_var_14", ":var_3", ":var_14"),
					(party_remove_members, ":var_3", ":party_stack_troop_id_var_3_var_14", ":party_stack_size_var_3_var_14"),
					(store_sub, ":value_4", ":faction_of_troop_party_prisoner_stack_troop_id_var_3_var_7", "fac_kingdom_1"),
					(troop_get_slot, ":troop_trees_847", "$troop_trees", 847),
					(val_add, ":value_4", ":troop_trees_847"),
					(party_add_members, ":var_3", ":value_4", ":party_stack_size_var_3_var_14"),
					(party_wound_members, ":var_3", ":value_4", ":party_stack_num_wounded_var_3_var_14"),
				(try_end),
			(try_end)
		]),

	(24.0,
		[
			(try_for_range, ":party", "p_town_1", "p_village_1"),
				(party_slot_eq, ":party", slot_town_lord, "trp_player"),
				(party_slot_eq, ":party", slot_center_is_besieged_by, -1),
				(party_slot_ge, ":party", 40, 800),
				(call_script, "script_get_town_faction_for_recruiting", ":party"),
				(assign, ":var_2", reg0),
				(faction_get_slot, ":var_2_reinforcements_a", ":var_2", slot_faction_reinforcements_a),
				(faction_get_slot, ":var_2_reinforcements_b", ":var_2", slot_faction_reinforcements_b),
				(faction_get_slot, ":var_2_reinforcements_c", ":var_2", slot_faction_reinforcements_c),
				(faction_get_slot, ":var_2_106", ":var_2", 106),
				(faction_get_slot, ":var_2_107", ":var_2", 107),
				(faction_get_slot, ":var_2_108", ":var_2", 108),
				(party_get_slot, ":party_type", ":party", slot_party_type),
				(assign, ":value", 0),
				(store_random_in_range, ":random_in_range_0_100", 0, 100),
				(try_begin),
					(eq, ":party_type", 2),
					(try_begin),
						(lt, ":random_in_range_0_100", 50),
						(assign, ":value", ":var_2_107"),
					(else_try),
						(lt, ":random_in_range_0_100", 75),
						(assign, ":value", ":var_2_106"),
					(else_try),
						(lt, ":random_in_range_0_100", 75),
						(assign, ":value", ":var_2_reinforcements_c"),
					(else_try),
						(assign, ":value", ":var_2_reinforcements_a"),
					(try_end),
				(else_try),
					(eq, ":party_type", 3),
					(try_begin),
						(lt, ":random_in_range_0_100", 20),
						(assign, ":value", ":var_2_108"),
					(else_try),
						(lt, ":random_in_range_0_100", 60),
						(assign, ":value", ":var_2_107"),
					(else_try),
						(lt, ":random_in_range_0_100", 80),
						(assign, ":value", ":var_2_106"),
					(else_try),
						(lt, ":random_in_range_0_100", 80),
						(assign, ":value", ":var_2_reinforcements_c"),
					(else_try),
						(assign, ":value", ":var_2_reinforcements_b"),
					(try_end),
				(try_end),
				(try_begin),
					(gt, ":value", 0),
					(party_add_template, ":party", ":value"),
				(try_end),
				(party_get_slot, ":party_40", ":party", 40),
				(val_sub, ":party_40", 800),
				(party_set_slot, ":party", 40, ":party_40"),
			(try_end)
		]),

	(360.0,
		[
			(eq, "$g_add_bandit_heroes", 1),
			(call_script, "script_centers_init_bandit_leader_quest"),
			(try_begin),
				(eq, "$troop_trees", "trp_troop_tree_0"),
				(assign, ":value", "pt_steppe_bandits"),
				(assign, ":value_2", "pt_desert_bandits"),
				(assign, ":value_3", "pt_forest_bandits"),
				(assign, ":value_4", "pt_looters_r"),
			(else_try),
				(eq, "$troop_trees", "trp_troop_tree_1"),
				(assign, ":value", "pt_steppe_bandits_r"),
				(assign, ":value_2", "pt_desert_bandits_r"),
				(assign, ":value_3", "pt_forest_bandits_r"),
				(assign, ":value_4", "pt_looters_e"),
			(else_try),
				(eq, "$troop_trees", "trp_troop_tree_2"),
				(assign, ":value", "pt_steppe_bandits_e"),
				(assign, ":value_2", "pt_desert_bandits_e"),
				(assign, ":value_3", "pt_forest_bandits_e"),
				(assign, ":value_4", "pt_deserters"),
			(try_end),
			(try_for_range, ":var_5", ":value_3", ":value_4"),
				(party_template_set_slot, ":var_5", 6, 0),
				(try_for_parties, ":var_6"),
					(party_get_template_id, ":template_id_var_6", ":var_6"),
					(eq, ":template_id_var_6", ":var_5"),
					(party_stack_get_troop_id, ":party_stack_troop_id_var_6_0", ":var_6", 0),
					(troop_is_hero, ":party_stack_troop_id_var_6_0"),
					(party_template_set_slot, ":var_5", 6, 1),
				(try_end),
				(party_template_slot_eq, ":var_5", 6, 0),
				(party_template_get_slot, ":party_template_slot_var_5_7", ":var_5", 7),
				(party_template_get_slot, ":party_template_slot_var_5_8", ":var_5", 8),
				(party_template_get_slot, ":party_template_slot_var_5_9", ":var_5", 9),
				(store_character_level, ":character_level_player", "trp_player"),
				(store_character_level, ":character_level_party_template_slot_var_5_8", ":party_template_slot_var_5_8"),
				(try_begin),
					(this_or_next|eq, ":var_5", ":value"),
					(eq, ":var_5", ":value_2"),
					(val_mul, ":character_level_party_template_slot_var_5_8", 3),
					(val_div, ":character_level_party_template_slot_var_5_8", 2),
				(try_end),
				(val_div, ":character_level_party_template_slot_var_5_8", 2),
				(ge, ":character_level_player", ":character_level_party_template_slot_var_5_8"),
				(set_spawn_radius, 25),
				(spawn_around_party, ":party_template_slot_var_5_7", ":var_5"),
				(assign, ":var_14", reg0),
				(party_add_template, ":var_14", ":var_5"),
				(party_add_template, ":var_14", ":var_5"),
				(assign, ":value_5", 1),
				(try_for_range, ":unused", 0, ":value_5"),
					(store_random_in_range, ":random_in_range_0_5", 0, 5),
					(val_add, ":random_in_range_0_5", ":party_template_slot_var_5_9"),
					(party_template_get_slot, ":party_template_slot_var_5_11", ":var_5", 11),
					(party_template_get_slot, ":party_template_slot_var_5_12", ":var_5", 12),
					(neq, ":random_in_range_0_5", ":party_template_slot_var_5_11"),
					(neq, ":random_in_range_0_5", ":party_template_slot_var_5_12"),
					(troop_set_name, ":party_template_slot_var_5_8", ":random_in_range_0_5"),
					(party_template_set_slot, ":var_5", 11, ":random_in_range_0_5"),
					(party_template_set_slot, ":var_5", 12, ":party_template_slot_var_5_11"),
					(assign, ":value_5", 0),
				(else_try),
					(val_add, ":value_5", 1),
				(try_end),
				(party_add_leader, ":var_14", ":party_template_slot_var_5_8"),
				(str_store_troop_name, 5, ":party_template_slot_var_5_8"),
				(party_set_name, ":var_14", "str_s5_s_party"),
				(store_sub, ":value_6", ":party_template_slot_var_5_8", "trp_forest_bandit_hero"),
				(val_add, ":value_6", "icon_map_flag_bandit_f"),
				(party_set_banner_icon, ":var_14", ":value_6"),
				(party_template_set_slot, ":var_5", 6, 1),
				(party_template_set_slot, ":var_5", 10, ":var_14"),
			(try_end)
		]),

	(3.0,
		[
			(try_begin),
				(eq, "$troop_trees", "trp_troop_tree_0"),
				(assign, ":value", "pt_forest_bandits"),
				(assign, ":value_2", "pt_looters_r"),
			(else_try),
				(eq, "$troop_trees", "trp_troop_tree_1"),
				(assign, ":value", "pt_forest_bandits_r"),
				(assign, ":value_2", "pt_looters_e"),
			(else_try),
				(eq, "$troop_trees", "trp_troop_tree_2"),
				(assign, ":value", "pt_forest_bandits_e"),
				(assign, ":value_2", "pt_deserters"),
			(try_end),
			(try_for_range, ":var_3", ":value", ":value_2"),
				(party_template_set_slot, ":var_3", 6, 0),
				(try_for_parties, ":value_3"),
					(party_template_slot_eq, ":var_3", 6, 0),
					(party_get_template_id, ":template_id_value_3", ":value_3"),
					(eq, ":template_id_value_3", ":var_3"),
					(party_stack_get_troop_id, ":party_stack_troop_id_value_3_0", ":value_3", 0),
					(troop_is_hero, ":party_stack_troop_id_value_3_0"),
					(party_template_set_slot, ":var_3", 6, 1),
				(try_end),
				(party_template_slot_eq, ":var_3", 6, 1),
				(party_template_get_slot, ":party_template_slot_var_3_10", ":var_3", 10),
				(party_is_active, ":party_template_slot_var_3_10"),
				(assign, ":var_8", 0),
				(try_for_parties, ":value_3"),
					(party_get_template_id, ":template_id_value_3", ":value_3"),
					(eq, ":template_id_value_3", ":var_3"),
					(party_stack_get_troop_id, ":party_stack_troop_id_value_3_0", ":value_3", 0),
					(neg|troop_is_hero, ":party_stack_troop_id_value_3_0"),
					(assign, ":value_4", 1),
					(try_begin),
						(get_party_ai_behavior, ":party_ai_behavior_value_3", ":value_3"),
						(eq, ":party_ai_behavior_value_3", 10),
						(val_add, ":var_8", 1),
						(assign, ":value_4", 0),
					(try_end),
					(eq, ":value_4", 1),
					(lt, ":var_8", 8),
					(val_add, ":var_8", 1),
					(party_set_ai_behavior, ":value_3", 10),
					(party_set_ai_object, ":value_3", ":party_template_slot_var_3_10"),
				(try_end),
			(try_end)
		]),

	(24.0,
		[
			(party_get_num_prisoners, ":num_prisoners_main_party", "p_main_party"),
			(call_script, "script_game_get_party_prisoner_limit"),
			(assign, ":var_2", reg0),
			(gt, ":num_prisoners_main_party", ":var_2"),
			(store_mul, ":value", ":num_prisoners_main_party", 10),
			(val_max, ":var_2", 1),
			(val_div, ":value", ":var_2"),
			(val_min, ":value", 50),
			(assign, ":var_4", 0),
			(assign, ":var_5", 0),
			(party_get_num_prisoner_stacks, ":num_prisoner_stacks_main_party", "p_main_party"),
			(try_for_range_backwards, ":var_7", 0, ":num_prisoner_stacks_main_party"),
				(party_prisoner_stack_get_troop_id, ":party_prisoner_stack_troop_id_main_party_var_7", "p_main_party", ":var_7"),
				(neg|troop_is_hero, ":party_prisoner_stack_troop_id_main_party_var_7"),
				(party_prisoner_stack_get_size, ":party_prisoner_stack_size_main_party_var_7", "p_main_party", ":var_7"),
				(assign, ":var_10", 0),
				(try_for_range, ":unused", 0, ":party_prisoner_stack_size_main_party_var_7"),
					(store_random_in_range, ":random_in_range_0_100", 0, 100),
					(lt, ":random_in_range_0_100", ":value"),
					(val_add, ":var_10", 1),
				(try_end),
				(gt, ":var_10", 0),
				(party_remove_prisoners, "p_main_party", ":party_prisoner_stack_troop_id_main_party_var_7", ":var_10"),
				(val_add, ":var_4", 1),
				(val_add, ":var_5", ":var_10"),
				(try_begin),
					(eq, ":var_4", 1),
					(str_store_troop_name_by_count, 1, ":party_prisoner_stack_troop_id_main_party_var_7", ":var_10"),
					(assign, reg1, ":var_10"),
					(str_store_string, 0, "@{reg1} {s1}"),
				(else_try),
					(eq, ":var_4", 2),
					(str_store_troop_name_by_count, 1, ":party_prisoner_stack_troop_id_main_party_var_7", ":var_10"),
					(assign, reg1, ":var_10"),
					(str_store_string, 0, "@{reg1} {s1} and {s0}"),
				(else_try),
					(ge, ":var_4", 3),
					(str_store_troop_name_by_count, 1, ":party_prisoner_stack_troop_id_main_party_var_7", ":var_10"),
					(assign, reg1, ":var_10"),
					(str_store_string, 0, "@{reg1} {s1}, {s0}"),
				(try_end),
			(try_end),
			(try_begin),
				(ge, ":var_4", 1),
				(try_begin),
					(eq, ":var_5", 1),
					(str_store_string, 0, "@{s0} has escaped."),
				(else_try),
					(str_store_string, 0, "@{s0} hava escaped."),
				(try_end),
				(str_store_string, 0, "@Number of prisoners exceeds prisoner management limit. {s0}"),
				(dialog_box, 0, "str_weekly_report"),
			(try_end)
		]),

	(24.0,
		[
			(try_for_range, ":faction", "fac_kingdom_1", "fac_kingdoms_end"),
				(neg|faction_slot_eq, ":faction", slot_faction_state, 0),
				(troop_get_slot, ":supported_pretender_original_faction", "$supported_pretender", slot_troop_original_faction),
				(neq, ":supported_pretender_original_faction", ":faction"),
				(assign, ":value", -1),
				(assign, ":value_2", 0),
				(try_for_range, ":faction_2", "fac_kingdom_1", "fac_kingdoms_end"),
					(neq, ":faction_2", ":faction"),
					(neq, ":faction_2", ":supported_pretender_original_faction"),
					(faction_slot_eq, ":faction_2", slot_faction_state, 0),
					(assign, ":var_6", 0),
					(try_for_range, ":troop", "trp_knight_1_1", "trp_kingdom_1_pretender"),
						(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
						(eq, ":faction_of_troop_troop", ":faction_2"),
						(troop_get_slot, ":troop_original_faction", ":troop", slot_troop_original_faction),
						(eq, ":troop_original_faction", ":faction"),
						(val_add, ":var_6", 1),
					(try_end),
					(assign, ":var_10", 0),
					(try_for_range, ":party", "p_town_1", "p_village_1"),
						(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
						(ge, ":party_town_lord", 1),
						(store_faction_of_troop, ":faction_of_troop_troop", ":party_town_lord"),
						(eq, ":faction_of_troop_troop", ":faction_2"),
						(troop_get_slot, ":troop_original_faction", ":party_town_lord", slot_troop_original_faction),
						(eq, ":troop_original_faction", ":faction"),
						(val_add, ":var_10", 1),
					(try_end),
					(try_begin),
						(gt, ":var_10", 0),
						(gt, ":var_6", ":value_2"),
						(assign, ":value_2", ":var_6"),
						(assign, ":value", ":faction_2"),
					(try_end),
				(try_end),
				(try_begin),
					(lt, ":value_2", 5),
					(assign, ":value", -1),
				(try_end),
				(gt, ":value", -1),
				(faction_get_slot, ":faction_leader", ":faction", slot_faction_leader),
				(call_script, "script_change_troop_faction", ":faction_leader", ":faction"),
				(troop_set_slot, ":faction_leader", slot_troop_occupation, 2),
				(call_script, "script_add_notification_menu", "mnu_notification_kingdom_restoration", ":faction", ":value"),
			(try_end)
		]),

	(1.0,
		[
			(try_for_range, ":quest", "qst_deal_with_forest_bandit", "qst_quests_end"),
				(check_quest_active, ":quest"),
				(neg|check_quest_succeeded, ":quest"),
				(quest_get_slot, ":quest_target_party_template", ":quest", slot_quest_target_party_template),
				(assign, ":value", 0),
				(try_for_parties, ":var_4"),
					(party_get_template_id, ":template_id_var_4", ":var_4"),
					(eq, ":template_id_var_4", ":quest_target_party_template"),
					(party_stack_get_troop_id, ":party_stack_troop_id_var_4_0", ":var_4", 0),
					(troop_is_hero, ":party_stack_troop_id_var_4_0"),
					(assign, ":value", 1),
				(try_end),
				(eq, ":value", 0),
				(party_template_set_slot, ":quest_target_party_template", 6, 0),
				(party_template_set_slot, ":quest_target_party_template", 10, -1),
				(display_message, "@{s1} has been eliminated by another party.", 0x00ff3333),
				(call_script, "script_cancel_quest", ":quest"),
			(try_end)
		]),

	(1.0,
		[
			(try_for_range, ":troop", "trp_npc1", "trp_knight_1_1_wife"),
				(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
				(is_between, ":faction_of_troop_troop", "fac_kingdom_1", "fac_kingdoms_end"),
				(faction_slot_eq, ":faction_of_troop_troop", slot_faction_leader, ":troop"),
				(call_script, "script_troop_set_title_according_to_faction", ":troop", ":faction_of_troop_troop"),
			(try_end)
		]),

	(0.0,
		[
			(try_for_range, ":troop", "trp_custom_n_recruit", "trp_custom_end"),
				(neg|troop_is_hero, ":troop"),
				(store_add, ":value", ":troop", 1),
				(str_store_troop_name, 1, ":value"),
				(str_store_troop_name_plural, 2, ":value"),
				(troop_set_name, ":troop", 1),
				(troop_set_plural_name, ":troop", 2),
			(try_end),
			(map_free),
			(troop_get_inventory_slot, ":inventory_slot_custom_end_10", "trp_custom_end", 10),
			(eq, ":inventory_slot_custom_end_10", "itm_trade_velvet"),
			(call_script, "script_reload_custom_troops"),
			(troop_clear_inventory, "trp_custom_end")
		]),

	(3.0,
		[
			(troop_get_slot, ":player_spouse", "trp_player", slot_troop_spouse),
			(ge, ":player_spouse", "trp_npc1"),
			(try_for_parties, ":var_2"),
				(party_slot_eq, ":var_2", slot_party_type, 19),
				(party_get_slot, ":var_2_263", ":var_2", 263),
				(party_get_slot, ":var_2_home_center", ":var_2", slot_party_home_center),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_var_2_var_2_263", ":var_2", ":var_2_263"),
				(try_begin),
					(le, ":distance_to_party_from_party_var_2_var_2_263", 1),
					(try_begin),
						(this_or_next|eq, ":var_2_263", "$g_player_court"),
						(eq, ":var_2_263", ":var_2_home_center"),
						(remove_party, ":var_2"),
						(troop_set_slot, ":player_spouse", slot_troop_cur_center, ":var_2_263"),
					(else_try),
						(try_begin),
							(is_between, ":var_2_263", "p_village_1", "p_salt_mine"),
							(party_get_slot, ":var_2_263_town_elder", ":var_2_263", slot_town_elder),
						(else_try),
							(party_get_slot, ":var_2_263_town_elder", ":var_2_263", slot_town_merchant),
						(try_end),
						(troop_get_slot, ":player_spouse_162", ":player_spouse", 162),
						(troop_remove_items, ":var_2_263_town_elder", "itm_trade_bread", ":player_spouse_162"),
						(party_set_ai_behavior, ":var_2", 1),
						(try_begin),
							(gt, "$g_player_court", 0),
							(party_set_slot, ":var_2", slot_party_ai_object, "$g_player_court"),
							(party_set_ai_object, ":var_2", "$g_player_court"),
						(else_try),
							(party_set_slot, ":var_2", slot_party_ai_object, ":var_2_home_center"),
							(party_set_ai_object, ":var_2", ":var_2_home_center"),
						(try_end),
						(troop_add_items, "trp_household_possessions", "itm_trade_bread", ":player_spouse_162"),
					(try_end),
				(try_end),
			(try_end)
		]),

	(0.5,
		[
			(try_for_parties, ":value"),
				(party_slot_eq, ":value", slot_party_type, 12),
				(party_get_slot, ":value_production_sources_end", ":value", slot_production_sources_end),
				(party_get_num_companion_stacks, ":num_companion_stacks_value", ":value"),
				(assign, ":value_2", 1),
				(assign, ":value_3", 0),
				(try_for_range, ":number", 0, ":num_companion_stacks_value"),
					(party_stack_get_troop_id, ":party_stack_troop_id_value_number", ":value", ":number"),
					(eq, ":party_stack_troop_id_value_number", "trp_dplmc_recruiter"),
					(assign, ":value_2", 0),
				(try_end),
				(try_begin),
					(party_get_battle_opponent, ":battle_opponent_value", ":value"),
					(lt, ":battle_opponent_value", 0),
					(eq, ":value_2", 1),
					(party_get_slot, ":value_234", ":value", 234),
					(str_store_party_name_link, 13, ":value_234"),
					(assign, reg10, ":value_production_sources_end"),
					(display_log_message, "@Your recruiter who was commissioned to recruit {reg10} recruits to {s13} has been defeated!", 0x00ff0000),
					(remove_party, ":value"),
					(assign, ":value_3", 1),
				(try_end),
				(try_begin),
					(eq, ":value_3", 0),
					(party_get_slot, ":value_234", ":value", 234),
					(store_faction_of_party, ":faction_of_party_value_234", ":value_234"),
					(neq, ":faction_of_party_value_234", "$players_kingdom"),
					(str_store_party_name_link, 13, ":value_234"),
					(assign, reg10, ":value_production_sources_end"),
					(display_log_message, "@{s13} has been taken by the enemy and your recruiter who was commissioned to recruit {reg10} recruits vanished  without a trace!", 0x00ff0000),
					(remove_party, ":value"),
					(assign, ":value_3", 1),
				(try_end),
				(eq, ":value_3", 0),
				(party_get_num_companions, ":num_companions_value", ":value"),
				(val_sub, ":num_companions_value", 1),
				(party_get_slot, ":value_236", ":value", 236),
				(lt, ":num_companions_value", ":value_production_sources_end"),
				(try_begin),
					(get_party_ai_object, ":party_ai_object_value", ":value"),
					(get_party_ai_behavior, ":party_ai_behavior_value", ":value"),
					(try_begin),
						(neq, ":party_ai_behavior_value", 0),
						(neq, ":party_ai_object_value", -1),
						(party_set_slot, ":party_ai_object_value", 235, 0),
					(try_end),
					(assign, ":value_4", 999999),
					(assign, ":value_5", -1),
					(try_for_range, ":party", "p_village_1", "p_salt_mine"),
						(store_distance_to_party_from_party, ":distance_to_party_from_party_value_party", ":value", ":party"),
						(lt, ":distance_to_party_from_party_value_party", ":value_4"),
						(try_begin),
							(store_faction_of_party, ":faction_of_party_party", ":party"),
							(assign, ":value_6", 100),
							(try_begin),
								(neq, ":faction_of_party_party", "$players_kingdom"),
								(store_relation, ":value_6", "$players_kingdom", ":faction_of_party_party"),
							(try_end),
							(ge, ":value_6", 0),
							(party_get_slot, ":party_center_player_relation", ":party", slot_center_player_relation),
							(ge, ":party_center_player_relation", 0),
							(party_get_slot, ":party_center_volunteer_troop_amount", ":party", slot_center_volunteer_troop_amount),
							(gt, ":party_center_volunteer_troop_amount", 0),
							(party_get_slot, ":party_center_original_faction", ":party", slot_center_original_faction),
							(assign, ":value_7", 1),
							(try_begin),
								(eq, ":value_236", -1),
								(assign, ":value_7", 0),
							(else_try),
								(eq, ":party_center_original_faction", ":value_236"),
								(assign, ":value_7", 0),
							(try_end),
							(neq, ":value_7", 1),
							(neg|party_slot_eq, ":party", slot_village_state, 2),
							(neg|party_slot_eq, ":party", slot_village_state, 1),
							(neg|party_slot_ge, ":party", 39, 1),
							(neg|party_slot_eq, ":party", 235, 1),
							(assign, ":value_4", ":distance_to_party_from_party_value_party"),
							(assign, ":value_5", ":party"),
						(try_end),
					(try_end),
					(gt, ":value_5", -1),
					(party_set_ai_behavior, ":value", 1),
					(party_set_ai_object, ":value", ":value_5"),
					(party_set_slot, ":value", slot_party_ai_object, ":value_5"),
					(party_set_slot, ":value_5", 235, 1),
				(try_end),
				(party_get_slot, ":value_ai_object", ":value", slot_party_ai_object),
				(gt, ":value_ai_object", -1),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_value_value_ai_object", ":value", ":value_ai_object"),
				(try_begin),
					(store_faction_of_party, ":faction_of_party_value_ai_object", ":value_ai_object"),
					(assign, ":value_6", 100),
					(try_begin),
						(neq, ":faction_of_party_value_ai_object", "$players_kingdom"),
						(store_relation, ":value_6", "$players_kingdom", ":faction_of_party_value_ai_object"),
					(try_end),
					(ge, ":value_6", 0),
					(party_get_slot, ":value_ai_object_center_player_relation", ":value_ai_object", slot_center_player_relation),
					(ge, ":value_ai_object_center_player_relation", 0),
					(party_get_slot, ":value_ai_object_center_original_faction", ":value_ai_object", slot_center_original_faction),
					(assign, ":value_7", 1),
					(try_begin),
						(eq, ":value_236", -1),
						(assign, ":value_7", 0),
					(else_try),
						(eq, ":value_ai_object_center_original_faction", ":value_236"),
						(assign, ":value_7", 0),
					(try_end),
					(neq, ":value_7", 1),
					(neg|party_slot_eq, ":value_ai_object", slot_village_state, 2),
					(neg|party_slot_eq, ":value_ai_object", slot_village_state, 1),
					(neg|party_slot_ge, ":value_ai_object", 39, 1),
					(le, ":distance_to_party_from_party_value_value_ai_object", 0),
					(party_get_slot, ":value_ai_object_center_volunteer_troop_amount", ":value_ai_object", slot_center_volunteer_troop_amount),
					(party_get_slot, ":value_ai_object_center_volunteer_troop_type", ":value_ai_object", slot_center_volunteer_troop_type),
					(assign, ":var_32", ":value_production_sources_end"),
					(val_sub, ":var_32", ":num_companions_value"),
					(try_begin),
						(gt, ":value_ai_object_center_volunteer_troop_amount", ":var_32"),
						(assign, ":var_33", ":value_ai_object_center_volunteer_troop_amount"),
						(val_sub, ":var_33", ":var_32"),
						(assign, ":var_34", ":value_ai_object_center_volunteer_troop_amount"),
						(val_sub, ":var_34", ":var_33"),
						(assign, ":var_35", ":value_ai_object_center_volunteer_troop_amount"),
						(val_sub, ":var_35", ":var_34"),
						(party_set_slot, ":value_ai_object", slot_center_volunteer_troop_amount, ":var_35"),
						(party_add_members, ":value", ":value_ai_object_center_volunteer_troop_type", ":var_34"),
						(party_set_ai_behavior, ":value", 0),
						(party_set_slot, ":value_ai_object", 235, 0),
					(else_try),
						(le, ":value_ai_object_center_volunteer_troop_amount", ":var_32"),
						(gt, ":value_ai_object_center_volunteer_troop_amount", 0),
						(party_set_slot, ":value_ai_object", slot_center_volunteer_troop_amount, -1),
						(party_add_members, ":value", ":value_ai_object_center_volunteer_troop_type", ":value_ai_object_center_volunteer_troop_amount"),
						(party_set_ai_behavior, ":value", 0),
						(party_set_slot, ":value_ai_object", 235, 0),
					(else_try),
						(le, ":value_ai_object_center_volunteer_troop_amount", 0),
						(party_set_ai_behavior, ":value", 0),
						(party_set_slot, ":value_ai_object", 235, 0),
					(else_try),
						(display_message, "@ERROR IN THE RECRUITER KIT SIMPLE TRIGGERS!", 0x00ff2222),
						(party_set_slot, ":value_ai_object", 235, 0),
					(try_end),
				(try_end),
			(try_end),
			(try_for_parties, ":value"),
				(party_slot_eq, ":value", slot_party_type, 12),
				(party_get_num_companions, ":num_companions_value", ":value"),
				(val_sub, ":num_companions_value", 1),
				(party_get_slot, ":value_production_sources_end", ":value", slot_production_sources_end),
				(eq, ":num_companions_value", ":value_production_sources_end"),
				(party_get_slot, ":value_234", ":value", 234),
				(try_begin),
					(neg|party_slot_eq, ":value", slot_party_ai_object, ":value_234"),
					(party_set_slot, ":value", slot_party_ai_object, ":value_234"),
					(party_set_ai_behavior, ":value", 1),
					(party_set_ai_object, ":value", ":value_234"),
				(try_end),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_value_value_234", ":value", ":value_234"),
				(try_begin),
					(le, ":distance_to_party_from_party_value_value_234", 0),
					(party_get_num_companion_stacks, ":num_companion_stacks_value", ":value"),
					(try_for_range, ":number", 1, ":num_companion_stacks_value"),
						(party_stack_get_size, ":party_stack_size_value_number", ":value", ":number"),
						(party_stack_get_troop_id, ":party_stack_troop_id_value_number", ":value", ":number"),
						(party_add_members, ":value_234", ":party_stack_troop_id_value_number", ":party_stack_size_value_number"),
					(try_end),
					(str_store_party_name_link, 13, ":value_234"),
					(assign, reg10, ":num_companions_value"),
					(display_log_message, "@A recruiter has brought {reg10} recruits to {s13}.", 0x0000ff00),
					(remove_party, ":value"),
				(try_end),
			(try_end)
		]),

	(12.0,
		[
			(try_for_range, ":party", "p_village_1", "p_salt_mine"),
				(party_set_slot, ":party", 235, 0),
			(try_end)
		]),

	(0.5,
		[
			(eq, "$g_player_chancellor", "trp_dplmc_chancellor"),
			(assign, ":var_1", reg0),
			(assign, ":var_2", reg1),
			(game_get_reduce_campaign_ai, ":game_reduce_campaign_ai"),
			(try_for_parties, ":var_4"),
				(party_slot_eq, ":var_4", slot_party_type, 21),
				(party_is_active, ":var_4"),
				(party_get_slot, ":var_4_ai_object", ":var_4", slot_party_ai_object),
				(party_get_slot, ":var_4_263", ":var_4", 263),
				(try_begin),
					(party_is_active, ":var_4_ai_object"),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_var_4_var_4_ai_object", ":var_4", ":var_4_ai_object"),
					(str_store_party_name, 14, ":var_4"),
					(str_store_party_name, 15, ":var_4_ai_object"),
					(try_begin),
						(eq, "$cheat_mode", 1),
						(assign, reg0, ":distance_to_party_from_party_var_4_var_4_ai_object"),
						(display_message, "@Distance between {s14} and {s15}: {reg0}"),
					(try_end),
					(try_begin),
						(le, ":distance_to_party_from_party_var_4_var_4_ai_object", 1),
						(party_get_slot, ":var_4_300", ":var_4", 300),
						(str_store_item_name, 12, ":var_4_300"),
						(try_begin),
							(gt, ":var_4_263", 0),
							(str_store_troop_name, 13, ":var_4_263"),
						(else_try),
							(str_store_party_name, 13, ":var_4_ai_object"),
						(try_end),
						(display_log_message, "@Your caravan has brought {s12} to {s13}.", 0x0000ff00),
						(assign, ":value", 0),
						(store_faction_of_party, ":faction_of_party_var_4_ai_object", ":var_4_ai_object"),
						(try_begin),
							(gt, ":var_4_263", 0),
							(faction_slot_eq, ":faction_of_party_var_4_ai_object", slot_faction_leader, ":var_4_263"),
							(try_begin),
								(eq, ":var_4_300", "itm_trade_wine"),
								(assign, ":value", 1),
							(else_try),
								(eq, ":var_4_300", "itm_trade_oil"),
								(assign, ":value", 2),
							(try_end),
						(else_try),
							(store_random_in_range, ":random_in_range_1_3", 1, 3),
							(try_begin),
								(eq, ":var_4_300", "itm_trade_ale"),
								(val_add, ":value", ":random_in_range_1_3"),
							(else_try),
								(eq, ":var_4_300", "itm_trade_wine"),
								(store_add, ":value", 1, ":random_in_range_1_3"),
							(else_try),
								(eq, ":var_4_300", "itm_trade_oil"),
								(store_add, ":value", 2, ":random_in_range_1_3"),
							(else_try),
								(eq, ":var_4_300", "itm_trade_raw_dyes"),
								(val_add, ":value", 1),
							(else_try),
								(eq, ":var_4_300", "itm_trade_raw_silk"),
								(val_add, ":value", 2),
							(else_try),
								(eq, ":var_4_300", "itm_trade_velvet"),
								(val_add, ":value", 4),
							(else_try),
								(eq, ":var_4_300", "itm_trade_smoked_fish"),
								(try_begin),
									(party_slot_eq, ":var_4_ai_object", slot_party_type, 4),
									(val_add, ":value", 1),
								(try_end),
							(else_try),
								(eq, ":var_4_300", "itm_trade_cheese"),
								(val_add, ":value", 1),
								(try_begin),
									(party_slot_eq, ":var_4_ai_object", slot_party_type, 4),
									(val_add, ":value", 1),
								(try_end),
							(else_try),
								(eq, ":var_4_300", "itm_trade_honey"),
								(val_add, ":value", 2),
								(try_begin),
									(party_slot_eq, ":var_4_ai_object", slot_party_type, 4),
									(val_add, ":value", 2),
								(try_end),
							(try_end),
						(try_end),
						(try_begin),
							(this_or_next|eq, ":faction_of_party_var_4_ai_object", "fac_player_supporters_faction"),
							(eq, ":faction_of_party_var_4_ai_object", "$players_kingdom"),
							(val_add, ":value", 1),
						(try_end),
						(store_item_value, ":item_value_var_4_300", ":var_4_300"),
						(party_get_slot, ":var_4_production_sources_end", ":var_4", slot_production_sources_end),
						(try_begin),
							(gt, ":var_4_production_sources_end", 0),
							(val_mul, ":item_value_var_4_300", ":var_4_production_sources_end"),
						(else_try),
							(this_or_next|is_between, ":var_4_263", "trp_knight_1_1_wife", "trp_heroes_end"),
							(neg|is_between, ":var_4_300", "itm_trade_spice", "itm_trade_dummy01"),
						(else_try),
							(is_between, ":var_4_263", "trp_npc1", "trp_knight_1_1_wife"),
							(val_mul, ":item_value_var_4_300", 150),
						(else_try),
							(is_between, ":var_4_ai_object", "p_town_1", "p_salt_mine"),
							(val_mul, ":item_value_var_4_300", 300),
						(try_end),
						(assign, ":var_4_production_sources_end", 100),
						(try_begin),
							(neg|is_between, ":var_4_300", "itm_trade_spice", "itm_trade_dummy01"),
							(try_begin),
								(this_or_next|gt, ":var_4_263", 0),
								(party_slot_eq, ":var_4_ai_object", slot_party_type, 3),
								(assign, ":var_4_production_sources_end", 115),
							(else_try),
								(assign, ":var_4_production_sources_end", 130),
							(try_end),
						(else_try),
							(gt, ":var_4_263", 0),
							(assign, ":var_14", 0),
							(assign, ":var_15", 0),
							(assign, ":var_16", 0),
							(assign, ":var_17", 0),
							(assign, ":var_18", 0),
							(try_for_range, ":party", "p_town_1", "p_castle_1"),
								(call_script, "script_dplmc_get_item_buy_price_factor", ":var_4_300", ":party", -2, -2),
								(val_add, ":var_14", reg0),
								(store_faction_of_party, ":faction_of_party_party", ":party"),
								(eq, ":faction_of_party_party", ":faction_of_party_var_4_ai_object"),
								(val_add, ":var_15", reg0),
								(val_add, ":var_16", 1),
								(party_slot_eq, ":party", slot_town_lord, ":var_4_263"),
								(val_add, ":var_17", reg0),
								(val_add, ":var_18", 1),
							(try_end),
							(try_begin),
								(eq, ":var_18", 0),
								(try_for_range, ":party", "p_village_1", "p_salt_mine"),
									(try_begin),
										(party_slot_eq, ":party", slot_town_lord, ":var_4_263"),
										(call_script, "script_dplmc_get_item_buy_price_factor", ":var_4_300", ":party", -2, -2),
										(val_add, ":var_16", reg0),
										(val_add, ":var_18", 1),
									(try_end),
									(try_begin),
										(party_get_slot, reg1, ":party", slot_village_bound_center),
										(gt, reg1, 0),
										(party_slot_eq, reg1, slot_party_type, 2),
										(party_slot_eq, reg1, slot_town_lord, ":var_4_263"),
										(call_script, "script_dplmc_get_item_buy_price_factor", ":var_4_300", ":party", -2, -2),
										(val_add, ":var_16", reg0),
										(val_add, ":var_18", 1),
									(try_end),
								(try_end),
							(try_end),
							(try_begin),
								(gt, ":var_18", 0),
								(store_div, ":var_4_production_sources_end", ":var_17", ":var_18"),
							(else_try),
								(gt, ":var_16", 0),
								(val_mul, ":var_15", 130),
								(val_div, ":var_15", 115),
								(store_div, ":var_4_production_sources_end", ":var_15", ":var_16"),
							(else_try),
								(gt, "p_castle_1", "p_town_1"),
								(store_sub, reg1, "p_castle_1", "p_town_1"),
								(val_mul, ":var_14", 130),
								(val_div, ":var_14", 115),
								(store_div, ":var_4_production_sources_end", ":var_14", reg1),
							(try_end),
						(else_try),
							(gt, ":var_4_ai_object", 0),
							(call_script, "script_dplmc_get_item_buy_price_factor", ":var_4_300", ":party", -2, -2),
							(assign, ":var_4_production_sources_end", reg0),
						(else_try),
							(assign, ":var_4_production_sources_end", 115),
						(try_end),
						(try_begin),
							(ge, "$cheat_mode", 1),
							(assign, reg0, ":var_4_production_sources_end"),
							(store_mul, reg1, ":item_value_var_4_300", ":var_4_production_sources_end"),
							(val_add, reg1, 50),
							(val_div, reg1, 100),
							(val_add, reg1, 50),
							(display_message, "@{!} Gift price factor {reg0}/100, effective value {reg1}"),
						(try_end),
						(val_mul, ":item_value_var_4_300", ":var_4_production_sources_end"),
						(val_add, ":item_value_var_4_300", 50),
						(val_div, ":item_value_var_4_300", 100),
						(val_add, ":item_value_var_4_300", 50),
						(store_random_in_range, ":random_in_range_1_3", 0, 1000),
						(assign, reg0, ":item_value_var_4_300"),
						(val_add, ":item_value_var_4_300", ":random_in_range_1_3"),
						(val_div, ":item_value_var_4_300", 1000),
						(try_begin),
							(eq, ":game_reduce_campaign_ai", 0),
							(val_min, ":value", ":item_value_var_4_300"),
							(try_begin),
								(eq, ":value", 0),
								(store_random_in_range, ":random_in_range_1_3", 0, 1000),
								(lt, ":random_in_range_1_3", reg0),
								(assign, ":value", 1),
							(try_end),
						(else_try),
							(eq, ":game_reduce_campaign_ai", 1),
							(lt, ":item_value_var_4_300", ":value"),
							(val_add, ":value", ":item_value_var_4_300"),
							(val_add, ":value", 1),
							(val_div, ":value", 2),
						(else_try),
							(eq, ":game_reduce_campaign_ai", 2),
						(try_end),
						(val_max, ":item_value_var_4_300", 1),
						(val_min, ":value", ":item_value_var_4_300"),
						(try_begin),
							(lt, ":value", 1),
							(try_begin),
								(gt, ":var_4_263", 0),
								(display_message, "@{s13} is unimpressed by your paltry gift."),
							(else_try),
								(display_message, "@The people of {s13} are unimpressed by your paltry gift."),
							(try_end),
						(else_try),
							(gt, ":var_4_263", 0),
							(call_script, "script_change_player_relation_with_troop", ":var_4_263", ":value"),
						(else_try),
							(call_script, "script_change_player_relation_with_center", ":var_4_ai_object", ":value"),
						(try_end),
						(remove_party, ":var_4"),
					(try_end),
				(else_try),
					(display_log_message, "@Your caravan has lost it's way and gave up your mission!", 0x00ff0000),
					(remove_party, ":var_4"),
				(try_end),
			(try_end),
			(assign, reg0, ":var_1"),
			(assign, reg1, ":var_2")
		]),

	(0.5,
		[
			(try_for_parties, ":var_1"),
				(party_slot_eq, ":var_1", slot_party_type, 8),
				(party_get_slot, ":var_1_ai_object", ":var_1", slot_party_ai_object),
				(party_get_slot, ":var_1_263", ":var_1", 263),
				(try_begin),
					(party_is_active, ":var_1_ai_object"),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_var_1_ai_object", ":var_1", ":var_1_ai_object"),
					(str_store_party_name, 14, ":var_1"),
					(str_store_party_name, 15, ":var_1_ai_object"),
					(try_begin),
						(eq, "$cheat_mode", 1),
						(assign, reg0, ":distance_to_party_from_party_var_1_var_1_ai_object"),
						(display_message, "@Distance between {s14} and {s15}: {reg0}"),
					(try_end),
					(try_begin),
						(le, ":distance_to_party_from_party_var_1_var_1_ai_object", 1),
						(try_begin),
							(eq, ":var_1_ai_object", "p_main_party"),
							(party_get_slot, ":var_1_263_2", ":var_1", 263),
							(party_get_slot, ":var_1_300", ":var_1", 300),
							(call_script, "script_add_notification_menu", "mnu_dplmc_messenger", ":var_1_263_2", ":var_1_300"),
							(remove_party, ":var_1"),
						(else_try),
							(party_slot_eq, ":var_1_ai_object", slot_party_type, 7),
							(party_get_slot, ":var_1_300_2", ":var_1", 300),
							(try_begin),
								(eq, ":var_1_300_2", -1),
								(remove_party, ":var_1_ai_object"),
							(else_try),
								(eq, ":var_1_300_2", 14),
								(str_store_party_name, 6, ":var_1_263"),
								(party_set_name, ":var_1_ai_object", "@Transfer to {s6}"),
								(party_set_ai_behavior, ":var_1_ai_object", 1),
								(party_set_ai_object, ":var_1_ai_object", ":var_1_263"),
								(party_set_slot, ":var_1_ai_object", slot_party_ai_object, ":var_1_263"),
								(party_set_slot, ":var_1_ai_object", slot_party_ai_state, 14),
								(party_set_aggressiveness, ":var_1_ai_object", 0),
								(party_set_courage, ":var_1_ai_object", 3),
								(party_set_ai_initiative, ":var_1_ai_object", 100),
							(else_try),
								(str_store_party_name, 6, ":var_1_263"),
								(party_set_name, ":var_1_ai_object", "@{s6} patrol"),
								(party_set_ai_behavior, ":var_1_ai_object", 1),
								(party_set_ai_object, ":var_1_ai_object", ":var_1_263"),
								(party_set_slot, ":var_1_ai_object", slot_party_ai_object, ":var_1_263"),
								(party_set_slot, ":var_1_ai_object", 262, ":var_1_300_2"),
							(try_end),
							(remove_party, ":var_1"),
						(else_try),
							(party_stack_get_troop_id, ":var_1_263_2", ":var_1_ai_object", 0),
							(str_store_troop_name, 13, ":var_1_263_2"),
							(try_begin),
								(eq, "$cheat_mode", 1),
								(display_log_message, "@Your messenger reached {s13}.", 0x0000ff00),
								(assign, "$g_talk_troop", ":var_1_263_2"),
							(try_end),
							(party_get_slot, ":var_1_300_2", ":var_1", 300),
							(assign, ":var_1_300", 0),
							(try_begin),
								(party_set_slot, ":var_1_ai_object", slot_party_commander_party, "p_main_party"),
								(store_current_hours, ":current_hours"),
								(party_set_slot, ":var_1_ai_object", 261, "trp_kingdom_heroes_including_player_begin"),
								(party_set_slot, ":var_1_ai_object", 263, ":var_1_263"),
								(party_set_slot, ":var_1_ai_object", 262, ":var_1_300_2"),
								(party_set_slot, ":var_1_ai_object", 264, ":current_hours"),
								(call_script, "script_npc_decision_checklist_party_ai", ":var_1_263_2"),
								(try_begin),
									(eq, "$cheat_mode", 1),
									(display_message, "@{s14}"),
								(try_end),
								(try_begin),
									(eq, reg0, ":var_1_300_2"),
									(eq, reg1, ":var_1_263"),
									(assign, ":var_1_300", 1),
								(try_end),
								(call_script, "script_party_set_ai_state", ":var_1_ai_object", reg0, reg1),
							(try_end),
							(party_set_ai_behavior, ":var_1", 1),
							(party_set_ai_object, ":var_1", "p_main_party"),
							(party_set_slot, ":var_1", slot_party_ai_object, "p_main_party"),
							(party_set_slot, ":var_1", 263, ":var_1_263_2"),
							(party_set_slot, ":var_1", 300, ":var_1_300"),
						(try_end),
					(try_end),
				(else_try),
					(display_log_message, "@Your messenger has lost it's way and gave up your mission!", 0x00ff0000),
					(remove_party, ":var_1"),
				(try_end),
			(try_end)
		]),

	(24.0,
		[
			(eq, "$g_player_constable", "trp_dplmc_constable"),
			(is_between, "$g_constable_training_center", "p_town_1", "p_village_1"),
			(party_slot_eq, "$g_constable_training_center", slot_town_lord, "trp_player"),
			(store_skill_level, ":skill_level_17_player", 17, "trp_player"),
			(val_add, ":skill_level_17_player", 4),
			(store_div, ":value", ":skill_level_17_player", 2),
			(try_for_parties, ":var_3"),
				(party_slot_eq, ":var_3", slot_town_lord, "trp_player"),
				(eq, ":var_3", "$g_constable_training_center"),
				(party_get_num_companion_stacks, ":num_companion_stacks_var_3", ":var_3"),
				(assign, ":value_2", 0),
				(try_for_range, ":number", 0, ":num_companion_stacks_var_3"),
					(eq, ":value_2", 0),
					(party_stack_get_troop_id, ":party_stack_troop_id_var_3_number", ":var_3", ":number"),
					(neg|troop_is_hero, ":party_stack_troop_id_var_3_number"),
					(troop_get_upgrade_troop, ":upgrade_troop_party_stack_troop_id_var_3_number_g_constable_training_type", ":party_stack_troop_id_var_3_number", "$g_constable_training_type"),
					(try_begin),
						(le, ":upgrade_troop_party_stack_troop_id_var_3_number_g_constable_training_type", 0),
						(troop_get_upgrade_troop, ":upgrade_troop_party_stack_troop_id_var_3_number_g_constable_training_type", ":party_stack_troop_id_var_3_number", 0),
					(try_end),
					(gt, ":upgrade_troop_party_stack_troop_id_var_3_number_g_constable_training_type", 0),
					(store_character_level, ":character_level_party_stack_troop_id_var_3_number", ":party_stack_troop_id_var_3_number"),
					(assign, ":value_3", 6),
					(try_begin),
						(eq, "$g_constable_training_improved", 1),
						(assign, ":value_3", 10),
						(try_begin),
							(le, ":character_level_party_stack_troop_id_var_3_number", 6),
							(val_add, ":value", 2),
						(try_end),
					(try_end),
					(le, ":character_level_party_stack_troop_id_var_3_number", ":value_3"),
					(party_count_members_of_type, ":var_11", ":var_3", ":party_stack_troop_id_var_3_number"),
					(val_min, ":value", ":var_11"),
					(call_script, "script_game_get_upgrade_cost", ":party_stack_troop_id_var_3_number"),
					(store_mul, ":value_4", ":value", reg0),
					(try_begin),
						(eq, "$g_constable_training_improved", 1),
						(val_add, ":value_4", 10),
					(try_end),
					(store_troop_gold, ":troop_gold_household_possessions", "trp_household_possessions"),
					(try_begin),
						(lt, ":troop_gold_household_possessions", ":value_4"),
						(store_div, ":value_5", ":troop_gold_household_possessions", reg0),
						(val_min, ":value", ":value_5"),
						(store_mul, ":value_4", ":value", reg0),
						(display_message, "@Not enough money in treasury to upgrade troops."),
					(try_end),
					(party_remove_members, ":var_3", ":party_stack_troop_id_var_3_number", ":value"),
					(party_add_members, ":var_3", ":upgrade_troop_party_stack_troop_id_var_3_number_g_constable_training_type", ":value"),
					(call_script, "script_dplmc_withdraw_from_treasury", ":value_4"),
					(assign, reg5, ":value"),
					(str_store_troop_name, 6, ":party_stack_troop_id_var_3_number"),
					(str_store_troop_name, 7, ":upgrade_troop_party_stack_troop_id_var_3_number_g_constable_training_type"),
					(str_store_party_name, 8, ":var_3"),
					(display_message, "@Your constable upgraded {reg5} {s6} to {s7} in {s8}"),
					(assign, ":value_2", 1),
				(try_end),
			(try_end)
		]),

	(168.0,
		[
			(try_for_parties, ":var_1"),
				(party_slot_eq, ":var_1", slot_party_type, 7),
				(party_get_slot, ":var_1_ai_state", ":var_1", slot_party_ai_state),
				(eq, ":var_1_ai_state", 4),
				(try_begin),
					(party_slot_eq, ":var_1", 300, "trp_player"),
					(assign, ":var_3", 0),
					(party_get_num_companion_stacks, ":num_companion_stacks_var_1", ":var_1"),
					(try_for_range, ":number", 0, ":num_companion_stacks_var_1"),
						(party_stack_get_troop_id, ":party_stack_troop_id_var_1_number", ":var_1", ":number"),
						(party_stack_get_size, ":party_stack_size_var_1_number", ":var_1", ":number"),
						(call_script, "script_game_get_troop_wage", ":party_stack_troop_id_var_1_number", 0),
						(val_mul, reg0, ":party_stack_size_var_1_number"),
						(val_add, ":var_3", reg0),
					(try_end),
					(store_troop_gold, ":troop_gold_household_possessions", "trp_household_possessions"),
					(try_begin),
						(lt, ":troop_gold_household_possessions", ":var_3"),
						(party_get_slot, ":var_1_ai_object", ":var_1", slot_party_ai_object),
						(str_store_party_name, 6, ":var_1_ai_object"),
						(display_log_message, "@Your soldiers patrolling {s6} disbanded because you can't pay the wages!", 0x00ff0000),
						(remove_party, ":var_1"),
					(try_end),
				(try_end),
			(try_end)
		]),

	(168.0,
		[
			(try_for_range, ":faction", "fac_kingdom_1", "fac_kingdoms_end"),
				(assign, ":var_2", 0),
				(try_for_range, ":party", "p_town_1", "p_castle_1"),
					(store_faction_of_party, ":faction_of_party_party", ":party"),
					(eq, ":faction_of_party_party", ":faction"),
					(val_add, ":var_2", 1),
				(try_end),
				(assign, ":var_5", 0),
				(try_for_parties, ":value"),
					(party_slot_eq, ":value", slot_party_type, 7),
					(store_faction_of_party, ":faction_of_party_value", ":value"),
					(eq, ":faction_of_party_value", ":faction"),
					(neg|party_slot_eq, ":value", 300, "trp_player"),
					(try_begin),
						(ge, ":var_5", ":var_2"),
						(try_begin),
							(ge, "$cheat_mode", 1),
							(str_store_faction_name, 4, ":faction"),
							(str_store_party_name, 5, ":value"),
							(display_message, "@{!}DEBUG - Removed {s5} because {s4} cannot support that many patrols"),
						(try_end),
						(remove_party, ":value"),
					(else_try),
						(val_add, ":var_5", 1),
					(try_end),
				(try_end),
				(try_begin),
					(lt, ":var_5", ":var_2"),
					(store_random_in_range, ":random_in_range_0_10", 0, 10),
					(le, ":random_in_range_0_10", 3),
					(assign, ":value_2", -1),
					(assign, ":value_3", -1),
					(try_for_range, ":party", "p_town_1", "p_castle_1"),
						(store_faction_of_party, ":faction_of_party_party", ":party"),
						(eq, ":faction_of_party_party", ":faction"),
						(eq, ":value_2", -1),
						(eq, ":value_3", -1),
						(assign, ":value_4", 1),
						(try_for_parties, ":value"),
							(party_slot_eq, ":value", slot_party_type, 7),
							(store_faction_of_party, ":faction_of_party_value", ":value"),
							(eq, ":faction_of_party_value", ":faction"),
							(party_get_slot, ":value_ai_object", ":value", slot_party_ai_object),
							(eq, ":value_ai_object", ":party"),
							(assign, ":value_4", 0),
						(try_end),
						(eq, ":value_4", 1),
						(call_script, "script_cf_select_random_town_with_faction", ":faction"),
						(neq, reg0, -1),
						(assign, ":value_2", reg0),
						(assign, ":value_3", ":party"),
					(try_end),
					(try_begin),
						(neq, ":value_2", -1),
						(neq, ":value_3", -1),
						(store_random_in_range, ":random_in_range_0_3", 0, 3),
						(faction_get_slot, ":faction_leader", ":faction", slot_faction_leader),
						(call_script, "script_dplmc_send_patrol", ":value_2", ":value_3", ":random_in_range_0_3", ":faction", ":faction_leader"),
					(try_end),
				(try_end),
			(try_end)
		]),

	(2.0,
		[
			(try_for_parties, ":var_1"),
				(party_slot_eq, ":var_1", slot_party_type, 7),
				(call_script, "script_party_remove_all_prisoners", ":var_1"),
				(try_begin),
					(get_party_ai_behavior, ":party_ai_behavior_var_1", ":var_1"),
					(eq, ":party_ai_behavior_var_1", 1),
					(party_get_slot, ":var_1_ai_object", ":var_1", slot_party_ai_object),
					(try_begin),
						(gt, ":var_1_ai_object", 0),
						(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_var_1_ai_object", ":var_1", ":var_1_ai_object"),
						(le, ":distance_to_party_from_party_var_1_var_1_ai_object", 5),
						(try_begin),
							(party_get_slot, ":var_1_ai_state", ":var_1", slot_party_ai_state),
							(eq, ":var_1_ai_state", 14),
							(try_begin),
								(le, ":distance_to_party_from_party_var_1_var_1_ai_object", 1),
								(call_script, "script_party_add_party", ":var_1_ai_object", ":var_1"),
								(remove_party, ":var_1"),
							(try_end),
						(else_try),
							(party_get_position, 1, ":var_1_ai_object"),
							(party_set_ai_behavior, ":var_1", 2),
							(party_set_ai_patrol_radius, ":var_1", 1),
							(party_set_ai_target_position, ":var_1", 1),
						(try_end),
					(else_try),
					(try_end),
				(try_end),
			(try_end)
		]),

	(0.2,
		[
			(try_for_parties, ":var_1"),
				(party_slot_eq, ":var_1", slot_party_type, 10),
				(try_begin),
					(get_party_ai_behavior, ":party_ai_behavior_var_1", ":var_1"),
					(this_or_next|eq, ":party_ai_behavior_var_1", 6),
					(eq, ":party_ai_behavior_var_1", 1),
					(party_get_slot, ":var_1_ai_object", ":var_1", slot_party_ai_object),
					(store_distance_to_party_from_party, ":distance_to_party_from_party_var_1_var_1_ai_object", ":var_1", ":var_1_ai_object"),
					(le, ":distance_to_party_from_party_var_1_var_1_ai_object", 1),
					(try_begin),
						(eq, ":var_1_ai_object", "p_main_party"),
						(party_get_slot, ":var_1_300", ":var_1", 300),
						(call_script, "script_add_notification_menu", "mnu_dplmc_scout", ":var_1_300", 0),
						(remove_party, ":var_1"),
					(else_try),
						(neq, ":var_1_ai_object", "p_main_party"),
						(party_get_slot, ":var_1_300_2", ":var_1", 300),
						(try_begin),
							(le, ":var_1_300_2", 100),
							(disable_party, ":var_1"),
							(val_add, ":var_1_300_2", 1),
							(party_set_slot, ":var_1", 300, ":var_1_300_2"),
							(try_begin),
								(store_random_in_range, ":random_in_range_0_1000", 0, 1000),
								(eq, ":random_in_range_0_1000", 0),
								(str_store_party_name, 11, ":var_1_ai_object"),
								(display_log_message, "@It is rumoured that a spy has been caught in {s11}.", 0x00ff0000),
								(remove_party, ":var_1"),
							(try_end),
						(else_try),
							(enable_party, ":var_1"),
							(party_set_ai_behavior, ":var_1", 1),
							(party_set_ai_object, ":var_1", "p_main_party"),
							(party_set_slot, ":var_1", slot_party_ai_object, "p_main_party"),
							(party_set_slot, ":var_1", 300, ":var_1_ai_object"),
						(try_end),
					(try_end),
				(try_end),
			(try_end)
		]),

	(720.0,
		[
			(assign, ":value", 0),
			(try_begin),
				(neq, "$players_kingdom", "fac_player_supporters_faction"),
				(is_between, "$players_kingdom", "fac_kingdom_1", "fac_kingdoms_end"),
				(call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
				(ge, reg0, 50),
				(assign, ":value", 1),
				(faction_get_slot, reg0, "$players_kingdom", 203),
				(faction_set_slot, "fac_player_supporters_faction", 203, reg0),
				(faction_get_slot, reg0, "$players_kingdom", 201),
				(faction_set_slot, "fac_player_supporters_faction", 201, reg0),
				(faction_get_slot, reg0, "$players_kingdom", 204),
				(faction_set_slot, "fac_player_supporters_faction", 204, reg0),
				(faction_get_slot, reg0, "$players_kingdom", 202),
				(faction_set_slot, "fac_player_supporters_faction", 202, reg0),
				(faction_get_slot, reg0, "$players_kingdom", 206),
				(faction_set_slot, "fac_player_supporters_faction", 206, reg0),
			(try_end),
			(try_for_range, ":faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
				(faction_slot_eq, ":faction", slot_faction_state, 0),
				(faction_get_slot, ":faction_201", ":faction", 201),
				(faction_get_slot, ":faction_202", ":faction", 202),
				(faction_get_slot, ":faction_204", ":faction", 204),
				(faction_get_slot, ":faction_203", ":faction", 203),
				(faction_get_slot, ":faction_206", ":faction", 206),
				(try_begin),
					(eq, "$cheat_mode", 1),
					(str_store_faction_name, 9, ":faction"),
					(assign, reg1, ":faction_201"),
					(display_message, "@{!}DEBUG - centralization {reg1}"),
					(assign, reg1, ":faction_202"),
					(display_message, "@{!}DEBUG - aristocracy {reg1}"),
					(assign, reg1, ":faction_204"),
					(display_message, "@{!}DEBUG - quality {reg1}"),
					(assign, reg1, ":faction_203"),
					(display_message, "@{!}DEBUG - serfdom {reg1}"),
					(assign, reg1, ":faction_206"),
					(display_message, "@{!}DEBUG - mercantilism {reg1}"),
				(try_end),
				(try_begin),
					(is_between, ":faction", "fac_kingdom_1", "fac_kingdoms_end"),
					(this_or_next|neq, ":faction", "$players_kingdom"),
					(eq, ":value", 0),
					(store_random_in_range, ":random_in_range_0_10", 0, 10),
					(try_begin),
						(is_between, ":random_in_range_0_10", 1, 6),
						(store_random_in_range, ":random_in_range_-1_2", -1, 2),
						(try_begin),
							(eq, "$cheat_mode", 1),
							(str_store_faction_name, 12, ":faction"),
							(assign, reg1, ":random_in_range_-1_2"),
							(assign, reg2, ":random_in_range_0_10"),
							(display_message, "@{!}DEBUG - changing {reg1} of {reg2} for {s12}"),
						(try_end),
						(try_begin),
							(eq, ":random_in_range_0_10", 1),
							(val_add, ":faction_201", ":random_in_range_-1_2"),
							(val_max, ":faction_201", -3),
							(val_min, ":faction_201", 3),
							(faction_set_slot, ":faction", 201, ":faction_201"),
						(else_try),
							(eq, ":random_in_range_0_10", 2),
							(val_add, ":faction_202", ":random_in_range_-1_2"),
							(val_max, ":faction_202", -3),
							(val_min, ":faction_202", 3),
							(faction_set_slot, ":faction", 202, ":faction_202"),
						(else_try),
							(eq, ":random_in_range_0_10", 3),
							(val_add, ":faction_204", ":random_in_range_-1_2"),
							(val_max, ":faction_204", -3),
							(val_min, ":faction_204", 3),
							(faction_set_slot, ":faction", 204, ":faction_204"),
						(else_try),
							(eq, ":random_in_range_0_10", 4),
							(val_add, ":faction_203", ":random_in_range_-1_2"),
							(val_max, ":faction_203", -3),
							(val_min, ":faction_203", 3),
							(faction_set_slot, ":faction", 203, ":faction_203"),
							(eq, ":random_in_range_0_10", 5),
							(val_add, ":faction_206", ":random_in_range_-1_2"),
							(val_clamp, ":faction_206", -3, 4),
							(faction_set_slot, ":faction", 206, ":faction_206"),
						(try_end),
					(try_end),
				(else_try),
					(store_sub, ":value_2", ":faction_202", ":faction_201"),
					(store_mul, ":value_3", ":faction_202", -1),
					(val_sub, ":value_3", ":faction_201"),
					(store_mul, ":value_4", ":faction_203", -1),
					(val_sub, ":value_3", ":faction_201"),
					(try_begin),
						(this_or_next|neq, ":value_4", 0),
						(this_or_next|neq, ":value_3", 0),
						(neq, ":value_2", 0),
						(try_begin),
							(eq, "$cheat_mode", 1),
							(str_store_faction_name, 9, ":faction"),
							(assign, reg1, ":value_2"),
							(display_message, "@{!}DEBUG - relation change =  {reg1} for {s9}"),
						(try_end),
						(try_for_range, ":troop", "trp_npc1", "trp_heroes_end"),
							(troop_slot_eq, ":troop", slot_troop_occupation, 2),
							(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
							(eq, ":faction", ":faction_of_troop_troop"),
							(faction_get_slot, ":faction_leader", ":faction", slot_faction_leader),
							(neq, ":troop", ":faction_leader"),
							(assign, ":value_5", ":value_2"),
							(try_begin),
								(troop_slot_eq, ":troop", slot_lord_reputation_type, 10),
								(assign, ":value_5", ":value_3"),
							(else_try),
								(troop_slot_eq, ":troop", slot_lord_reputation_type, 9),
								(assign, ":value_5", ":value_4"),
							(try_end),
							(assign, ":var_17", 0),
							(try_begin),
								(is_between, ":troop", "trp_npc1", "trp_kingdom_1_lord"),
								(troop_slot_eq, ":troop", slot_troop_kingsupport_state, 1),
								(try_begin),
									(troop_slot_eq, ":troop", slot_troop_kingsupport_argument, 5),
									(try_begin),
										(this_or_next|neg|faction_slot_ge, ":faction_of_troop_troop", 202, -1),
										(faction_slot_ge, ":faction_of_troop_troop", 201, 2),
										(val_sub, ":var_17", 1),
									(else_try),
										(this_or_next|faction_slot_ge, ":faction_of_troop_troop", 202, 2),
										(neg|faction_slot_ge, ":faction_of_troop_troop", 201, -2),
										(faction_slot_ge, ":faction_of_troop_troop", 202, -1),
										(val_add, ":var_17", 1),
									(try_end),
								(else_try),
									(troop_slot_eq, ":troop", slot_troop_kingsupport_argument, 2),
									(try_begin),
										(faction_slot_ge, ":faction_of_troop_troop", 203, 2),
										(val_sub, ":var_17", 1),
									(else_try),
										(neg|faction_slot_ge, ":faction_of_troop_troop", 203, 0),
										(store_add, ":value_6", ":faction_203", ":faction_202"),
										(lt, ":value_6", 0),
										(val_add, ":var_17", 1),
									(try_end),
								(try_end),
							(try_end),
							(try_begin),
								(troop_slot_eq, ":troop", slot_lord_recruitment_argument, 5),
								(this_or_next|neg|faction_slot_ge, ":faction_of_troop_troop", 202, -1),
								(faction_slot_ge, ":faction_of_troop_troop", 201, 2),
								(neg|troop_slot_eq, ":troop", slot_lord_reputation_type, 5),
								(neg|troop_slot_eq, ":troop", slot_lord_reputation_type, 7),
								(val_sub, ":var_17", 1),
							(else_try),
								(troop_slot_eq, ":troop", slot_lord_recruitment_argument, 2),
								(faction_slot_ge, ":faction_of_troop_troop", 203, 2),
								(neg|troop_slot_eq, ":troop", slot_lord_reputation_type, 2),
								(neg|troop_slot_eq, ":troop", slot_lord_reputation_type, 3),
								(neg|troop_slot_eq, ":troop", slot_lord_reputation_type, 5),
								(val_sub, ":var_17", 1),
							(try_end),
							(val_clamp, ":var_17", -1, 2),
							(val_add, ":value_5", ":var_17"),
							(neq, ":value_5", 0),
							(call_script, "script_change_player_relation_with_troop", ":troop", ":value_5"),
						(try_end),
					(try_end),
				(try_end),
			(try_end)
		]),

	(168.0,
		[
			(assign, ":var_1", reg0),
			(assign, ":var_2", reg1),
			(assign, ":var_3", reg4),
			(try_begin),
				(ge, "$g_dplmc_lord_recycling", 0),
				(assign, ":value", -1),
				(assign, ":value_2", -101),
				(assign, ":var_6", 0),
				(try_for_range, ":troop", "trp_knight_1_1", "trp_kingdom_1_pretender"),
					(troop_slot_eq, ":troop", slot_troop_occupation, 14),
					(store_faction_of_troop, ":faction_of_troop_troop", ":troop"),
					(this_or_next|eq, ":faction_of_troop_troop", -1),
					(this_or_next|eq, ":faction_of_troop_troop", "fac_commoners"),
					(eq, ":faction_of_troop_troop", "fac_outlaws"),
					(val_add, ":var_6", 1),
					(try_begin),
						(troop_get_slot, ":troop_original_faction", ":troop", slot_troop_original_faction),
						(is_between, ":troop_original_faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
						(faction_get_slot, ":troop_original_faction_leader", ":troop_original_faction", slot_faction_leader),
						(gt, ":troop_original_faction_leader", 0),
						(call_script, "script_troop_get_relation_with_troop", ":troop", ":troop_original_faction_leader"),
						(this_or_next|eq, ":value", -1),
						(gt, reg0, ":value_2"),
						(assign, ":value", ":troop"),
						(assign, ":value_2", reg0),
					(else_try),
						(eq, ":value", -1),
						(assign, ":value", ":troop"),
					(try_end),
				(try_end),
				(try_begin),
					(eq, ":value", -1),
					(try_begin),
						(ge, "$cheat_mode", 1),
						(display_message, "@{!}DEBUG - no eligible lords in exile"),
					(try_end),
				(else_try),
					(lt, ":var_6", 3),
					(store_random_in_range, ":random_in_range_0_256", 0, 256),
					(ge, ":random_in_range_0_256", 128),
					(try_begin),
						(ge, "$cheat_mode", 1),
						(assign, reg0, ":var_6"),
						(display_message, "@{!}DEBUG - {reg0} lords found in exile; randomly decided not to try to return anyone."),
					(try_end),
				(else_try),
					(neq, ":value", -1),
					(try_begin),
						(ge, "$cheat_mode", 1),
						(str_store_troop_name, 4, ":value"),
						(assign, reg0, ":value_2"),
						(assign, reg1, ":var_6"),
						(display_message, "@{!}DEBUG - {reg1} lords found in exile; {s4} chosen to return, score was {reg0}"),
					(try_end),
					(troop_get_slot, ":troop_original_faction", ":value", slot_troop_original_faction),
					(try_begin),
						(this_or_next|lt, ":value_2", -50),
						(this_or_next|neg|is_between, ":troop_original_faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
						(neg|faction_slot_eq, ":troop_original_faction", slot_faction_state, 0),
						(call_script, "script_lord_find_alternative_faction", ":value"),
						(assign, ":troop_original_faction", reg0),
					(try_end),
					(try_begin),
						(neg|is_between, ":troop_original_faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
						(ge, "$cheat_mode", 1),
						(str_store_troop_name, 4, ":value"),
						(display_message, "@{!}DEBUG - {s4} found no faction to return to!"),
					(try_end),
					(is_between, ":troop_original_faction", "fac_player_supporters_faction", "fac_kingdoms_end"),
					(assign, ":value_3", 0),
					(try_begin),
						(eq, ":troop_original_faction", "$players_kingdom"),
						(call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
						(ge, reg0, 50),
						(assign, ":value_3", 0),
						(try_for_range, ":troop_2", "trp_knight_1_1", "trp_kingdom_1_pretender"),
							(store_faction_of_troop, ":faction_of_troop_troop_2", ":troop_2"),
							(this_or_next|eq, ":faction_of_troop_troop_2", "fac_player_supporters_faction"),
							(eq, ":faction_of_troop_troop_2", "$players_kingdom"),
							(troop_slot_eq, ":troop_2", slot_troop_occupation, 0),
							(val_add, ":value_3", 1),
						(try_end),
						(gt, ":value_3", 1),
						(try_begin),
							(ge, "$cheat_mode", 1),
							(assign, reg0, ":value_3"),
							(display_message, "@{!}DEBUG - Not returning a lord to the player's kingdom, since there are already {reg0} lords waiting for their petitions to be heard."),
						(try_end),
					(else_try),
						(call_script, "script_dplmc_lord_return_from_exile", ":value", ":troop_original_faction"),
					(try_end),
				(try_end),
			(try_end),
			(assign, reg0, ":var_1"),
			(assign, reg1, ":var_2"),
			(assign, reg4, ":var_3"),
			(is_between, "$g_player_affiliated_troop", "trp_knight_1_1", "trp_heroes_end"),
			(assign, ":var_15", -101),
			(assign, ":var_16", 101),
			(assign, ":var_17", 0),
			(assign, ":var_18", 0),
			(assign, ":value_4", 0),
			(assign, ":value_5", 0),
			(try_for_range, ":troop_3", "trp_knight_1_1", "trp_heroes_end"),
				(call_script, "script_dplmc_is_affiliated_family_member", ":troop_3"),
				(gt, reg0, 0),
				(call_script, "script_troop_get_player_relation", ":troop_3"),
				(try_begin),
					(lt, reg0, 0),
					(val_add, ":var_18", 1),
					(le, reg0, ":var_16"),
					(assign, ":value_5", ":troop_3"),
				(else_try),
					(ge, reg0, 20),
					(val_add, ":var_17", 1),
					(gt, reg0, ":var_15"),
					(assign, ":value_4", ":troop_3"),
				(try_end),
				(val_max, ":var_15", reg0),
				(val_min, ":var_16", reg0),
			(try_end),
			(try_begin),
				(gt, ":var_16", -15),
				(assign, ":value_5", 0),
			(else_try),
				(gt, ":var_16", -20),
				(str_store_troop_name, 0, ":value_5"),
				(display_message, "@{s0} is grumbling against you.  Your affiliation could be jeopardized if this continues."),
				(str_clear, 0),
			(else_try),
				(neq, ":value_5", 0),
				(ge, ":var_17", ":var_18"),
				(store_add, reg0, ":var_16", ":var_15"),
				(ge, reg0, 0),
				(str_store_troop_name, 0, ":value_5"),
				(str_store_troop_name, 1, ":value_4"),
				(display_message, "@{s0} is grumbling against you, but with {s1}'s support you remain affiliated for now."),
				(str_clear, 0),
				(str_clear, 1),
				(assign, ":value_5", 0),
			(try_end),
			(try_begin),
				(eq, ":value_5", 0),
				(try_for_range, ":troop_3", "trp_knight_1_1", "trp_heroes_end"),
					(call_script, "script_dplmc_is_affiliated_family_member", ":troop_3"),
					(gt, reg0, 0),
					(try_begin),
						(troop_slot_ge, ":troop_3", 8, 0),
						(neg|troop_slot_ge, "trp_player", 8, 1),
						(neg|troop_is_wounded, "trp_player"),
						(call_script, "script_change_player_relation_with_troop", ":troop_3", -1),
					(else_try),
						(call_script, "script_change_player_relation_with_troop", ":troop_3", 1),
					(try_end),
				(try_end),
			(else_try),
				(call_script, "script_add_notification_menu", "mnu_dplmc_affiliate_end", ":value_5", 0),
				(call_script, "script_dplmc_affiliate_end", 1),
			(try_end),
			(assign, reg0, ":var_1"),
			(assign, reg1, ":var_2"),
			(assign, reg4, ":var_3")
		]),

	(2.0,
		[
			(assign, ":value", 0),
			(assign, ":value_2", 0),
			(try_for_range, ":party", "p_town_1", "p_salt_mine"),
				(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
				(eq, ":party_town_lord", "trp_player"),
				(try_begin),
					(is_between, ":party", "p_town_1", "p_village_1"),
					(assign, ":value", 1),
				(try_end),
				(assign, ":value_2", 1),
			(try_end),
			(try_begin),
				(eq, ":value", 0),
				(this_or_next|neq, "$g_player_constable", 0),
				(neq, "$g_player_chancellor", 0),
				(assign, "$g_player_constable", 0),
				(assign, "$g_player_chancellor", 0),
			(try_end),
			(try_begin),
				(eq, ":value_2", 0),
				(neq, "$g_player_chamberlain", 0),
				(assign, "$g_player_chamberlain", 0),
				(assign, ":var_5", reg0),
				(assign, ":var_6", reg1),
				(assign, ":value_3", 2),
				(assign, ":value_4", 3),
				(game_get_reduce_campaign_ai, ":game_reduce_campaign_ai"),
				(try_begin),
					(eq, ":game_reduce_campaign_ai", 0),
					(assign, ":value_3", 5),
					(assign, ":value_4", 6),
				(else_try),
					(eq, ":game_reduce_campaign_ai", 1),
					(assign, ":value_3", 2),
					(assign, ":value_4", 3),
				(else_try),
					(eq, ":game_reduce_campaign_ai", 2),
					(assign, ":value_3", 1),
					(assign, ":value_4", 2),
				(try_end),
				(store_troop_gold, ":troop_gold_household_possessions", "trp_household_possessions"),
				(try_begin),
					(gt, ":troop_gold_household_possessions", 0),
					(store_mul, ":value_5", ":troop_gold_household_possessions", ":value_3"),
					(val_div, ":value_5", ":value_4"),
					(val_mul, ":value_5", -1),
					(call_script, "script_dplmc_withdraw_from_treasury", ":value_5"),
					(assign, reg0, ":value_3"),
					(assign, reg1, ":value_4"),
					(display_message, "@Your last fief was captured and you lost {reg0}/{reg1} of your treasury"),
				(try_end),
				(assign, reg0, ":var_5"),
				(assign, reg1, ":var_6"),
			(try_end)
		]),

	(24.0,
		[
			(try_for_range, ":faction", "fac_kingdom_1", "fac_kingdoms_end"),
				(assign, ":value", 2),
				(try_for_range, ":faction_2", "fac_player_supporters_faction", "fac_kingdoms_end"),
					(neq, ":faction", ":faction_2"),
					(assign, ":value", 2),
					(assign, ":value_2", ":faction_2"),
					(try_begin),
						(eq, ":faction_2", "fac_player_supporters_faction"),
						(neq, ":faction", "$players_kingdom"),
						(assign, ":value_2", "$players_kingdom"),
					(else_try),
						(eq, ":faction_2", "$players_kingdom"),
						(assign, ":value_2", "fac_player_supporters_faction"),
					(try_end),
					(try_for_range, ":party", "p_town_1", "p_salt_mine"),
						(store_faction_of_party, ":faction_of_party_party", ":party"),
						(this_or_next|eq, ":faction_of_party_party", ":faction_2"),
						(eq, ":faction_of_party_party", ":value_2"),
						(party_slot_eq, ":party", slot_center_original_faction, ":faction"),
						(this_or_next|neq, ":faction", "$players_kingdom"),
						(this_or_next|neq, ":faction_2", "fac_player_supporters_faction"),
						(party_slot_ge, ":party", 402, 1),
						(val_sub, ":value", 1),
					(try_end),
					(try_for_range, ":faction_3", "fac_player_supporters_faction", "fac_kingdoms_end"),
						(call_script, "script_diplomacy_faction_get_diplomatic_status_with_faction", ":faction_2", ":faction_3"),
						(eq, reg0, -2),
						(call_script, "script_diplomacy_faction_get_diplomatic_status_with_faction", ":faction", ":faction_3"),
						(eq, reg0, -2),
						(val_add, ":value", 1),
					(try_end),
				(try_end),
				(store_add, ":value_3", ":faction_2", 160),
				(party_set_slot, ":faction", ":value_3", ":value"),
			(try_end)
		]),

	(0.0,
		[
			(party_get_slot, ":main_party_village_bound_center", "p_main_party", slot_village_bound_center),
			(eq, "$g_camp_mode", 1),
			(eq, ":main_party_village_bound_center", -1),
			(store_current_hours, ":current_hours"),
			(try_begin),
				(ge, ":current_hours", "$entrench_time"),
				(set_spawn_radius, 0),
				(spawn_around_party, "p_main_party", "pt_entrench"),
				(assign, "$current_camp_party", reg0),
				(party_set_slot, "$current_camp_party", slot_village_state, 1),
				(party_set_slot, "$current_camp_party", slot_party_type, 22),
				(party_set_slot, "p_main_party", slot_village_bound_center, 1),
				(display_message, "@ Camp defenses have been completed."),
				(assign, "$entrench_time", 0),
				(jump_to_menu, "mnu_camp"),
			(try_end)
		]),

	(0.0,
		[
			(eq, "$g_player_icon_state", 0),
			(eq, "$g_camp_mode", 0),
			(try_begin),
				(party_slot_eq, "p_main_party", slot_village_bound_center, 1),
				(party_set_slot, "p_main_party", slot_village_bound_center, 0),
				(party_set_slot, "$current_camp_party", slot_village_state, 2),
				(store_current_hours, ":current_hours"),
				(val_add, ":current_hours", 72),
				(party_set_slot, "$current_camp_party", slot_village_smoke_added, ":current_hours"),
				(party_add_particle_system, "$current_camp_party", "psys_map_village_fire_smoke"),
			(else_try),
				(party_slot_eq, "p_main_party", slot_village_bound_center, -1),
				(party_set_slot, "p_main_party", slot_village_bound_center, 0),
			(try_end),
			(assign, "$current_camp_party", -1)
		]),

	(3.0,
		[
			(try_for_parties, ":var_1"),
				(party_slot_eq, ":var_1", slot_party_type, 22),
				(party_slot_eq, ":var_1", slot_village_state, 2),
				(party_get_slot, ":var_1_village_smoke_added", ":var_1", slot_village_smoke_added),
				(store_current_hours, ":current_hours"),
				(gt, ":current_hours", ":var_1_village_smoke_added"),
				(party_clear_particle_systems, ":var_1"),
				(remove_party, ":var_1"),
			(try_end)
		]),

	(0.0,
		[
			(try_begin),
				(party_slot_eq, "p_main_party", 87, 2),
				(call_script, "script_weather_restore_proficiencies"),
				(party_set_slot, "p_main_party", 87, 1),
			(try_end),
			(try_begin),
				(ge, "$g_player_raiding_village", 1),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_g_player_raiding_village_main_party", "$g_player_raiding_village", "p_main_party"),
				(try_begin),
					(gt, ":distance_to_party_from_party_g_player_raiding_village_main_party", 4),
					(str_store_party_name_link, 1, "$g_player_raiding_village"),
					(display_message, "@You have broken off your raid of {s1}."),
					(call_script, "script_village_set_state", "$current_town", 0),
					(party_set_slot, "$current_town", slot_village_raided_by, -1),
					(assign, "$g_player_raiding_village", 0),
					(rest_for_hours, 0, 0, 0),
				(else_try),
					(ge, ":distance_to_party_from_party_g_player_raiding_village_main_party", 2),
					(map_free),
					(jump_to_menu, "mnu_village_loot_continue"),
				(try_end),
			(try_end),
			(try_begin),
				(gt, "$auto_besiege_town", 0),
				(gt, "$g_player_besiege_town", 0),
				(ge, "$g_siege_method", 1),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_g_player_raiding_village_main_party", "$g_player_besiege_town", "p_main_party"),
				(try_begin),
					(gt, ":distance_to_party_from_party_g_player_raiding_village_main_party", 2),
					(str_store_party_name_link, 1, "$g_player_besiege_town"),
					(display_message, "@You have broken off your siege of {s1}."),
					(call_script, "script_lift_siege", "$g_player_besiege_town", 0),
					(assign, "$g_player_besiege_town", -1),
					(rest_for_hours, 0, 0, 0),
				(else_try),
					(ge, ":distance_to_party_from_party_g_player_raiding_village_main_party", 1),
					(map_free),
					(str_store_party_name_link, 1, "$g_player_besiege_town"),
					(display_message, "@You cannot maintain your siege of {s1} from this distance. You risk your lines breaking."),
				(else_try),
					(store_current_hours, ":current_hours"),
					(ge, ":current_hours", "$g_siege_method_finish_hours"),
					(neg|is_currently_night),
					(rest_for_hours, 0, 0, 0),
					(start_encounter, "$auto_besiege_town"),
				(try_end),
			(try_end),
			(neq, "$g_mod_version", 911),
			(call_script, "script_init_item_score"),
			(call_script, "script_init_all_keys"),
			(call_script, "script_floris_set_default_prefs", 1),
			(try_begin),
				(neg|party_slot_eq, "p_town_1", slot_party_follow_me, 4),
				(call_script, "script_initialize_sea_trade_routes"),
			(try_end),
			(assign, "$g_mod_version", 911)
		]),

	(24.0,
		[
			(party_get_num_companion_stacks, ":num_companion_stacks_main_party", "p_main_party"),
			(try_for_range, ":number", 0, ":num_companion_stacks_main_party"),
				(party_stack_get_troop_id, ":party_stack_troop_id_main_party_number", "p_main_party", ":number"),
				(neg|troop_is_hero, ":party_stack_troop_id_main_party_number"),
				(assign, ":value", "trp_town_1_seneschal"),
				(try_for_range, ":troop", "trp_swadian_n_hero1", ":value"),
					(troop_slot_eq, ":troop", slot_troop_occupation, ":party_stack_troop_id_main_party_number"),
					(assign, ":value", ":troop"),
				(try_end),
				(neq, ":value", "trp_town_1_seneschal"),
				(troop_get_xp, ":xp_party_stack_troop_id_main_party_number", ":party_stack_troop_id_main_party_number"),
				(ge, ":xp_party_stack_troop_id_main_party_number", 2000000),
				(jump_to_menu, "mnu_upgrade_to_hero"),
			(try_end)
		]),

	(0.0,
		[
			(party_slot_eq, "p_main_party", slot_village_market_town, -1),
			(store_current_hours, ":current_hours"),
			(try_begin),
				(lt, "$g_player_besiege_town", 1),
				(party_set_slot, "p_main_party", slot_village_market_town, 0),
				(assign, "$entrench_time", 0),
			(else_try),
				(gt, "$g_player_besiege_town", 0),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_g_player_besiege_town_main_party", "$g_player_besiege_town", "p_main_party"),
				(try_begin),
					(le, ":distance_to_party_from_party_g_player_besiege_town_main_party", 3),
					(ge, ":current_hours", "$entrench_time"),
					(party_set_slot, "p_main_party", slot_village_market_town, 1),
					(assign, "$entrench_time", 0),
				(else_try),
					(gt, ":distance_to_party_from_party_g_player_besiege_town_main_party", 3),
					(party_set_slot, "p_main_party", slot_village_market_town, 0),
					(display_message, "@ Your siege camp was destroyed while you were away!"),
					(assign, "$entrench_time", 0),
				(try_end),
			(try_end)
		]),

	(1.0,
		[
			(party_slot_eq, "p_main_party", slot_village_market_town, 1),
			(try_begin),
				(lt, "$g_player_besiege_town", 1),
				(party_set_slot, "p_main_party", slot_village_market_town, 0),
			(else_try),
				(gt, "$g_player_besiege_town", 0),
				(store_distance_to_party_from_party, ":distance_to_party_from_party_g_player_besiege_town_main_party", "$g_player_besiege_town", "p_main_party"),
				(gt, ":distance_to_party_from_party_g_player_besiege_town_main_party", 3),
				(party_set_slot, "p_main_party", slot_village_market_town, 0),
				(display_message, "@ Your siege camp was destroyed while you were away!"),
			(try_end)
		]),

	(24.0,
		[
			(try_begin),
				(ge, "$g_global_var_announce_invasion_wildling", 1),
				(lt, "$g_global_var_announce_invasion_wildling", 2),
				(val_add, "$g_global_var_announce_invasion_wildling", 1),
			(else_try),
				(assign, "$g_global_var_announce_invasion_wildling", 0),
			(try_end),
			(eq, "$g_global_var_announce_invasion_wildling", 2),
			(store_random_in_range, ":random_in_range_village_5_village_6", "p_village_5", "p_village_6"),
			(troop_set_faction, "trp_kingdom_21_lord", "fac_kingdom_21"),
			(faction_set_slot, "fac_kingdom_21", slot_faction_state, 0),
			(call_script, "script_create_kingdom_hero_party", "trp_kingdom_21_lord", ":random_in_range_village_5_village_6"),
			(troop_set_slot, "trp_kingdom_21_lord", slot_troop_wealth, 100000),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "fac_kingdom_21", "fac_kingdom_2", 1),
			(call_script, "script_start_give_center_to_lord", "p_castle_15", "trp_kingdom_21_lord", 0),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_21_lord", "trp_knight_21_1", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_21_lord", "trp_knight_21_2", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_21_lord", "trp_knight_21_3", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_21_lord", "trp_knight_21_4", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_21_lord", "trp_knight_21_5", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_21_lord", "trp_knight_21_6", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_21_lord", "trp_knight_21_7", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_21_lord", "trp_knight_21_8", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_21_lord", "trp_knight_21_9", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_21_lord", "trp_knight_21_10", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_21_lord", "trp_knight_21_11", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_21_lord", "trp_knight_21_12", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_21_lord", "trp_knight_21_13", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_21_lord", "trp_knight_21_14", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_21_lord", "trp_knight_21_15", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_21_lord", "trp_knight_21_16", 100),
			(try_for_range, ":troop", "trp_knight_21_1", "trp_knight_22_1"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(neg|troop_slot_ge, ":troop", 8, 0),
				(neg|troop_slot_ge, ":troop", 10, 1),
				(call_script, "script_create_kingdom_hero_party", ":troop", ":random_in_range_village_5_village_6"),
				(troop_set_slot, ":troop", slot_troop_wealth, 40000),
			(try_end),
			(jump_to_menu, "mnu_wildling_invasion")
		]),

	(24.0,
		[
			(store_current_day, ":current_day"),
			(eq, ":current_day", 1),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_1_lord", "trp_knight_1_9", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_2_lord", "trp_knight_2_6", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_2_lord", "trp_knight_2_7", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_2_lord", "trp_knight_2_11", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_2_lord", "trp_knight_2_15", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_2_lord", "trp_knight_2_22", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_2_lord", "trp_knight_2_24", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_2_lord", "trp_knight_5_5", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_2_lord", "trp_knight_5_4", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_2_lord", "trp_knight_5_10", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_2_lord", "trp_knight_5_16", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_8_lord", "trp_knight_8_3", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_9_lord", "trp_knight_9_2", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_9_lord", "trp_knight_9_8", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_9_lord", "trp_knight_9_4", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_9_lord", "trp_knight_9_15", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_9_lord", "trp_knight_9_33", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_9_lord", "trp_knight_9_12", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_10_lord", "trp_knight_10_8", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_10_lord", "trp_knight_10_14", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_10_lord", "trp_knight_10_1", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_11_lord", "trp_knight_11_1", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_11_lord", "trp_knight_11_6", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_11_lord", "trp_knight_11_15", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_10_lord", "trp_knight_10_1", 100)
		]),

	(24.0,
		[
			(store_current_day, ":current_day"),
			(store_random_in_range, ":random_in_range_village_179_village_182", "p_village_179", "p_village_182"),
			(eq, ":current_day", 200),
			(troop_set_faction, "trp_kingdom_22_lord", "fac_kingdom_22"),
			(faction_set_slot, "fac_kingdom_22", slot_faction_state, 0),
			(call_script, "script_create_kingdom_hero_party", "trp_kingdom_22_lord", ":random_in_range_village_179_village_182"),
			(troop_set_slot, "trp_kingdom_22_lord", slot_troop_wealth, 100000),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "fac_kingdom_22", "fac_kingdom_16", 1),
			(call_script, "script_start_give_center_to_lord", "p_town_50", "trp_kingdom_22_lord", 0),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_22_lord", "trp_knight_22_1", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_22_lord", "trp_knight_22_2", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_22_lord", "trp_knight_22_3", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_22_lord", "trp_knight_22_4", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_22_lord", "trp_knight_22_5", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_22_lord", "trp_knight_22_6", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_22_lord", "trp_knight_22_7", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_22_lord", "trp_knight_22_8", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_22_lord", "trp_knight_22_9", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_22_lord", "trp_knight_22_10", 100),
			(try_for_range, ":troop", "trp_knight_22_1", "trp_kingdom_1_pretender"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(neg|troop_slot_ge, ":troop", 8, 0),
				(neg|troop_slot_ge, ":troop", 10, 1),
				(call_script, "script_create_kingdom_hero_party", ":troop", ":random_in_range_village_179_village_182"),
				(troop_set_slot, ":troop", slot_troop_wealth, 40000),
			(try_end),
			(jump_to_menu, "mnu_dothraki_invasion")
		]),

	(24.0,
		[
			(try_begin),
				(ge, "$g_global_var_announce_invasion_targaryen", 1),
				(lt, "$g_global_var_announce_invasion_targaryen", 2),
				(val_add, "$g_global_var_announce_invasion_targaryen", 1),
			(else_try),
				(assign, "$g_global_var_announce_invasion_targaryen", 0),
			(try_end),
			(eq, "$g_global_var_announce_invasion_targaryen", 2),
			(store_random_in_range, ":random_in_range_village_159_village_4", "p_village_159", "p_village_4"),
			(troop_set_faction, "trp_kingdom_20_lord", "fac_kingdom_20"),
			(faction_set_slot, "fac_kingdom_20", slot_faction_state, 0),
			(call_script, "script_create_kingdom_hero_party", "trp_kingdom_20_lord", ":random_in_range_village_159_village_4"),
			(troop_set_slot, "trp_kingdom_20_lord", slot_troop_wealth, 100000),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "fac_kingdom_20", "fac_kingdom_1", 1),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "fac_kingdom_20", "fac_kingdom_8", 1),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "fac_kingdom_20", "fac_kingdom_9", 1),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "fac_kingdom_20", "fac_kingdom_10", 1),
			(call_script, "script_start_give_center_to_lord", "p_castle_83", "trp_knight_20_1", 0),
			(call_script, "script_start_give_center_to_lord", "p_castle_84", "trp_kingdom_20_lord", 0),
			(call_script, "script_start_give_center_to_lord", "p_castle_85", "trp_knight_20_9", 0),
			(call_script, "script_start_give_center_to_lord", "p_castle_20", "trp_knight_20_2", 0),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_20_lord", "trp_knight_20_1", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_20_lord", "trp_knight_20_2", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_20_lord", "trp_knight_20_3", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_20_lord", "trp_knight_20_4", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_20_lord", "trp_knight_20_5", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_20_lord", "trp_knight_20_6", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_20_lord", "trp_knight_20_7", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_20_lord", "trp_knight_20_8", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_20_lord", "trp_knight_20_9", 100),
			(call_script, "script_troop_change_relation_with_troop", "trp_kingdom_20_lord", "trp_knight_20_10", 100),
			(try_for_range, ":troop", "trp_knight_20_1", "trp_knight_21_1"),
				(troop_slot_eq, ":troop", slot_troop_occupation, 2),
				(neg|troop_slot_ge, ":troop", 8, 0),
				(neg|troop_slot_ge, ":troop", 10, 1),
				(call_script, "script_create_kingdom_hero_party", ":troop", ":random_in_range_village_159_village_4"),
				(troop_set_slot, ":troop", slot_troop_wealth, 40000),
			(try_end),
			(jump_to_menu, "mnu_dk_invasion_start_warning")
		]),

	(24.0,
		[
			(try_begin),
				(store_faction_of_party, ":faction_of_party_town_16", "p_town_16"),
				(eq, "$g_conquest_kings_landing_dragonstone", 0),
				(eq, "$g_conquest_kings_landing_stormlands", 0),
				(eq, "$g_conquest_kings_landing_reach", 0),
				(eq, ":faction_of_party_town_16", "fac_kingdom_8"),
				(jump_to_menu, "mnu_conquest_kings_landing_dragonstone"),
			(try_end)
		]),

	(24.0,
		[
			(try_begin),
				(store_faction_of_party, ":faction_of_party_town_16", "p_town_16"),
				(eq, "$g_conquest_kings_landing_dragonstone", 0),
				(eq, "$g_conquest_kings_landing_stormlands", 0),
				(eq, "$g_conquest_kings_landing_reach", 0),
				(eq, ":faction_of_party_town_16", "fac_kingdom_1"),
				(jump_to_menu, "mnu_conquest_kings_landing_stormlands"),
			(try_end)
		]),

	(24.0,
		[
			(try_begin),
				(store_faction_of_party, ":faction_of_party_town_16", "p_town_16"),
				(eq, "$g_conquest_kings_landing_dragonstone", 0),
				(eq, "$g_conquest_kings_landing_stormlands", 0),
				(eq, "$g_conquest_kings_landing_reach", 0),
				(eq, ":faction_of_party_town_16", "fac_kingdom_10"),
				(jump_to_menu, "mnu_conquest_kings_landing_reach"),
			(try_end)
		]),

	(24.0,
		[
			(try_begin),
				(ge, "$g_global_var_announce_invasion_dorne", 1),
				(lt, "$g_global_var_announce_invasion_dorne", 2),
				(val_add, "$g_global_var_announce_invasion_dorne", 1),
			(else_try),
				(assign, "$g_global_var_announce_invasion_dorne", 0),
			(try_end),
			(eq, "$g_global_var_announce_invasion_dorne", 2),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "fac_kingdom_6", "fac_kingdom_1", 1),
			(call_script, "script_dplmc_start_defensive_between_kingdoms", "fac_kingdom_6", "fac_kingdom_20", 1),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "fac_kingdom_6", "fac_kingdom_8", 1),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "fac_kingdom_6", "fac_kingdom_9", 1),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "fac_kingdom_6", "fac_kingdom_10", 1),
			(jump_to_menu, "mnu_dk_invasion_start_warning_dorne_joins")
		]),

	(48.0,
		[
			(eq, "$g_renly_quest_turncloak", 1),
			(jump_to_menu, "mnu_renly_quest_turncloak")
		]),

	(48.0,
		[
			(eq, "$g_renly_quest_turncloak", 2),
			(jump_to_menu, "mnu_renly_quest_turncloak_2")
		]),

	(48.0,
		[
			(eq, "$g_renly_quest_turncloak", 3),
			(jump_to_menu, "mnu_renly_quest_turncloak_3")
		]),

	(24.0,
		[
			(store_current_day, ":current_day"),
			(eq, ":current_day", 25),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "fac_kingdom_1", "fac_kingdom_8", 1),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "fac_kingdom_1", "fac_kingdom_9", 1),
			(jump_to_menu, "mnu_dk_renly_start_warning2")
		]),

	(24.0,
		[
			(store_current_day, ":current_day"),
			(eq, ":current_day", 27),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "fac_kingdom_10", "fac_kingdom_8", 1),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "fac_kingdom_10", "fac_kingdom_9", 1),
			(jump_to_menu, "mnu_dk_renly_start_warning3")
		]),

	(24.0,
		[
			(store_current_day, ":current_day"),
			(eq, ":current_day", 35),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "fac_kingdom_8", "fac_kingdom_9", 1),
			(jump_to_menu, "mnu_dk_stannis_start_warning")
		]),

	(24.0,
		[
			(store_current_day, ":current_day"),
			(eq, ":current_day", 50),
			(call_script, "script_diplomacy_start_war_between_kingdoms", "fac_kingdom_11", "fac_kingdom_2", 1),
			(jump_to_menu, "mnu_dk_north_start_warning")
		]),

	(700.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(this_or_next|eq, "$players_kingdom", "fac_kingdom_1"),
			(this_or_next|eq, "$players_kingdom", "fac_kingdom_3"),
			(this_or_next|eq, "$players_kingdom", "fac_kingdom_6"),
			(this_or_next|eq, "$players_kingdom", "fac_kingdom_9"),
			(this_or_next|eq, "$players_kingdom", "fac_kingdom_10"),
			(eq, "$players_kingdom", "fac_kingdom_19"),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(this_or_next|eq, ":current_terrain_main_party", 13),
			(this_or_next|eq, ":current_terrain_main_party", 5),
			(eq, ":current_terrain_main_party", 11),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(try_begin),
				(eq, "$g_the_seven_event", 0),
				(jump_to_menu, "mnu_the_seven_event_1"),
				(assign, "$g_the_seven_event", 1),
			(else_try),
				(eq, "$g_the_seven_event", 1),
				(jump_to_menu, "mnu_the_seven_event_2"),
				(assign, "$g_the_seven_event", 2),
			(else_try),
				(eq, "$g_the_seven_event", 2),
				(jump_to_menu, "mnu_the_seven_event_3"),
				(assign, "$g_the_seven_event", 3),
			(else_try),
				(eq, "$g_the_seven_event", 3),
				(jump_to_menu, "mnu_the_seven_event_4"),
				(assign, "$g_the_seven_event", 4),
			(else_try),
				(eq, "$g_the_seven_event", 4),
				(jump_to_menu, "mnu_the_seven_event_5"),
				(assign, "$g_the_seven_event", 5),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(480.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(eq, "$players_kingdom", "fac_kingdom_1"),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(eq, ":current_terrain_main_party", 11),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(try_begin),
				(eq, "$g_stormlands_event", 0),
				(jump_to_menu, "mnu_stormlands_event_1"),
				(assign, "$g_stormlands_event", 1),
			(else_try),
				(eq, "$g_stormlands_event", 1),
				(jump_to_menu, "mnu_stormlands_event_2"),
				(assign, "$g_stormlands_event", 2),
			(else_try),
				(eq, "$g_stormlands_event", 2),
				(jump_to_menu, "mnu_stormlands_event_3"),
				(assign, "$g_stormlands_event", 3),
			(else_try),
				(eq, "$g_stormlands_event", 3),
				(jump_to_menu, "mnu_stormlands_event_4"),
				(assign, "$g_stormlands_event", 4),
			(else_try),
				(eq, "$g_stormlands_event", 4),
				(jump_to_menu, "mnu_stormlands_event_5"),
				(assign, "$g_stormlands_event", 5),
			(else_try),
				(eq, "$g_stormlands_event", 5),
				(jump_to_menu, "mnu_stormlands_event_6"),
				(assign, "$g_stormlands_event", 6),
			(else_try),
				(eq, "$g_stormlands_event", 6),
				(jump_to_menu, "mnu_stormlands_event_7"),
				(assign, "$g_stormlands_event", 7),
			(else_try),
				(eq, "$g_stormlands_event", 7),
				(jump_to_menu, "mnu_stormlands_event_8"),
				(assign, "$g_stormlands_event", 8),
			(else_try),
				(eq, "$g_stormlands_event", 8),
				(jump_to_menu, "mnu_stormlands_event_9"),
				(assign, "$g_stormlands_event", 9),
			(else_try),
				(eq, "$g_stormlands_event", 9),
				(jump_to_menu, "mnu_stormlands_event_10"),
				(assign, "$g_stormlands_event", 10),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(480.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(eq, "$players_kingdom", "fac_kingdom_2"),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(this_or_next|eq, ":current_terrain_main_party", 12),
			(this_or_next|eq, ":current_terrain_main_party", 4),
			(eq, ":current_terrain_main_party", 11),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(try_begin),
				(eq, "$g_north_event", 0),
				(jump_to_menu, "mnu_north_event_1"),
				(assign, "$g_north_event", 1),
			(else_try),
				(eq, "$g_north_event", 1),
				(jump_to_menu, "mnu_north_event_2"),
				(assign, "$g_north_event", 2),
			(else_try),
				(eq, "$g_north_event", 2),
				(jump_to_menu, "mnu_north_event_3"),
				(assign, "$g_north_event", 3),
			(else_try),
				(eq, "$g_north_event", 3),
				(jump_to_menu, "mnu_north_event_4"),
				(assign, "$g_north_event", 4),
			(else_try),
				(eq, "$g_north_event", 4),
				(jump_to_menu, "mnu_north_event_5"),
				(assign, "$g_north_event", 5),
			(else_try),
				(eq, "$g_north_event", 5),
				(jump_to_menu, "mnu_north_event_6"),
				(assign, "$g_north_event", 6),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(480.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(eq, "$players_kingdom", "fac_kingdom_3"),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(eq, ":current_terrain_main_party", 11),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(try_begin),
				(eq, "$g_vale_event", 0),
				(jump_to_menu, "mnu_vale_event_1"),
				(assign, "$g_vale_event", 1),
			(else_try),
				(eq, "$g_vale_event", 1),
				(jump_to_menu, "mnu_vale_event_2"),
				(assign, "$g_vale_event", 2),
			(else_try),
				(eq, "$g_vale_event", 2),
				(jump_to_menu, "mnu_vale_event_3"),
				(assign, "$g_vale_event", 3),
			(else_try),
				(eq, "$g_vale_event", 3),
				(jump_to_menu, "mnu_vale_event_4"),
				(assign, "$g_vale_event", 4),
			(else_try),
				(eq, "$g_vale_event", 4),
				(jump_to_menu, "mnu_vale_event_5"),
				(assign, "$g_vale_event", 5),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(480.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(eq, "$players_kingdom", "fac_kingdom_4"),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(eq, ":current_terrain_main_party", 11),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(try_begin),
				(eq, "$g_braavos_event", 0),
				(jump_to_menu, "mnu_braavos_event_1"),
				(assign, "$g_braavos_event", 1),
			(else_try),
				(eq, "$g_braavos_event", 1),
				(jump_to_menu, "mnu_braavos_event_2"),
				(assign, "$g_braavos_event", 2),
			(else_try),
				(eq, "$g_braavos_event", 2),
				(jump_to_menu, "mnu_braavos_event_3"),
				(assign, "$g_braavos_event", 3),
			(else_try),
				(eq, "$g_braavos_event", 3),
				(jump_to_menu, "mnu_braavos_event_4"),
				(assign, "$g_braavos_event", 4),
			(else_try),
				(eq, "$g_braavos_event", 4),
				(jump_to_menu, "mnu_braavos_event_5"),
				(assign, "$g_braavos_event", 5),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(240.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(eq, "$players_kingdom", "fac_kingdom_2"),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(eq, ":current_terrain_main_party", 11),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(try_begin),
				(eq, "$g_riverlands_event", 0),
				(jump_to_menu, "mnu_riverlands_event_1"),
				(assign, "$g_riverlands_event", 1),
			(else_try),
				(eq, "$g_riverlands_event", 1),
				(jump_to_menu, "mnu_riverlands_event_2"),
				(assign, "$g_riverlands_event", 2),
			(else_try),
				(eq, "$g_riverlands_event", 2),
				(jump_to_menu, "mnu_riverlands_event_3"),
				(assign, "$g_riverlands_event", 3),
			(else_try),
				(eq, "$g_riverlands_event", 3),
				(jump_to_menu, "mnu_riverlands_event_4"),
				(assign, "$g_riverlands_event", 4),
			(else_try),
				(eq, "$g_riverlands_event", 4),
				(jump_to_menu, "mnu_riverlands_event_5"),
				(assign, "$g_riverlands_event", 5),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(480.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(eq, "$players_kingdom", "fac_kingdom_6"),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(eq, ":current_terrain_main_party", 11),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(try_begin),
				(eq, "$g_dorne_event", 0),
				(jump_to_menu, "mnu_dorne_event_1"),
				(assign, "$g_dorne_event", 1),
			(else_try),
				(eq, "$g_dorne_event", 1),
				(jump_to_menu, "mnu_dorne_event_2"),
				(assign, "$g_dorne_event", 2),
			(else_try),
				(eq, "$g_dorne_event", 2),
				(jump_to_menu, "mnu_dorne_event_3"),
				(assign, "$g_dorne_event", 3),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(480.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(eq, "$players_kingdom", "fac_kingdom_8"),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(eq, ":current_terrain_main_party", 11),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(try_begin),
				(eq, "$g_dragonstone_event", 0),
				(jump_to_menu, "mnu_dragonstone_event_1"),
				(assign, "$g_dragonstone_event", 1),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(200.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(eq, "$players_kingdom", "fac_kingdom_11"),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(eq, ":current_terrain_main_party", 15),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(try_begin),
				(eq, "$g_ironborn_event", 0),
				(jump_to_menu, "mnu_ironborn_event_1"),
				(assign, "$g_ironborn_event", 1),
			(else_try),
				(eq, "$g_ironborn_event", 1),
				(jump_to_menu, "mnu_ironborn_event_2"),
				(assign, "$g_ironborn_event", 2),
			(else_try),
				(eq, "$g_ironborn_event", 2),
				(jump_to_menu, "mnu_ironborn_event_3"),
				(assign, "$g_ironborn_event", 3),
			(else_try),
				(eq, "$g_ironborn_event", 3),
				(jump_to_menu, "mnu_ironborn_event_4"),
				(assign, "$g_ironborn_event", 4),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(700.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 4),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(this_or_next|eq, ":current_terrain_main_party", 11),
			(eq, ":current_terrain_main_party", 12),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(store_random_in_range, ":random_in_range_0_15", 0, 15),
			(try_begin),
				(eq, ":random_in_range_0_15", 0),
				(jump_to_menu, "mnu_negative_event_1"),
			(else_try),
				(eq, ":random_in_range_0_15", 1),
				(jump_to_menu, "mnu_negative_event_2"),
			(else_try),
				(eq, ":random_in_range_0_15", 2),
				(jump_to_menu, "mnu_negative_event_3"),
			(else_try),
				(eq, ":random_in_range_0_15", 3),
				(jump_to_menu, "mnu_negative_event_4"),
			(else_try),
				(eq, ":random_in_range_0_15", 4),
				(jump_to_menu, "mnu_negative_event_5"),
			(else_try),
				(eq, ":random_in_range_0_15", 5),
				(jump_to_menu, "mnu_negative_event_6"),
			(else_try),
				(eq, ":random_in_range_0_15", 6),
				(jump_to_menu, "mnu_negative_event_7"),
			(else_try),
				(eq, ":random_in_range_0_15", 7),
				(jump_to_menu, "mnu_negative_event_8"),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(72.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(neq, "$players_kingdom", "fac_kingdom_8"),
			(neq, "$players_kingdom", "fac_kingdom_11"),
			(neq, "$players_kingdom", "fac_kingdom_19"),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(eq, ":current_terrain_main_party", 15),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(store_random_in_range, ":random_in_range_0_15", 0, 15),
			(try_begin),
				(eq, ":random_in_range_0_15", 0),
				(jump_to_menu, "mnu_sea_travel_event_1"),
			(else_try),
				(eq, ":random_in_range_0_15", 1),
				(jump_to_menu, "mnu_sea_travel_event_2"),
			(else_try),
				(eq, ":random_in_range_0_15", 2),
				(jump_to_menu, "mnu_sea_travel_event_3"),
			(else_try),
				(eq, ":random_in_range_0_15", 3),
				(jump_to_menu, "mnu_sea_travel_event_4"),
			(else_try),
				(eq, ":random_in_range_0_15", 4),
				(jump_to_menu, "mnu_sea_travel_event_5"),
			(else_try),
				(eq, ":random_in_range_0_15", 5),
				(jump_to_menu, "mnu_sea_travel_event_6"),
			(else_try),
				(eq, ":random_in_range_0_15", 6),
				(jump_to_menu, "mnu_sea_travel_event_7"),
			(else_try),
				(eq, ":random_in_range_0_15", 7),
				(jump_to_menu, "mnu_sea_travel_event_8"),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(450.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 4),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(this_or_next|eq, ":current_terrain_main_party", 11),
			(eq, ":current_terrain_main_party", 12),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(try_begin),
				(eq, "$g_negative_event", 0),
				(jump_to_menu, "mnu_negative_event_11"),
				(assign, "$g_negative_event", 1),
			(else_try),
				(eq, "$g_negative_event", 1),
				(jump_to_menu, "mnu_negative_event_22"),
				(assign, "$g_negative_event", 2),
			(else_try),
				(eq, "$g_negative_event", 2),
				(jump_to_menu, "mnu_negative_event_33"),
				(assign, "$g_negative_event", 3),
			(else_try),
				(eq, "$g_negative_event", 3),
				(jump_to_menu, "mnu_negative_event_44"),
				(assign, "$g_negative_event", 4),
			(else_try),
				(eq, "$g_negative_event", 4),
				(jump_to_menu, "mnu_negative_event_55"),
				(assign, "$g_negative_event", 5),
			(else_try),
				(eq, "$g_negative_event", 5),
				(jump_to_menu, "mnu_negative_event_66"),
				(assign, "$g_negative_event", 6),
			(else_try),
				(eq, "$g_negative_event", 6),
				(jump_to_menu, "mnu_negative_event_77"),
				(assign, "$g_negative_event", 7),
			(else_try),
				(eq, "$g_negative_event", 7),
				(jump_to_menu, "mnu_negative_event_88"),
				(assign, "$g_negative_event", 8),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(250.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(eq, ":current_terrain_main_party", 5),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(store_random_in_range, ":random_in_range_0_15", 0, 15),
			(try_begin),
				(eq, ":random_in_range_0_15", 0),
				(jump_to_menu, "mnu_desert_event_1"),
			(else_try),
				(eq, ":random_in_range_0_15", 1),
				(jump_to_menu, "mnu_desert_event_2"),
			(else_try),
				(eq, ":random_in_range_0_15", 2),
				(jump_to_menu, "mnu_desert_event_3"),
			(else_try),
				(eq, ":random_in_range_0_15", 3),
				(jump_to_menu, "mnu_desert_event_4"),
			(else_try),
				(eq, ":random_in_range_0_15", 4),
				(jump_to_menu, "mnu_desert_event_5"),
			(else_try),
				(eq, ":random_in_range_0_15", 5),
				(jump_to_menu, "mnu_desert_event_6"),
			(else_try),
				(eq, ":random_in_range_0_15", 6),
				(jump_to_menu, "mnu_desert_event_7"),
			(else_try),
				(eq, ":random_in_range_0_15", 7),
				(jump_to_menu, "mnu_desert_event_8"),
			(else_try),
				(eq, ":random_in_range_0_15", 8),
				(jump_to_menu, "mnu_desert_event_9"),
			(else_try),
				(eq, ":random_in_range_0_15", 9),
				(jump_to_menu, "mnu_desert_event_10"),
			(else_try),
				(eq, ":random_in_range_0_15", 10),
				(jump_to_menu, "mnu_desert_event_11"),
			(else_try),
				(eq, ":random_in_range_0_15", 11),
				(jump_to_menu, "mnu_desert_event_12"),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(200.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(eq, ":current_terrain_main_party", 11),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(store_random_in_range, ":random_in_range_0_25", 0, 25),
			(try_begin),
				(eq, ":random_in_range_0_25", 0),
				(jump_to_menu, "mnu_food_event_1"),
			(else_try),
				(eq, ":random_in_range_0_25", 1),
				(jump_to_menu, "mnu_food_event_2"),
			(else_try),
				(eq, ":random_in_range_0_25", 2),
				(jump_to_menu, "mnu_food_event_3"),
			(else_try),
				(eq, ":random_in_range_0_25", 3),
				(jump_to_menu, "mnu_food_event_4"),
			(else_try),
				(eq, ":random_in_range_0_25", 4),
				(jump_to_menu, "mnu_food_event_5"),
			(else_try),
				(eq, ":random_in_range_0_25", 5),
				(jump_to_menu, "mnu_food_event_6"),
			(else_try),
				(eq, ":random_in_range_0_25", 6),
				(jump_to_menu, "mnu_food_event_7"),
			(else_try),
				(eq, ":random_in_range_0_25", 7),
				(jump_to_menu, "mnu_food_event_8"),
			(else_try),
				(eq, ":random_in_range_0_25", 8),
				(jump_to_menu, "mnu_food_event_9"),
			(else_try),
				(eq, ":random_in_range_0_25", 9),
				(jump_to_menu, "mnu_food_event_10"),
			(else_try),
				(eq, ":random_in_range_0_25", 10),
				(jump_to_menu, "mnu_food_event_11"),
			(else_try),
				(eq, ":random_in_range_0_25", 11),
				(jump_to_menu, "mnu_food_event_12"),
			(else_try),
				(eq, ":random_in_range_0_25", 12),
				(jump_to_menu, "mnu_food_event_13"),
			(else_try),
				(eq, ":random_in_range_0_25", 13),
				(jump_to_menu, "mnu_food_event_14"),
			(else_try),
				(eq, ":random_in_range_0_25", 14),
				(jump_to_menu, "mnu_food_event_15"),
			(else_try),
				(eq, ":random_in_range_0_25", 15),
				(jump_to_menu, "mnu_food_event_16"),
			(else_try),
				(eq, ":random_in_range_0_25", 16),
				(jump_to_menu, "mnu_food_event_17"),
			(else_try),
				(eq, ":random_in_range_0_25", 17),
				(jump_to_menu, "mnu_food_event_18"),
			(else_try),
				(eq, ":random_in_range_0_25", 18),
				(jump_to_menu, "mnu_food_event_19"),
			(else_try),
				(eq, ":random_in_range_0_25", 19),
				(jump_to_menu, "mnu_food_event_20"),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(60.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(eq, ":current_terrain_main_party", 11),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(store_random_in_range, ":random_in_range_0_15", 0, 15),
			(try_begin),
				(eq, ":random_in_range_0_15", 0),
				(jump_to_menu, "mnu_agility_event_1"),
			(else_try),
				(eq, ":random_in_range_0_15", 1),
				(jump_to_menu, "mnu_agility_event_2"),
			(else_try),
				(eq, ":random_in_range_0_15", 2),
				(jump_to_menu, "mnu_agility_event_3"),
			(else_try),
				(eq, ":random_in_range_0_15", 3),
				(jump_to_menu, "mnu_agility_event_4"),
			(else_try),
				(eq, ":random_in_range_0_15", 4),
				(jump_to_menu, "mnu_agility_event_5"),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(300.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 4),
			(this_or_next|eq, ":current_terrain_main_party", 5),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(this_or_next|eq, ":current_terrain_main_party", 11),
			(this_or_next|eq, ":current_terrain_main_party", 12),
			(eq, ":current_terrain_main_party", 13),
			(troop_get_slot, ":player_renown", "trp_player", slot_troop_renown),
			(gt, ":player_renown", 270),
			(try_begin),
				(eq, "$g_first_event", 0),
				(jump_to_menu, "mnu_event_01"),
				(assign, "$g_first_event", 1),
			(else_try),
				(eq, "$g_first_event", 1),
				(jump_to_menu, "mnu_event_23"),
				(assign, "$g_first_event", 2),
			(else_try),
				(eq, "$g_first_event", 2),
				(jump_to_menu, "mnu_event_24"),
				(assign, "$g_first_event", 3),
			(else_try),
				(eq, "$g_first_event", 3),
				(jump_to_menu, "mnu_event_26"),
				(assign, "$g_first_event", 4),
			(else_try),
				(eq, "$g_first_event", 4),
				(jump_to_menu, "mnu_event_02"),
				(assign, "$g_first_event", 5),
			(else_try),
				(eq, "$g_first_event", 5),
				(jump_to_menu, "mnu_event_03"),
				(assign, "$g_first_event", 6),
			(else_try),
				(eq, "$g_first_event", 6),
				(jump_to_menu, "mnu_event_05"),
				(assign, "$g_first_event", 7),
			(else_try),
				(eq, "$g_first_event", 7),
				(jump_to_menu, "mnu_event_07"),
				(assign, "$g_first_event", 8),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(210.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 4),
			(this_or_next|eq, ":current_terrain_main_party", 5),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(this_or_next|eq, ":current_terrain_main_party", 11),
			(this_or_next|eq, ":current_terrain_main_party", 12),
			(eq, ":current_terrain_main_party", 13),
			(neq, "$g_player_is_captive", 1),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(troop_get_slot, ":player_renown", "trp_player", slot_troop_renown),
			(gt, ":player_renown", 140),
			(try_begin),
				(eq, "$g_second_event", 0),
				(jump_to_menu, "mnu_event_04"),
				(assign, "$g_second_event", 1),
			(else_try),
				(eq, "$g_second_event", 1),
				(jump_to_menu, "mnu_event_11"),
				(assign, "$g_second_event", 2),
			(else_try),
				(eq, "$g_second_event", 2),
				(jump_to_menu, "mnu_event_27"),
				(assign, "$g_second_event", 3),
			(else_try),
				(eq, "$g_second_event", 3),
				(jump_to_menu, "mnu_event_28"),
				(assign, "$g_second_event", 4),
			(else_try),
				(eq, "$g_second_event", 4),
				(jump_to_menu, "mnu_event_12"),
				(assign, "$g_second_event", 5),
			(else_try),
				(eq, "$g_second_event", 5),
				(jump_to_menu, "mnu_event_13"),
				(assign, "$g_second_event", 6),
			(else_try),
				(eq, "$g_second_event", 6),
				(jump_to_menu, "mnu_event_14"),
				(assign, "$g_second_event", 7),
			(else_try),
				(eq, "$g_second_event", 7),
				(jump_to_menu, "mnu_event_101"),
				(assign, "$g_second_event", 8),
			(else_try),
				(eq, "$g_second_event", 8),
				(jump_to_menu, "mnu_event_102"),
				(assign, "$g_second_event", 9),
			(else_try),
				(eq, "$g_second_event", 9),
				(jump_to_menu, "mnu_event_103"),
				(assign, "$g_second_event", 10),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(280.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 4),
			(this_or_next|eq, ":current_terrain_main_party", 5),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(this_or_next|eq, ":current_terrain_main_party", 11),
			(this_or_next|eq, ":current_terrain_main_party", 12),
			(eq, ":current_terrain_main_party", 13),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(troop_get_slot, ":player_renown", "trp_player", slot_troop_renown),
			(gt, ":player_renown", 300),
			(try_begin),
				(eq, "$g_third_event", 0),
				(jump_to_menu, "mnu_event_29"),
				(assign, "$g_third_event", 1),
			(else_try),
				(eq, "$g_third_event", 1),
				(jump_to_menu, "mnu_event_30"),
				(assign, "$g_third_event", 2),
			(else_try),
				(eq, "$g_third_event", 2),
				(jump_to_menu, "mnu_event_31"),
				(assign, "$g_third_event", 3),
			(else_try),
				(eq, "$g_third_event", 3),
				(jump_to_menu, "mnu_event_36"),
				(assign, "$g_third_event", 4),
			(else_try),
				(eq, "$g_third_event", 4),
				(jump_to_menu, "mnu_event_37"),
				(assign, "$g_third_event", 5),
			(else_try),
				(eq, "$g_third_event", 5),
				(jump_to_menu, "mnu_event_32"),
				(assign, "$g_third_event", 6),
			(else_try),
				(eq, "$g_third_event", 6),
				(jump_to_menu, "mnu_event_33"),
				(assign, "$g_third_event", 7),
			(else_try),
				(eq, "$g_third_event", 7),
				(jump_to_menu, "mnu_event_34"),
				(assign, "$g_third_event", 8),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(240.0,
		[
			(neq, "$freelancer_state", 1),
			(assign, ":value", 0),
			(try_for_range, ":party", "p_town_1", "p_salt_mine"),
				(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
				(eq, ":party_town_lord", "trp_player"),
				(assign, ":value", 1),
			(try_end),
			(eq, ":value", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 4),
			(this_or_next|eq, ":current_terrain_main_party", 5),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(this_or_next|eq, ":current_terrain_main_party", 11),
			(this_or_next|eq, ":current_terrain_main_party", 12),
			(eq, ":current_terrain_main_party", 13),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(troop_get_slot, ":player_renown", "trp_player", slot_troop_renown),
			(gt, ":player_renown", 140),
			(try_begin),
				(eq, "$g_fourth_event", 0),
				(jump_to_menu, "mnu_event_06"),
				(assign, "$g_fourth_event", 1),
			(else_try),
				(eq, "$g_fourth_event", 1),
				(jump_to_menu, "mnu_event_08"),
				(assign, "$g_fourth_event", 2),
			(else_try),
				(eq, "$g_fourth_event", 2),
				(jump_to_menu, "mnu_event_18"),
				(assign, "$g_fourth_event", 3),
			(else_try),
				(eq, "$g_fourth_event", 3),
				(jump_to_menu, "mnu_event_19"),
				(assign, "$g_fourth_event", 4),
			(else_try),
				(eq, "$g_fourth_event", 4),
				(jump_to_menu, "mnu_event_22"),
				(assign, "$g_fourth_event", 5),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(320.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 4),
			(this_or_next|eq, ":current_terrain_main_party", 5),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(this_or_next|eq, ":current_terrain_main_party", 11),
			(this_or_next|eq, ":current_terrain_main_party", 12),
			(eq, ":current_terrain_main_party", 13),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(troop_get_slot, ":player_renown", "trp_player", slot_troop_renown),
			(gt, ":player_renown", 220),
			(try_begin),
				(eq, "$g_fifth_event", 0),
				(jump_to_menu, "mnu_event_35"),
				(assign, "$g_fifth_event", 1),
			(else_try),
				(eq, "$g_fifth_event", 1),
				(jump_to_menu, "mnu_event_37"),
				(assign, "$g_fifth_event", 2),
			(else_try),
				(eq, "$g_fifth_event", 2),
				(jump_to_menu, "mnu_event_38"),
				(assign, "$g_fifth_event", 3),
			(else_try),
				(eq, "$g_fifth_event", 3),
				(jump_to_menu, "mnu_event_39"),
				(assign, "$g_fifth_event", 4),
			(else_try),
				(eq, "$g_fifth_event", 4),
				(jump_to_menu, "mnu_event_40"),
				(assign, "$g_fifth_event", 5),
			(else_try),
				(eq, "$g_fifth_event", 5),
				(jump_to_menu, "mnu_event_42"),
				(assign, "$g_fifth_event", 6),
			(else_try),
				(eq, "$g_fifth_event", 6),
				(jump_to_menu, "mnu_event_41"),
				(assign, "$g_fifth_event", 7),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(340.0,
		[
			(neq, "$freelancer_state", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(neq, "$g_player_is_captive", 1),
			(neq, "$g_player_icon_state", 2),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 4),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(this_or_next|eq, ":current_terrain_main_party", 11),
			(this_or_next|eq, ":current_terrain_main_party", 12),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(store_random_in_range, ":random_in_range_0_13", 0, 13),
			(try_begin),
				(eq, ":random_in_range_0_13", 0),
				(jump_to_menu, "mnu_event_10"),
			(else_try),
				(eq, ":random_in_range_0_13", 1),
				(jump_to_menu, "mnu_event_09"),
			(else_try),
				(eq, ":random_in_range_0_13", 2),
				(jump_to_menu, "mnu_event_25"),
			(else_try),
				(eq, ":random_in_range_0_13", 3),
				(jump_to_menu, "mnu_event_15"),
			(else_try),
				(eq, ":random_in_range_0_13", 4),
				(jump_to_menu, "mnu_event_16"),
			(else_try),
				(eq, ":random_in_range_0_13", 5),
				(jump_to_menu, "mnu_event_20"),
			(else_try),
				(eq, ":random_in_range_0_13", 6),
				(jump_to_menu, "mnu_event_21"),
			(else_try),
				(eq, ":random_in_range_0_13", 7),
				(jump_to_menu, "mnu_event_17"),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(200.0,
		[
			(assign, ":value", 0),
			(try_for_range, ":party", "p_town_1", "p_castle_1"),
				(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
				(eq, ":party_town_lord", "trp_player"),
				(assign, ":value", 1),
			(try_end),
			(eq, ":value", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 4),
			(this_or_next|eq, ":current_terrain_main_party", 5),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(this_or_next|eq, ":current_terrain_main_party", 11),
			(this_or_next|eq, ":current_terrain_main_party", 12),
			(eq, ":current_terrain_main_party", 13),
			(neq, "$g_player_is_captive", 1),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(troop_get_slot, ":player_renown", "trp_player", slot_troop_renown),
			(gt, ":player_renown", 180),
			(try_begin),
				(eq, "$g_feast_event", 0),
				(jump_to_menu, "mnu_feast_event_1"),
				(assign, "$g_feast_event", 1),
			(else_try),
				(eq, "$g_feast_event", 1),
				(jump_to_menu, "mnu_feast_event_2"),
				(assign, "$g_feast_event", 2),
			(else_try),
				(eq, "$g_feast_event", 2),
				(jump_to_menu, "mnu_feast_event_3"),
				(assign, "$g_feast_event", 3),
			(else_try),
				(eq, "$g_feast_event", 3),
				(jump_to_menu, "mnu_feast_event_4"),
				(assign, "$g_feast_event", 4),
			(else_try),
				(eq, "$g_feast_event", 4),
				(jump_to_menu, "mnu_feast_event_5"),
				(assign, "$g_feast_event", 5),
			(else_try),
				(eq, "$g_feast_event", 5),
				(jump_to_menu, "mnu_feast_event_6"),
				(assign, "$g_feast_event", 6),
			(else_try),
				(eq, "$g_feast_event", 6),
				(jump_to_menu, "mnu_feast_event_7"),
				(assign, "$g_feast_event", 7),
			(else_try),
				(eq, "$g_feast_event", 7),
				(jump_to_menu, "mnu_feast_event_8"),
				(assign, "$g_feast_event", 8),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(280.0,
		[
			(assign, ":value", 0),
			(try_for_range, ":party", "p_town_1", "p_castle_1"),
				(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
				(eq, ":party_town_lord", "trp_player"),
				(assign, ":value", 1),
			(try_end),
			(eq, ":value", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 4),
			(this_or_next|eq, ":current_terrain_main_party", 5),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(this_or_next|eq, ":current_terrain_main_party", 11),
			(this_or_next|eq, ":current_terrain_main_party", 12),
			(eq, ":current_terrain_main_party", 13),
			(neq, "$g_player_is_captive", 1),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(troop_get_slot, ":player_renown", "trp_player", slot_troop_renown),
			(gt, ":player_renown", 180),
			(try_begin),
				(eq, "$g_crusader_kings_event", 0),
				(jump_to_menu, "mnu_crusader_kings_event_1"),
				(assign, "$g_crusader_kings_event", 1),
			(else_try),
				(eq, "$g_crusader_kings_event", 1),
				(jump_to_menu, "mnu_crusader_kings_event_2"),
				(assign, "$g_crusader_kings_event", 2),
			(else_try),
				(eq, "$g_crusader_kings_event", 2),
				(jump_to_menu, "mnu_crusader_kings_event_3"),
				(assign, "$g_crusader_kings_event", 3),
			(else_try),
				(eq, "$g_crusader_kings_event", 3),
				(jump_to_menu, "mnu_crusader_kings_event_4"),
				(assign, "$g_crusader_kings_event", 4),
			(else_try),
				(eq, "$g_crusader_kings_event", 4),
				(jump_to_menu, "mnu_crusader_kings_event_5"),
				(assign, "$g_crusader_kings_event", 5),
			(else_try),
				(eq, "$g_crusader_kings_event", 5),
				(jump_to_menu, "mnu_crusader_kings_event_6"),
				(assign, "$g_crusader_kings_event", 6),
			(else_try),
				(eq, "$g_crusader_kings_event", 6),
				(jump_to_menu, "mnu_crusader_kings_event_7"),
				(assign, "$g_crusader_kings_event", 7),
			(else_try),
				(eq, "$g_crusader_kings_event", 7),
				(jump_to_menu, "mnu_crusader_kings_event_8"),
				(assign, "$g_crusader_kings_event", 8),
			(else_try),
				(eq, "$g_crusader_kings_event", 8),
				(jump_to_menu, "mnu_crusader_kings_event_9"),
				(assign, "$g_crusader_kings_event", 9),
			(else_try),
				(eq, "$g_crusader_kings_event", 9),
				(jump_to_menu, "mnu_crusader_kings_event_10"),
				(assign, "$g_crusader_kings_event", 10),
			(else_try),
				(eq, "$g_crusader_kings_event", 10),
				(jump_to_menu, "mnu_crusader_kings_event_11"),
				(assign, "$g_crusader_kings_event", 11),
			(else_try),
				(eq, "$g_crusader_kings_event", 11),
				(jump_to_menu, "mnu_crusader_kings_event_12"),
				(assign, "$g_crusader_kings_event", 12),
			(else_try),
				(eq, "$g_crusader_kings_event", 12),
				(jump_to_menu, "mnu_crusader_kings_event_13"),
				(assign, "$g_crusader_kings_event", 13),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(220.0,
		[
			(assign, ":value", 0),
			(try_for_range, ":party", "p_town_1", "p_castle_1"),
				(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
				(eq, ":party_town_lord", "trp_player"),
				(assign, ":value", 1),
			(try_end),
			(eq, ":value", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 4),
			(this_or_next|eq, ":current_terrain_main_party", 5),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(this_or_next|eq, ":current_terrain_main_party", 11),
			(this_or_next|eq, ":current_terrain_main_party", 12),
			(eq, ":current_terrain_main_party", 13),
			(neq, "$g_player_is_captive", 1),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(troop_get_slot, ":player_renown", "trp_player", slot_troop_renown),
			(gt, ":player_renown", 400),
			(try_begin),
				(eq, "$g_law_event", 0),
				(jump_to_menu, "mnu_law_event_1"),
				(assign, "$g_law_event", 1),
			(else_try),
				(eq, "$g_law_event", 1),
				(jump_to_menu, "mnu_law_event_2"),
				(assign, "$g_law_event", 2),
			(else_try),
				(eq, "$g_law_event", 2),
				(jump_to_menu, "mnu_law_event_3"),
				(assign, "$g_law_event", 3),
			(else_try),
				(eq, "$g_law_event", 3),
				(jump_to_menu, "mnu_law_event_4"),
				(assign, "$g_law_event", 4),
			(else_try),
				(eq, "$g_law_event", 4),
				(jump_to_menu, "mnu_law_event_5"),
				(assign, "$g_law_event", 5),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(100.0,
		[
			(assign, ":value", 0),
			(try_for_range, ":party", "p_town_1", "p_castle_1"),
				(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
				(eq, ":party_town_lord", "trp_player"),
				(assign, ":value", 1),
			(try_end),
			(eq, ":value", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(eq, ":current_terrain_main_party", 11),
			(neq, "$g_player_is_captive", 1),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(troop_get_slot, ":player_renown", "trp_player", slot_troop_renown),
			(gt, ":player_renown", 180),
			(store_random_in_range, ":random_in_range_0_10", 0, 10),
			(try_begin),
				(eq, ":random_in_range_0_10", 0),
				(jump_to_menu, "mnu_hunting_event_1"),
			(else_try),
				(eq, ":random_in_range_0_10", 1),
				(jump_to_menu, "mnu_hunting_event_2"),
			(else_try),
				(eq, ":random_in_range_0_10", 2),
				(jump_to_menu, "mnu_hunting_event_3"),
			(else_try),
				(eq, ":random_in_range_0_10", 3),
				(jump_to_menu, "mnu_hunting_event_4"),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(290.0,
		[
			(assign, ":value", 0),
			(try_for_range, ":party", "p_town_1", "p_castle_1"),
				(party_get_slot, ":party_town_lord", ":party", slot_town_lord),
				(eq, ":party_town_lord", "trp_player"),
				(assign, ":value", 1),
			(try_end),
			(eq, ":value", 1),
			(neq, "$g_camp_mode", 1),
			(neq, "$g_town_visit_after_rest", 1),
			(party_get_current_terrain, ":current_terrain_main_party", "p_main_party"),
			(this_or_next|eq, ":current_terrain_main_party", 2),
			(this_or_next|eq, ":current_terrain_main_party", 3),
			(this_or_next|eq, ":current_terrain_main_party", 4),
			(this_or_next|eq, ":current_terrain_main_party", 5),
			(this_or_next|eq, ":current_terrain_main_party", 10),
			(this_or_next|eq, ":current_terrain_main_party", 11),
			(this_or_next|eq, ":current_terrain_main_party", 12),
			(eq, ":current_terrain_main_party", 13),
			(neq, "$g_player_is_captive", 1),
			(neg|troop_slot_ge, "trp_player", 8, 0),
			(troop_get_slot, ":player_renown", "trp_player", slot_troop_renown),
			(gt, ":player_renown", 180),
			(try_begin),
				(eq, "$g_juicio", 0),
				(jump_to_menu, "mnu_event_01_juicio"),
				(assign, "$g_juicio", 1),
			(else_try),
				(eq, "$g_juicio", 1),
				(jump_to_menu, "mnu_event_02_juicio"),
				(assign, "$g_juicio", 2),
			(else_try),
				(eq, "$g_juicio", 2),
				(jump_to_menu, "mnu_event_03_juicio"),
				(assign, "$g_juicio", 3),
			(else_try),
				(eq, "$g_juicio", 3),
				(jump_to_menu, "mnu_event_04_juicio"),
				(assign, "$g_juicio", 4),
			(else_try),
				(eq, "$g_juicio", 4),
				(jump_to_menu, "mnu_event_06_juicio"),
				(assign, "$g_juicio", 5),
			(else_try),
				(eq, "$g_juicio", 5),
				(jump_to_menu, "mnu_event_07_juicio"),
				(assign, "$g_juicio", 6),
			(else_try),
				(eq, "$g_juicio", 6),
				(jump_to_menu, "mnu_event_08_juicio"),
				(assign, "$g_juicio", 7),
			(else_try),
				(eq, "$g_juicio", 7),
				(jump_to_menu, "mnu_event_09_juicio"),
				(assign, "$g_juicio", 8),
			(else_try),
				(eq, "$g_juicio", 8),
				(jump_to_menu, "mnu_event_11_juicio"),
				(assign, "$g_juicio", 9),
			(else_try),
				(eq, "$g_juicio", 9),
				(jump_to_menu, "mnu_event_12_juicio"),
				(assign, "$g_juicio", 10),
			(else_try),
				(eq, "$g_juicio", 10),
				(jump_to_menu, "mnu_event_13_juicio"),
				(assign, "$g_juicio", 11),
			(else_try),
				(eq, "$g_juicio", 11),
				(jump_to_menu, "mnu_event_14_juicio"),
				(assign, "$g_juicio", 12),
			(else_try),
				(eq, "$g_juicio", 12),
				(jump_to_menu, "mnu_event_15_juicio"),
				(assign, "$g_juicio", 13),
			(else_try),
				(eq, "$g_juicio", 13),
				(jump_to_menu, "mnu_event_16_juicio"),
				(assign, "$g_juicio", 14),
			(else_try),
				(eq, "$g_juicio", 14),
				(jump_to_menu, "mnu_event_17_juicio"),
				(assign, "$g_juicio", 15),
			(else_try),
				(eq, "$g_juicio", 15),
				(jump_to_menu, "mnu_event_18_juicio"),
				(assign, "$g_juicio", 16),
			(else_try),
				(eq, "$g_juicio", 16),
				(jump_to_menu, "mnu_event_19_juicio"),
				(assign, "$g_juicio", 17),
			(else_try),
				(eq, "$g_juicio", 17),
				(jump_to_menu, "mnu_event_20_juicio"),
				(assign, "$g_juicio", 18),
			(else_try),
				(eq, "$g_juicio", 18),
				(jump_to_menu, "mnu_event_21_juicio"),
				(assign, "$g_juicio", 19),
			(else_try),
				(eq, "$g_juicio", 19),
				(jump_to_menu, "mnu_event_22_juicio"),
				(assign, "$g_juicio", 20),
			(else_try),
				(eq, "$g_juicio", 20),
				(jump_to_menu, "mnu_event_23_juicio"),
				(assign, "$g_juicio", 21),
			(else_try),
				(eq, "$g_juicio", 21),
				(jump_to_menu, "mnu_event_24_juicio"),
				(assign, "$g_juicio", 22),
			(else_try),
				(eq, "$g_juicio", 22),
				(jump_to_menu, "mnu_event_05_juicio"),
				(assign, "$g_juicio", 23),
			(else_try),
				(eq, "$g_juicio", 23),
				(jump_to_menu, "mnu_event_10_juicio"),
				(assign, "$g_juicio", 24),
			(else_try),
				(display_message, "@ "),
			(try_end)
		]),

	(0.0,
		[
			(map_free),
			(this_or_next|key_clicked, 24),
			(neq, "$g_lco_operation", 0),
			(try_begin),
				(this_or_next|key_clicked, 24),
				(eq, "$g_lco_operation", 1),
				(assign, "$g_lco_operation", 0),
				(jump_to_menu, "mnu_lco_presentation"),
			(else_try),
				(eq, "$g_lco_operation", 2),
				(jump_to_menu, "mnu_lco_view_character"),
			(try_end)
		]),

	(24.0,
		[
			(eq, "$liege_reward", 1),
			(store_free_inventory_capacity, ":free_inventory_capacity"),
			(ge, ":free_inventory_capacity", 1),
			(assign, "$liege_reward", 0),
			(troop_add_item, "trp_player", "$liege_item", 0),
			(call_script, "script_add_notification_menu", "mnu_notification_give_liege_gift", "$liege_item", 0),
			(assign, "$liege_item", -1)
		]),

	(168.0,
		[
			(eq, "$freelancer_state", 1),
			(store_current_hours, reg0),
			(val_add, reg0, 168),
			(quest_set_slot, "qst_freelancer_enlisted", slot_quest_target_item, reg0),
			(try_begin),
				(troop_get_upgrade_troop, ":upgrade_troop_player_cur_troop_0", "$player_cur_troop", 0),
				(gt, ":upgrade_troop_player_cur_troop_0", 1),
				(quest_slot_ge, "qst_freelancer_enlisted", 13, 1),
				(quest_get_slot, ":freelancer_enlisted_object_state", "qst_freelancer_enlisted", slot_quest_object_state),
				(troop_get_xp, ":xp_player", "trp_player"),
				(store_sub, ":value", ":xp_player", ":freelancer_enlisted_object_state"),
				(neg|quest_slot_ge, "qst_freelancer_enlisted", 13, ":value"),
				(jump_to_menu, "mnu_upgrade_path"),
			(try_end),
			(store_character_level, ":character_level_player_cur_troop", "$player_cur_troop"),
			(store_mul, ":value_2", 10, ":character_level_player_cur_troop"),
			(troop_add_gold, "trp_player", ":value_2"),
			(add_xp_to_troop, 70, "trp_player"),
			(play_sound, "snd_money_received", 0),
			(assign, ":var_7", 0),
			(troop_get_inventory_capacity, ":inventory_capacity_player", "trp_player"),
			(try_for_range, ":number", 0, ":inventory_capacity_player"),
				(troop_get_inventory_slot, ":inventory_slot_player_number", "trp_player", ":number"),
				(ge, ":inventory_slot_player_number", 0),
				(is_between, ":inventory_slot_player_number", "itm_trade_smoked_fish", "itm_trade_dummy01"),
				(troop_inventory_slot_get_item_amount, reg0, "trp_player", ":number"),
				(val_add, ":var_7", reg0),
			(try_end),
			(try_begin),
				(lt, ":var_7", 10),
				(troop_add_item, "trp_player", "itm_trade_bread"),
			(try_end)
		]),

	(1.0,
		[
			(eq, "$freelancer_state", 1),
			(set_camera_follow_party, "$enlisted_party"),
			(party_relocate_near_party, "p_main_party", "$enlisted_party", 1)
		]),

	(1.0,
		[
			(try_begin),
				(eq, 0, 1),
				(display_log_message, "@array GC"),
			(try_end),
			(try_for_parties, ":var_1"),
				(call_script, "script_cf_array_is_array", ":var_1"),
				(call_script, "script_array_get_owner", ":var_1"),
				(assign, ":var_2", reg0),
				(try_begin),
					(this_or_next|eq, ":var_2", 0),
					(this_or_next|party_slot_eq, ":var_2", 997, 65534),
					(party_is_active, ":var_2"),
					(try_begin),
						(eq, 0, 1),
						(display_log_message, "@array GC: owner active, an array or is 0"),
					(try_end),
				(else_try),
					(assign, reg21, ":var_1"),
					(try_begin),
						(eq, 0, 1),
						(display_log_message, "@array GC: removing {reg21}"),
					(try_end),
					(call_script, "script_array_destroy", ":var_1"),
				(try_end),
			(try_end)
		]),

	(1.0,
		[
			(map_free),
			(eq, "$player_needs_a_banner", 1),
			(assign, "$player_needs_a_banner", 0),
			(start_presentation, "prsnt_banner_selection")
		]),

]